MP2COD 3.90, COFF to COD File Converter
Copyright (c) 2004 Microchip Technology Inc.
Listing File Generated: Sun Apr 27 13:05:12 2008


Address  Value    Disassembly              Source                                                                           File
-------  -------  -----------------------  -------------------------------------------------------------------------------  -----
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	TITLE		adc.c                                                                   C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	VERSION:	0.4 (Beta)                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	DATE:		10-Jan-2006                                                             C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\code\2008\Fresh Copy - 2008\adc.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	COMMENTS:	You are free to use this source code for any non-commercial          C:\code\2008\Fresh Copy - 2008\adc.c
                                           *				use. Please do not make copies of this source code, modified                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *				or un-modified, publicly available on the internet or                       C:\code\2008\Fresh Copy - 2008\adc.c
                                           *				elsewhere without permission. Thanks.                                       C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *				Copyright ©2005-2006 R. Kevin Watson. All rights are reserved.              C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           ******************************************************************************** C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	CHANGE LOG:                                                                    C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	10-Jul-2005  0.1  RKW - Original code.                                         C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	17-Jul-2005  0.2  RKW - Added x128 and x256 oversampling options.              C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	13-Dec-2005  0.3  RKW - Altered code to use the "special event trigger"        C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	                  functionality of the CCP2 hardware to initiate ADC           C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	                  conversions. This was formally done using timer 2.           C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	10-Jan-2006  0.4  RKW - Ported to PIC18F8722, which required going back        C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	                  to using timer 2 to initiate an analog to digital            C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	                  conversion due to a bug in the PIC18F8722 design.            C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	                  Modified #pragma interruptlow statement to include           C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	                  .tmpdata section.                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           #include "adc.h"                                                                 C:\code\2008\Fresh Copy - 2008\adc.c
                                           #include "ifi_aliases.h"                                                         C:\code\2008\Fresh Copy - 2008\adc.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           unsigned int adc_sample_rate;                                                    C:\code\2008\Fresh Copy - 2008\adc.c
                                           unsigned int adc_samples_per_update;                                             C:\code\2008\Fresh Copy - 2008\adc.c
                                           unsigned char num_adc_channels;                                                  C:\code\2008\Fresh Copy - 2008\adc.c
                                           unsigned char adc_result_divisor;                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           volatile unsigned long accum[NUM_ADC_CHANNELS]; // sample accumulator            C:\code\2008\Fresh Copy - 2008\adc.c
                                           volatile unsigned int adc_result[NUM_ADC_CHANNELS]; // ADC recults               C:\code\2008\Fresh Copy - 2008\adc.c
                                           volatile unsigned int samples; // current number of samples accumulated          C:\code\2008\Fresh Copy - 2008\adc.c
                                           volatile unsigned char channel; // current ADC channel                           C:\code\2008\Fresh Copy - 2008\adc.c
                                           volatile unsigned char adc_update_count = 0; // ADC update flag                  C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	FUNCTION:		Initialize_ADC()                                                    C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	PURPOSE:		Initializes the Analog to Digital Conversion (ADC) hardware.         C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	COMMENTS:		Place "#include "adc.h" in the includes section                     C:\code\2008\Fresh Copy - 2008\adc.c
                                           *					of user_routines.c then call Initialize_ADC() in                           C:\code\2008\Fresh Copy - 2008\adc.c
                                           *					user_routines.c/User_Initialization().                                     C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\adc.c
003f7c   cfd9     MOVFF     0xfd9,0xfe6    void Initialize_ADC(void)                                                        C:\code\2008\Fresh Copy - 2008\adc.c
003f7e   ffe6                                                                                                               
003f80   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003f82   ffd9                                                                                                               
003f84   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           	unsigned char i;                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// Initialize ADC related global variables using default values from adc.h.     C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// Another way to do this would be to pass the values in, read them from        C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// values stored in EEPROM or perhaps set them via a menu-based terminal        C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// interface.                                                                   C:\code\2008\Fresh Copy - 2008\adc.c
003f86   0ec8     MOVLW     0xc8           	adc_sample_rate = ADC_SAMPLE_RATE;                                              C:\code\2008\Fresh Copy - 2008\adc.c
003f88   0101     MOVLB     0x1                                                                                             
003f8a   6fe9     MOVWF     0xe9,0x1                                                                                        
003f8c   6bea     CLRF      0xea,0x1                                                                                        
003f8e   0e02     MOVLW     0x2            	num_adc_channels = NUM_ADC_CHANNELS;                                            C:\code\2008\Fresh Copy - 2008\adc.c
003f90   6fed     MOVWF     0xed,0x1                                                                                        
003f92   0e01     MOVLW     0x1            	adc_result_divisor = ADC_RESULT_DIVISOR;                                        C:\code\2008\Fresh Copy - 2008\adc.c
003f94   6fee     MOVWF     0xee,0x1                                                                                        
003f96   0e04     MOVLW     0x4            	adc_samples_per_update = ADC_SAMPLES_PER_UPDATE;                                C:\code\2008\Fresh Copy - 2008\adc.c
003f98   6feb     MOVWF     0xeb,0x1                                                                                        
003f9a   6bec     CLRF      0xec,0x1                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// reset the sample accumulator(s) to zero                                      C:\code\2008\Fresh Copy - 2008\adc.c
003f9c   6adf     CLRF      0xdf,0x0       	for(i=0; i < num_adc_channels; i++)                                             C:\code\2008\Fresh Copy - 2008\adc.c
003f9e   51ed     MOVF      0xed,0x0,0x1                                                                                    
003fa0   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
003fa2   e210     BC        0x3fc4                                                                                          
003fc0   2adf     INCF      0xdf,0x1,0x0                                                                                    
003fc2   d7ed     BRA       0x3f9e                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\adc.c
003fa4   50df     MOVF      0xdf,0x0,0x0   		accum[i] = 0L;                                                                 C:\code\2008\Fresh Copy - 2008\adc.c
003fa6   0d04     MULLW     0x4                                                                                             
003fa8   cff3     MOVFF     0xff3,0xfe9                                                                                     
003faa   ffe9                                                                                                               
003fac   cff4     MOVFF     0xff4,0xfea                                                                                     
003fae   ffea                                                                                                               
003fb0   0eef     MOVLW     0xef                                                                                            
003fb2   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
003fb4   0e01     MOVLW     0x1                                                                                             
003fb6   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
003fb8   6aee     CLRF      0xee,0x0                                                                                        
003fba   6aee     CLRF      0xee,0x0                                                                                        
003fbc   6aee     CLRF      0xee,0x0                                                                                        
003fbe   6aee     CLRF      0xee,0x0                                                                                        
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// start a new sample set                                                       C:\code\2008\Fresh Copy - 2008\adc.c
003fc4   6bfb     CLRF      0xfb,0x1       	samples = 0;                                                                    C:\code\2008\Fresh Copy - 2008\adc.c
003fc6   6bfc     CLRF      0xfc,0x1                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// start at ADC channel zero                                                    C:\code\2008\Fresh Copy - 2008\adc.c
003fc8   6bfd     CLRF      0xfd,0x1       	channel = 0;                                                                    C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// enable the ADC hardware and select ADC channel 0                             C:\code\2008\Fresh Copy - 2008\adc.c
003fca   0e01     MOVLW     0x1            	ADCON0 = 0b00000001;                                                            C:\code\2008\Fresh Copy - 2008\adc.c
003fcc   6ec2     MOVWF     0xc2,0x0                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	#ifdef _FRC_BOARD                                                               C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// If this is being built for the FRC-RC, enable all sixteen analog             C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// inputs. This shouldn't be changed because the FRC-RC has sixteen             C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// dedicated analog inputs. The VCFG0 and VCFG1 bits are also set to            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// select Vdd and Vss as the reference voltages                                 C:\code\2008\Fresh Copy - 2008\adc.c
003fce   6ac1     CLRF      0xc1,0x0       	ADCON1 = 0;                                                                     C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	#else                                                                           C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// If this is being built for the EDU-RC, enable NUM_ADC_CHANNELS               C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// analog inputs (NUM_ADC_CHANNELS is documented in adc.h). This must           C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// match the default value used in user_routines.c/User_Initialization()/       C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// Set_Number_of_Analog_Channels(). The VCFG0 and VCFG1 bits are also           C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// set to select Vdd and Vss as the reference voltages                          C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	if(num_adc_channels >= 1 && num_adc_channels <= 14)                             C:\code\2008\Fresh Copy - 2008\adc.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\adc.c
                                           		ADCON1 = 15 - num_adc_channels;                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\adc.c
                                            	else                                                                           C:\code\2008\Fresh Copy - 2008\adc.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\adc.c
                                           		ADCON1 = 0; // sixteen channnels or out of range                               C:\code\2008\Fresh Copy - 2008\adc.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	#endif                                                                          C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// select Fosc/64 as the ADC Conversion Clock and right justify data            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// in the conversion result register                                            C:\code\2008\Fresh Copy - 2008\adc.c
003fd0   0e86     MOVLW     0x86           	ADCON2 = 0b10000110;                                                            C:\code\2008\Fresh Copy - 2008\adc.c
003fd2   6ec0     MOVWF     0xc0,0x0                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// ADC interrupt is low priority                                                C:\code\2008\Fresh Copy - 2008\adc.c
003fd4   9c9f     BCF       0x9f,0x6,0x0   	IPR1bits.ADIP = 0;                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// to prevent a spurious interrupt, make sure the interrupt flag is reset       C:\code\2008\Fresh Copy - 2008\adc.c
003fd6   9c9e     BCF       0x9e,0x6,0x0   	PIR1bits.ADIF = 0;                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// enable the ADC interrupt                                                     C:\code\2008\Fresh Copy - 2008\adc.c
003fd8   8c9d     BSF       0x9d,0x6,0x0   	PIE1bits.ADIE = 1;                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// initialize and start timer 2, which is responsible for starting              C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// analog to digital conversions                                                C:\code\2008\Fresh Copy - 2008\adc.c
003fda   c1e9     MOVFF     0x1e9,0xfe6    	Initialize_Timer_2(adc_sample_rate);                                            C:\code\2008\Fresh Copy - 2008\adc.c
003fdc   ffe6                                                                                                               
003fde   c1ea     MOVFF     0x1ea,0xfe6                                                                                     
003fe0   ffe6                                                                                                               
003fe2   d814     RCALL     0x400c                                                                                          
003fe4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003fe6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003fe8   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
003fea   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003fec   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003fee   ffd9                                                                                                               
003ff0   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	FUNCTION:		Disable_ADC()                                                       C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	PURPOSE:		Disables the Analog to Digital Conversion (ADC) hardware.            C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\adc.c
003ff2   cfd9     MOVFF     0xfd9,0xfe6    void Disable_ADC(void)                                                           C:\code\2008\Fresh Copy - 2008\adc.c
003ff4   ffe6                                                                                                               
003ff6   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003ff8   ffd9                                                                                                               
003ffa   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           	unsigned char i;                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// disable timer 2                                                              C:\code\2008\Fresh Copy - 2008\adc.c
003ffc   d85f     RCALL     0x40bc         	Disable_Timer_2();                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// disable the ADC interrupt                                                    C:\code\2008\Fresh Copy - 2008\adc.c
003ffe   9c9d     BCF       0x9d,0x6,0x0   	PIE1bits.ADIE = 0;                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// disable the ADC hardware and select ADC channel 0                            C:\code\2008\Fresh Copy - 2008\adc.c
004000   6ac2     CLRF      0xc2,0x0       	ADCON0 = 0b00000000;                                                            C:\code\2008\Fresh Copy - 2008\adc.c
004002   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
004004   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004006   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004008   ffd9                                                                                                               
00400a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	FUNCTION:		Initialize_Timer_2()                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	PURPOSE:		Initializes the timer 2 hardware, which is responsible for           C:\code\2008\Fresh Copy - 2008\adc.c
                                           *					periodically starting analog to digital conversions.                       C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	CALLED FROM:	adc.c/Initialize_ADC()                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	PARAMETERS:		Unsigned integer containing the sample rate expressed in Hz       C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	COMMENTS:		The only supported sample rates are 200Hz, 400Hz, 800Hz,            C:\code\2008\Fresh Copy - 2008\adc.c
                                           *					1600Hz, 3200Hz and 6400Hz.                                                 C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\adc.c
00400c   cfd9     MOVFF     0xfd9,0xfe6    void Initialize_Timer_2(unsigned int adc_sample_rate)                            C:\code\2008\Fresh Copy - 2008\adc.c
00400e   ffe6                                                                                                               
004010   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004012   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
004014   0efd     MOVLW     0xfd           	switch(adc_sample_rate)                                                         C:\code\2008\Fresh Copy - 2008\adc.c
004016   cfdb     MOVFF     0xfdb,0x41                                                                                      
004018   f041                                                                                                               
00401a   0efe     MOVLW     0xfe                                                                                            
00401c   cfdb     MOVFF     0xfdb,0x42                                                                                      
00401e   f042                                                                                                               
004020   5041     MOVF      0x41,0x0,0x0                                                                                    
004022   e102     BNZ       0x4028                                                                                          
004024   0e19     MOVLW     0x19                                                                                            
004026   1842     XORWF     0x42,0x0,0x0                                                                                    
004028   e03b     BZ        0x40a0                                                                                          
00402a   0e80     MOVLW     0x80                                                                                            
00402c   1841     XORWF     0x41,0x0,0x0                                                                                    
00402e   e102     BNZ       0x4034                                                                                          
004030   0e0c     MOVLW     0xc                                                                                             
004032   1842     XORWF     0x42,0x0,0x0                                                                                    
004034   e030     BZ        0x4096                                                                                          
004036   0e40     MOVLW     0x40                                                                                            
004038   1841     XORWF     0x41,0x0,0x0                                                                                    
00403a   e102     BNZ       0x4040                                                                                          
00403c   0e06     MOVLW     0x6                                                                                             
00403e   1842     XORWF     0x42,0x0,0x0                                                                                    
004040   e025     BZ        0x408c                                                                                          
004042   0e20     MOVLW     0x20                                                                                            
004044   1841     XORWF     0x41,0x0,0x0                                                                                    
004046   e102     BNZ       0x404c                                                                                          
004048   0e03     MOVLW     0x3                                                                                             
00404a   1842     XORWF     0x42,0x0,0x0                                                                                    
00404c   e01a     BZ        0x4082                                                                                          
00404e   0e90     MOVLW     0x90                                                                                            
004050   1841     XORWF     0x41,0x0,0x0                                                                                    
004052   e102     BNZ       0x4058                                                                                          
004054   0e01     MOVLW     0x1                                                                                             
004056   1842     XORWF     0x42,0x0,0x0                                                                                    
004058   e00f     BZ        0x4078                                                                                          
00405a   0ec8     MOVLW     0xc8                                                                                            
00405c   1841     XORWF     0x41,0x0,0x0                                                                                    
00405e   e101     BNZ       0x4062                                                                                          
004060   5042     MOVF      0x42,0x0,0x0                                                                                    
004062   e005     BZ        0x406e                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\adc.c
                                           		case 200:                                                                      C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// use these parameters for a 200Hz ADC sample rate                           C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// use a 1:16 prescaler and 1:14 postscaler                                   C:\code\2008\Fresh Copy - 2008\adc.c
00406e   0e6a     MOVLW     0x6a           			T2CON = 0b01101010;                                                           C:\code\2008\Fresh Copy - 2008\adc.c
004070   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// Count to 221 before rolling over and generating                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// an interrupt (223.21 - 2 is ideal)                                         C:\code\2008\Fresh Copy - 2008\adc.c
004072   0edd     MOVLW     0xdd           			PR2	= 221;                                                                    C:\code\2008\Fresh Copy - 2008\adc.c
004074   6ecb     MOVWF     0xcb,0x0                                                                                        
004076   d019     BRA       0x40aa         			break;                                                                        C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           		case 400:                                                                      C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// use these parameters for a 400Hz ADC sample rate                           C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// use a 1:16 prescaler and 1:11 postscaler                                   C:\code\2008\Fresh Copy - 2008\adc.c
004078   0e52     MOVLW     0x52           			T2CON = 0b01010010;                                                           C:\code\2008\Fresh Copy - 2008\adc.c
00407a   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// Count to 140 before rolling over and generating                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// an interrupt (142.05 - 2 is ideal)                                         C:\code\2008\Fresh Copy - 2008\adc.c
00407c   0e8c     MOVLW     0x8c           			PR2	= 140;                                                                    C:\code\2008\Fresh Copy - 2008\adc.c
00407e   6ecb     MOVWF     0xcb,0x0                                                                                        
004080   d014     BRA       0x40aa         			break;                                                                        C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           		case 800:                                                                      C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// use these parameters for a 800Hz ADC sample rate                           C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// use a 1:16 prescaler and 1:11 postscaler                                   C:\code\2008\Fresh Copy - 2008\adc.c
004082   0e52     MOVLW     0x52           			T2CON = 0b01010010;                                                           C:\code\2008\Fresh Copy - 2008\adc.c
004084   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// Count to 69 before rolling over and generating                             C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// an interrupt (71.02 - 2 is ideal)                                          C:\code\2008\Fresh Copy - 2008\adc.c
004086   0e45     MOVLW     0x45           			PR2	= 69;                                                                     C:\code\2008\Fresh Copy - 2008\adc.c
004088   6ecb     MOVWF     0xcb,0x0                                                                                        
00408a   d00f     BRA       0x40aa         			break;                                                                        C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           		case 1600:                                                                     C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// use these parameters for a 1600Hz ADC sample rate                          C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// use a 1:4 prescaler and 1:11 postscaler                                    C:\code\2008\Fresh Copy - 2008\adc.c
00408c   0e51     MOVLW     0x51           			T2CON = 0b01010001;                                                           C:\code\2008\Fresh Copy - 2008\adc.c
00408e   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// Count to 140 before rolling over and generating                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// an interrupt (142.05 - 2 is ideal)                                         C:\code\2008\Fresh Copy - 2008\adc.c
004090   0e8c     MOVLW     0x8c           			PR2	= 140;                                                                    C:\code\2008\Fresh Copy - 2008\adc.c
004092   6ecb     MOVWF     0xcb,0x0                                                                                        
004094   d00a     BRA       0x40aa         			break;                                                                        C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           		case 3200:                                                                     C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// use these parameters for a 3200Hz ADC sample rate                          C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// use a 1:1 prescaler and 1:11 postscaler                                    C:\code\2008\Fresh Copy - 2008\adc.c
004096   0e51     MOVLW     0x51           			T2CON = 0b01010001;                                                           C:\code\2008\Fresh Copy - 2008\adc.c
004098   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// Count to 69 before rolling over and generating                             C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// an interrupt (71.02 - 2 is ideal)                                          C:\code\2008\Fresh Copy - 2008\adc.c
00409a   0e45     MOVLW     0x45           			PR2	= 69;                                                                     C:\code\2008\Fresh Copy - 2008\adc.c
00409c   6ecb     MOVWF     0xcb,0x0                                                                                        
00409e   d005     BRA       0x40aa         			break;                                                                        C:\code\2008\Fresh Copy - 2008\adc.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           		case 6400:                                                                     C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// use these parameters for a 6400Hz ADC sample rate                          C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// use a 1:4 prescaler and 1:11 postscaler                                    C:\code\2008\Fresh Copy - 2008\adc.c
0040a0   0e50     MOVLW     0x50           			T2CON = 0b01010000;                                                           C:\code\2008\Fresh Copy - 2008\adc.c
0040a2   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// Count to 140 before rolling over and generating                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// an interrupt (142.05 - 2 is ideal)                                         C:\code\2008\Fresh Copy - 2008\adc.c
0040a4   0e8c     MOVLW     0x8c           			PR2	= 140;                                                                    C:\code\2008\Fresh Copy - 2008\adc.c
0040a6   6ecb     MOVWF     0xcb,0x0                                                                                        
0040a8   d000     BRA       0x40aa         			break;                                                                        C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           		default:                                                                       C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// if a non-supported rate is specified,                                      C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// default to a 200Hz ADC sample rate                                         C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// use a 1:16 prescaler and 1:14 postscaler                                   C:\code\2008\Fresh Copy - 2008\adc.c
004064   0e6a     MOVLW     0x6a           			T2CON = 0b01101010;                                                           C:\code\2008\Fresh Copy - 2008\adc.c
004066   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// Count to 221 before rolling over and generating                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           			// an interrupt (223.21 - 2 is ideal)                                         C:\code\2008\Fresh Copy - 2008\adc.c
004068   0edd     MOVLW     0xdd           			PR2	= 221;                                                                    C:\code\2008\Fresh Copy - 2008\adc.c
00406a   6ecb     MOVWF     0xcb,0x0                                                                                        
00406c   d01e     BRA       0x40aa         			break;                                                                        C:\code\2008\Fresh Copy - 2008\adc.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// make sure the timer 2 register starts at zero                                C:\code\2008\Fresh Copy - 2008\adc.c
0040aa   6acc     CLRF      0xcc,0x0       	TMR2 = 0x00;                                                                    C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// timer 2 interrupt is low priority                                            C:\code\2008\Fresh Copy - 2008\adc.c
0040ac   929f     BCF       0x9f,0x1,0x0   	IPR1bits.TMR2IP = 0;                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// to prevent a spurious interrupt, make sure the interrupt flag is reset       C:\code\2008\Fresh Copy - 2008\adc.c
0040ae   929e     BCF       0x9e,0x1,0x0   	PIR1bits.TMR2IF = 0;                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// enable the timer 2 interrupt                                                 C:\code\2008\Fresh Copy - 2008\adc.c
0040b0   829d     BSF       0x9d,0x1,0x0   	PIE1bits.TMR2IE = 1;                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// enable timer 2                                                               C:\code\2008\Fresh Copy - 2008\adc.c
0040b2   84ca     BSF       0xca,0x2,0x0   	T2CONbits.TMR2ON = 1;                                                           C:\code\2008\Fresh Copy - 2008\adc.c
0040b4   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
0040b6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0040b8   ffd9                                                                                                               
0040ba   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	FUNCTION:		Disable_Timer_2()                                                   C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	PURPOSE:		Disables the timer 2 hardware.                                       C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\adc.c
                                           void Disable_Timer_2(void)                                                       C:\code\2008\Fresh Copy - 2008\adc.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// disable the timer 2 interrupt                                                C:\code\2008\Fresh Copy - 2008\adc.c
0040bc   929d     BCF       0x9d,0x1,0x0   	PIE1bits.TMR2IE = 0;                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// disable timer 2                                                              C:\code\2008\Fresh Copy - 2008\adc.c
0040be   94ca     BCF       0xca,0x2,0x0   	T2CONbits.TMR2ON = 0;                                                           C:\code\2008\Fresh Copy - 2008\adc.c
0040c0   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	FUNCTION:		Get_ADC_Result()                                                    C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	PURPOSE:		Given the ADC channel number, returns the last ADC result            C:\code\2008\Fresh Copy - 2008\adc.c
                                           *					expressed in "data number" units.                                          C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	PARAMETERS:		ADC channel number                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\adc.c
0040c2   cfd9     MOVFF     0xfd9,0xfe6    unsigned int Get_ADC_Result(unsigned char channel)                               C:\code\2008\Fresh Copy - 2008\adc.c
0040c4   ffe6                                                                                                               
0040c6   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0040c8   ffd9                                                                                                               
0040ca   0e02     MOVLW     0x2                                                                                             
0040cc   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           	unsigned int temp_adc_result;                                                   C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
0040ce   0efe     MOVLW     0xfe           	if(channel <= num_adc_channels)                                                 C:\code\2008\Fresh Copy - 2008\adc.c
0040d0   cfdb     MOVFF     0xfdb,0x0                                                                                       
0040d2   f000                                                                                                               
0040d4   0101     MOVLB     0x1                                                                                             
0040d6   51ed     MOVF      0xed,0x0,0x1                                                                                    
0040d8   80d8     BSF       0xd8,0x0,0x0                                                                                    
0040da   5400     SUBFWB    0x0,0x0,0x0                                                                                     
0040dc   e312     BNC       0x4102                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\adc.c
                                           		// disable the ADC interrupt                                                   C:\code\2008\Fresh Copy - 2008\adc.c
0040de   9c9d     BCF       0x9d,0x6,0x0   		PIE1bits.ADIE = 0;                                                             C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           		// one is subtracted because analog input 1 maps to adc_result[0],             C:\code\2008\Fresh Copy - 2008\adc.c
                                           		// input 2 maps to adc_result[1],..., input 16 maps to adc_result[15]          C:\code\2008\Fresh Copy - 2008\adc.c
0040e0   0efe     MOVLW     0xfe           		temp_adc_result = adc_result[channel - 1];                                     C:\code\2008\Fresh Copy - 2008\adc.c
0040e2   04db     DECF      0xdb,0x0,0x0                                                                                    
0040e4   6ee9     MOVWF     0xe9,0x0                                                                                        
0040e6   6aea     CLRF      0xea,0x0                                                                                        
0040e8   90d8     BCF       0xd8,0x0,0x0                                                                                    
0040ea   36e9     RLCF      0xe9,0x1,0x0                                                                                    
0040ec   36ea     RLCF      0xea,0x1,0x0                                                                                    
0040ee   0ef7     MOVLW     0xf7                                                                                            
0040f0   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0040f2   0e01     MOVLW     0x1                                                                                             
0040f4   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0040f6   cfee     MOVFF     0xfee,0xfde                                                                                     
0040f8   ffde                                                                                                               
0040fa   cfed     MOVFF     0xfed,0xfdd                                                                                     
0040fc   ffdd                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           		// enable the ADC interrupt                                                    C:\code\2008\Fresh Copy - 2008\adc.c
0040fe   8c9d     BSF       0x9d,0x6,0x0   		PIE1bits.ADIE = 1;                                                             C:\code\2008\Fresh Copy - 2008\adc.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\adc.c
004100   d002     BRA       0x4106         	else                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\adc.c
                                           		// bad channel number; return zero		//-1 is more distinct                      C:\code\2008\Fresh Copy - 2008\adc.c
004102   68de     SETF      0xde,0x0       		temp_adc_result = -1;                                                          C:\code\2008\Fresh Copy - 2008\adc.c
004104   68dd     SETF      0xdd,0x0                                                                                        
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
004106   cfde     MOVFF     0xfde,0x0      	return(temp_adc_result);                                                        C:\code\2008\Fresh Copy - 2008\adc.c
004108   f000                                                                                                               
00410a   cfdd     MOVFF     0xfdd,0x1                                                                                       
00410c   f001                                                                                                               
00410e   c000     MOVFF     0x0,0xff3                                                                                       
004110   fff3                                                                                                               
004112   c001     MOVFF     0x1,0xff4                                                                                       
004114   fff4                                                                                                               
004116   d000     BRA       0x4118                                                                                          
004118   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
00411a   ffe1                                                                                                               
00411c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00411e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004120   ffd9                                                                                                               
004122   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	FUNCTION:		Convert_ADC_to_mV()                                                 C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	PURPOSE:		Converts the raw output of the ADC to millivolts.                    C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	PARAMETERS:		ADC output value to convert                                       C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	RETURNS:		Millivolts                                                           C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\adc.c
004124   cfd9     MOVFF     0xfd9,0xfe6    unsigned int Convert_ADC_to_mV(unsigned int adc)                                 C:\code\2008\Fresh Copy - 2008\adc.c
004126   ffe6                                                                                                               
004128   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00412a   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
00412c   0efd     MOVLW     0xfd           	return((unsigned int)(((long)adc * (VREF_POS_MV - VREF_NEG_MV)) / ADC_RANGE));  C:\code\2008\Fresh Copy - 2008\adc.c
00412e   cfdb     MOVFF     0xfdb,0x0                                                                                       
004130   f000                                                                                                               
004132   0efe     MOVLW     0xfe                                                                                            
004134   cfdb     MOVFF     0xfdb,0x1                                                                                       
004136   f001                                                                                                               
004138   6a02     CLRF      0x2,0x0                                                                                         
00413a   6a03     CLRF      0x3,0x0                                                                                         
00413c   0e88     MOVLW     0x88                                                                                            
00413e   6e44     MOVWF     0x44,0x0                                                                                        
004140   0e13     MOVLW     0x13                                                                                            
004142   6e45     MOVWF     0x45,0x0                                                                                        
004144   6a46     CLRF      0x46,0x0                                                                                        
004146   6a47     CLRF      0x47,0x0                                                                                        
004148   c000     MOVFF     0x0,0x3f                                                                                        
00414a   f03f                                                                                                               
00414c   c001     MOVFF     0x1,0x40                                                                                        
00414e   f040                                                                                                               
004150   c002     MOVFF     0x2,0x41                                                                                        
004152   f041                                                                                                               
004154   c003     MOVFF     0x3,0x42                                                                                        
004156   f042                                                                                                               
004158   ec41     CALL      0x5882,0x0                                                                                      
00415a   f02c                                                                                                               
00415c   c03b     MOVFF     0x3b,0x0                                                                                        
00415e   f000                                                                                                               
004160   c03c     MOVFF     0x3c,0x1                                                                                        
004162   f001                                                                                                               
004164   c03d     MOVFF     0x3d,0x2                                                                                        
004166   f002                                                                                                               
004168   c03e     MOVFF     0x3e,0x3                                                                                        
00416a   f003                                                                                                               
00416c   6a44     CLRF      0x44,0x0                                                                                        
00416e   0e08     MOVLW     0x8                                                                                             
004170   6e45     MOVWF     0x45,0x0                                                                                        
004172   6a46     CLRF      0x46,0x0                                                                                        
004174   6a47     CLRF      0x47,0x0                                                                                        
004176   c000     MOVFF     0x0,0x3f                                                                                        
004178   f03f                                                                                                               
00417a   c001     MOVFF     0x1,0x40                                                                                        
00417c   f040                                                                                                               
00417e   c002     MOVFF     0x2,0x41                                                                                        
004180   f041                                                                                                               
004182   c003     MOVFF     0x3,0x42                                                                                        
004184   f042                                                                                                               
004186   ec82     CALL      0x5504,0x0                                                                                      
004188   f02a                                                                                                               
00418a   c03f     MOVFF     0x3f,0x0                                                                                        
00418c   f000                                                                                                               
00418e   c040     MOVFF     0x40,0x1                                                                                        
004190   f001                                                                                                               
004192   c041     MOVFF     0x41,0x2                                                                                        
004194   f002                                                                                                               
004196   c042     MOVFF     0x42,0x3                                                                                        
004198   f003                                                                                                               
00419a   c000     MOVFF     0x0,0xff3                                                                                       
00419c   fff3                                                                                                               
00419e   c001     MOVFF     0x1,0xff4                                                                                       
0041a0   fff4                                                                                                               
0041a2   d000     BRA       0x41a4                                                                                          
0041a4   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
0041a6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0041a8   ffd9                                                                                                               
0041aa   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	FUNCTION:		Get_ADC_Result_Count()                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	PURPOSE:                                                                       C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\adc.c
0041ac   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Get_ADC_Result_Count()                                             C:\code\2008\Fresh Copy - 2008\adc.c
0041ae   ffe6                                                                                                               
0041b0   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0041b2   ffd9                                                                                                               
0041b4   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           	unsigned char temp_adc_update_count;                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// disable the ADC interrupt                                                    C:\code\2008\Fresh Copy - 2008\adc.c
0041b6   9c9d     BCF       0x9d,0x6,0x0   	PIE1bits.ADIE = 0;                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
0041b8   c2de     MOVFF     0x2de,0xfdf    	temp_adc_update_count = adc_update_count;                                       C:\code\2008\Fresh Copy - 2008\adc.c
0041ba   ffdf                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// enable the ADC interrupt                                                     C:\code\2008\Fresh Copy - 2008\adc.c
0041bc   8c9d     BSF       0x9d,0x6,0x0   	PIE1bits.ADIE = 1;                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
0041be   50df     MOVF      0xdf,0x0,0x0   	return(temp_adc_update_count);                                                  C:\code\2008\Fresh Copy - 2008\adc.c
0041c0   d000     BRA       0x41c2                                                                                          
0041c2   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
0041c4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0041c6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0041c8   ffd9                                                                                                               
0041ca   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	FUNCTION:		Reset_ADC_Result_Count()                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	PURPOSE:		Resets the ADC update counter to zero                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\adc.c
                                           void Reset_ADC_Result_Count()                                                    C:\code\2008\Fresh Copy - 2008\adc.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// disable the ADC interrupt                                                    C:\code\2008\Fresh Copy - 2008\adc.c
0041cc   9c9d     BCF       0x9d,0x6,0x0   	PIE1bits.ADIE = 0;                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
0041ce   0102     MOVLB     0x2            	adc_update_count = 0;                                                           C:\code\2008\Fresh Copy - 2008\adc.c
0041d0   6bde     CLRF      0xde,0x1                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// enable the ADC interrupt                                                     C:\code\2008\Fresh Copy - 2008\adc.c
0041d2   8c9d     BSF       0x9d,0x6,0x0   	PIE1bits.ADIE = 1;                                                              C:\code\2008\Fresh Copy - 2008\adc.c
0041d4   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	FUNCTION:		Timer_2_Int_Handler()                                               C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	PURPOSE:		Timer 2 interrupt service routine                                    C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\adc.c
                                           void Timer_2_Int_Handler(void)                                                   C:\code\2008\Fresh Copy - 2008\adc.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// start a new analog to digital conversion                                     C:\code\2008\Fresh Copy - 2008\adc.c
0041d6   82c2     BSF       0xc2,0x1,0x0   	ADCON0bits.GO = 1;                                                              C:\code\2008\Fresh Copy - 2008\adc.c
0041d8   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	FUNCTION:		ADC_Int_Handler()                                                   C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	PURPOSE:		ADC interrupt service routine                                        C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\adc.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\adc.c
0041da   cfd9     MOVFF     0xfd9,0xfe6    void ADC_Int_Handler(void)                                                       C:\code\2008\Fresh Copy - 2008\adc.c
0041dc   ffe6                                                                                                               
0041de   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0041e0   ffd9                                                                                                               
0041e2   0e05     MOVLW     0x5                                                                                             
0041e4   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           	unsigned int adc;                                                               C:\code\2008\Fresh Copy - 2008\adc.c
                                           	unsigned char adcon0_temp;                                                      C:\code\2008\Fresh Copy - 2008\adc.c
                                           	int i;                                                                          C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// get conversion results                                                       C:\code\2008\Fresh Copy - 2008\adc.c
0041e6   50c4     MOVF      0xc4,0x0,0x0   	adc = ADRESH;                                                                   C:\code\2008\Fresh Copy - 2008\adc.c
0041e8   6ede     MOVWF     0xde,0x0                                                                                        
0041ea   6add     CLRF      0xdd,0x0                                                                                        
0041ec   cfd9     MOVFF     0xfd9,0xfe9    	adc <<= 8;                                                                      C:\code\2008\Fresh Copy - 2008\adc.c
0041ee   ffe9                                                                                                               
0041f0   cfda     MOVFF     0xfda,0xfea                                                                                     
0041f2   ffea                                                                                                               
0041f4   50ee     MOVF      0xee,0x0,0x0                                                                                    
0041f6   6eed     MOVWF     0xed,0x0                                                                                        
0041f8   6aef     CLRF      0xef,0x0                                                                                        
0041fa   50c3     MOVF      0xc3,0x0,0x0   	adc += ADRESL;                                                                  C:\code\2008\Fresh Copy - 2008\adc.c
0041fc   26de     ADDWF     0xde,0x1,0x0                                                                                    
0041fe   0e00     MOVLW     0x0                                                                                             
004200   22dd     ADDWFC    0xdd,0x1,0x0                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// add the ADC data to the appropriate accumulator                              C:\code\2008\Fresh Copy - 2008\adc.c
004202   cfde     MOVFF     0xfde,0x0      	accum[channel] += (long)adc;                                                    C:\code\2008\Fresh Copy - 2008\adc.c
004204   f000                                                                                                               
004206   cfdd     MOVFF     0xfdd,0x1                                                                                       
004208   f001                                                                                                               
00420a   6a02     CLRF      0x2,0x0                                                                                         
00420c   6a03     CLRF      0x3,0x0                                                                                         
00420e   0101     MOVLB     0x1                                                                                             
004210   51fd     MOVF      0xfd,0x0,0x1                                                                                    
004212   0d04     MULLW     0x4                                                                                             
004214   cff3     MOVFF     0xff3,0xfe9                                                                                     
004216   ffe9                                                                                                               
004218   cff4     MOVFF     0xff4,0xfea                                                                                     
00421a   ffea                                                                                                               
00421c   0eef     MOVLW     0xef                                                                                            
00421e   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
004220   0e01     MOVLW     0x1                                                                                             
004222   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004224   5000     MOVF      0x0,0x0,0x0                                                                                     
004226   26ee     ADDWF     0xee,0x1,0x0                                                                                    
004228   5001     MOVF      0x1,0x0,0x0                                                                                     
00422a   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
00422c   5002     MOVF      0x2,0x0,0x0                                                                                     
00422e   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
004230   5003     MOVF      0x3,0x0,0x0                                                                                     
004232   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// increment the ADC channel index                                              C:\code\2008\Fresh Copy - 2008\adc.c
004234   2bfd     INCF      0xfd,0x1,0x1   	channel++;                                                                      C:\code\2008\Fresh Copy - 2008\adc.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// do we need to wrap around to zero?                                           C:\code\2008\Fresh Copy - 2008\adc.c
004236   51ed     MOVF      0xed,0x0,0x1   	if(channel >= num_adc_channels)                                                 C:\code\2008\Fresh Copy - 2008\adc.c
004238   5dfd     SUBWF     0xfd,0x0,0x1                                                                                    
00423a   e304     BNC       0x4244                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\adc.c
00423c   6bfd     CLRF      0xfd,0x1       		channel = 0;                                                                   C:\code\2008\Fresh Copy - 2008\adc.c
00423e   2bfb     INCF      0xfb,0x1,0x1   		samples++;                                                                     C:\code\2008\Fresh Copy - 2008\adc.c
004240   0e00     MOVLW     0x0                                                                                             
004242   23fc     ADDWFC    0xfc,0x1,0x1                                                                                    
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// Select next ADC channel. This also starts the process whereby the ADC        C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// sample and hold capacitor is allowed to start charging, which must be        C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// completed before the next analog to digital conversion can be started.       C:\code\2008\Fresh Copy - 2008\adc.c
004244   0e02     MOVLW     0x2            	adcon0_temp = channel;                                                          C:\code\2008\Fresh Copy - 2008\adc.c
004246   c1fd     MOVFF     0x1fd,0xfdb                                                                                     
004248   ffdb                                                                                                               
00424a   50db     MOVF      0xdb,0x0,0x0   	adcon0_temp <<= 2;                                                              C:\code\2008\Fresh Copy - 2008\adc.c
00424c   0d04     MULLW     0x4                                                                                             
00424e   0e02     MOVLW     0x2                                                                                             
004250   cff3     MOVFF     0xff3,0xfdb                                                                                     
004252   ffdb                                                                                                               
004254   80db     BSF       0xdb,0x0,0x0   	adcon0_temp |= 0b00000001;                                                      C:\code\2008\Fresh Copy - 2008\adc.c
004256   50db     MOVF      0xdb,0x0,0x0   	ADCON0 = adcon0_temp;                                                           C:\code\2008\Fresh Copy - 2008\adc.c
004258   6ec2     MOVWF     0xc2,0x0                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           	// check to see if we've got a full sample set                                  C:\code\2008\Fresh Copy - 2008\adc.c
00425a   51eb     MOVF      0xeb,0x0,0x1   	if(samples >= adc_samples_per_update)                                           C:\code\2008\Fresh Copy - 2008\adc.c
00425c   5dfb     SUBWF     0xfb,0x0,0x1                                                                                    
00425e   51ec     MOVF      0xec,0x0,0x1                                                                                    
004260   59fc     SUBWFB    0xfc,0x0,0x1                                                                                    
004262   e201     BC        0x4266                                                                                          
004264   d083     BRA       0x436c                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\adc.c
                                           		// update the ADC result array                                                 C:\code\2008\Fresh Copy - 2008\adc.c
004266   0e03     MOVLW     0x3            		for(i=0; i < num_adc_channels; i++)                                            C:\code\2008\Fresh Copy - 2008\adc.c
004268   6adb     CLRF      0xdb,0x0                                                                                        
00426a   0e04     MOVLW     0x4                                                                                             
00426c   6adb     CLRF      0xdb,0x0                                                                                        
00426e   0e03     MOVLW     0x3                                                                                             
004270   cfdb     MOVFF     0xfdb,0x0                                                                                       
004272   f000                                                                                                               
004274   0e04     MOVLW     0x4                                                                                             
004276   cfdb     MOVFF     0xfdb,0x1                                                                                       
004278   f001                                                                                                               
00427a   0101     MOVLB     0x1                                                                                             
00427c   51ed     MOVF      0xed,0x0,0x1                                                                                    
00427e   0100     MOVLB     0x0                                                                                             
004280   ae01     BTFSS     0x1,0x7,0x0                                                                                     
004282   d002     BRA       0x4288                                                                                          
004284   90d8     BCF       0xd8,0x0,0x0                                                                                    
004286   d003     BRA       0x428e                                                                                          
004288   5c00     SUBWF     0x0,0x0,0x0                                                                                     
00428a   0e00     MOVLW     0x0                                                                                             
00428c   5801     SUBWFB    0x1,0x0,0x0                                                                                     
00428e   e23a     BC        0x4304                                                                                          
0042f8   0e03     MOVLW     0x3                                                                                             
0042fa   2adb     INCF      0xdb,0x1,0x0                                                                                    
0042fc   0e04     MOVLW     0x4                                                                                             
0042fe   e301     BNC       0x4302                                                                                          
004300   2adb     INCF      0xdb,0x1,0x0                                                                                    
004302   d7b5     BRA       0x426e                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\adc.c
004290   0e03     MOVLW     0x3            			adc_result[i] = (long)(accum[i] >> adc_result_divisor);                       C:\code\2008\Fresh Copy - 2008\adc.c
004292   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
004294   ffe9                                                                                                               
004296   0e04     MOVLW     0x4                                                                                             
004298   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00429a   ffea                                                                                                               
00429c   90d8     BCF       0xd8,0x0,0x0                                                                                    
00429e   36e9     RLCF      0xe9,0x1,0x0                                                                                    
0042a0   36ea     RLCF      0xea,0x1,0x0                                                                                    
0042a2   90d8     BCF       0xd8,0x0,0x0                                                                                    
0042a4   36e9     RLCF      0xe9,0x1,0x0                                                                                    
0042a6   36ea     RLCF      0xea,0x1,0x0                                                                                    
0042a8   0eef     MOVLW     0xef                                                                                            
0042aa   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0042ac   0e01     MOVLW     0x1                                                                                             
0042ae   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0042b0   0101     MOVLB     0x1                                                                                             
0042b2   51ee     MOVF      0xee,0x0,0x1                                                                                    
0042b4   0b1f     ANDLW     0x1f                                                                                            
0042b6   cfee     MOVFF     0xfee,0x0                                                                                       
0042b8   f000                                                                                                               
0042ba   cfee     MOVFF     0xfee,0x1                                                                                       
0042bc   f001                                                                                                               
0042be   cfee     MOVFF     0xfee,0x2                                                                                       
0042c0   f002                                                                                                               
0042c2   cfee     MOVFF     0xfee,0x3                                                                                       
0042c4   f003                                                                                                               
0042c6   e007     BZ        0x42d6                                                                                          
0042c8   90d8     BCF       0xd8,0x0,0x0                                                                                    
0042ca   3203     RRCF      0x3,0x1,0x0                                                                                     
0042cc   3202     RRCF      0x2,0x1,0x0                                                                                     
0042ce   3201     RRCF      0x1,0x1,0x0                                                                                     
0042d0   3200     RRCF      0x0,0x1,0x0                                                                                     
0042d2   06e8     DECF      0xe8,0x1,0x0                                                                                    
0042d4   e1f9     BNZ       0x42c8                                                                                          
0042d6   0e03     MOVLW     0x3                                                                                             
0042d8   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0042da   ffe9                                                                                                               
0042dc   0e04     MOVLW     0x4                                                                                             
0042de   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0042e0   ffea                                                                                                               
0042e2   90d8     BCF       0xd8,0x0,0x0                                                                                    
0042e4   36e9     RLCF      0xe9,0x1,0x0                                                                                    
0042e6   36ea     RLCF      0xea,0x1,0x0                                                                                    
0042e8   0ef7     MOVLW     0xf7                                                                                            
0042ea   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0042ec   0e01     MOVLW     0x1                                                                                             
0042ee   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0042f0   c000     MOVFF     0x0,0xfee                                                                                       
0042f2   ffee                                                                                                               
0042f4   c001     MOVFF     0x1,0xfed                                                                                       
0042f6   ffed                                                                                                               
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                           		// reset the sample accumulator(s) to zero                                     C:\code\2008\Fresh Copy - 2008\adc.c
004304   0e03     MOVLW     0x3            		for(i=0; i < num_adc_channels; i++)                                            C:\code\2008\Fresh Copy - 2008\adc.c
004306   6adb     CLRF      0xdb,0x0                                                                                        
004308   0e04     MOVLW     0x4                                                                                             
00430a   6adb     CLRF      0xdb,0x0                                                                                        
00430c   0e03     MOVLW     0x3                                                                                             
00430e   cfdb     MOVFF     0xfdb,0x0                                                                                       
004310   f000                                                                                                               
004312   0e04     MOVLW     0x4                                                                                             
004314   cfdb     MOVFF     0xfdb,0x1                                                                                       
004316   f001                                                                                                               
004318   0101     MOVLB     0x1                                                                                             
00431a   51ed     MOVF      0xed,0x0,0x1                                                                                    
00431c   0100     MOVLB     0x0                                                                                             
00431e   ae01     BTFSS     0x1,0x7,0x0                                                                                     
004320   d002     BRA       0x4326                                                                                          
004322   90d8     BCF       0xd8,0x0,0x0                                                                                    
004324   d003     BRA       0x432c                                                                                          
004326   5c00     SUBWF     0x0,0x0,0x0                                                                                     
004328   0e00     MOVLW     0x0                                                                                             
00432a   5801     SUBWFB    0x1,0x0,0x0                                                                                     
00432c   e21a     BC        0x4362                                                                                          
004356   0e03     MOVLW     0x3                                                                                             
004358   2adb     INCF      0xdb,0x1,0x0                                                                                    
00435a   0e04     MOVLW     0x4                                                                                             
00435c   e301     BNC       0x4360                                                                                          
00435e   2adb     INCF      0xdb,0x1,0x0                                                                                    
004360   d7d5     BRA       0x430c                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\adc.c
00432e   0e03     MOVLW     0x3            			accum[i] = 0L;                                                                C:\code\2008\Fresh Copy - 2008\adc.c
004330   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
004332   ffe9                                                                                                               
004334   0e04     MOVLW     0x4                                                                                             
004336   cfdb     MOVFF     0xfdb,0xfea                                                                                     
004338   ffea                                                                                                               
00433a   90d8     BCF       0xd8,0x0,0x0                                                                                    
00433c   36e9     RLCF      0xe9,0x1,0x0                                                                                    
00433e   36ea     RLCF      0xea,0x1,0x0                                                                                    
004340   90d8     BCF       0xd8,0x0,0x0                                                                                    
004342   36e9     RLCF      0xe9,0x1,0x0                                                                                    
004344   36ea     RLCF      0xea,0x1,0x0                                                                                    
004346   0eef     MOVLW     0xef                                                                                            
004348   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00434a   0e01     MOVLW     0x1                                                                                             
00434c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00434e   6aee     CLRF      0xee,0x0                                                                                        
004350   6aee     CLRF      0xee,0x0                                                                                        
004352   6aee     CLRF      0xee,0x0                                                                                        
004354   6aee     CLRF      0xee,0x0                                                                                        
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\adc.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           		// signal that a fresh sample set is available                                 C:\code\2008\Fresh Copy - 2008\adc.c
004362   0102     MOVLB     0x2            		adc_update_count++;                                                            C:\code\2008\Fresh Copy - 2008\adc.c
004364   2bde     INCF      0xde,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\adc.c
                                           		// start a fresh sample set                                                    C:\code\2008\Fresh Copy - 2008\adc.c
004366   0101     MOVLB     0x1            		samples = 0;                                                                   C:\code\2008\Fresh Copy - 2008\adc.c
004368   6bfb     CLRF      0xfb,0x1                                                                                        
00436a   6bfc     CLRF      0xfc,0x1                                                                                        
                                           	}	                                                                              C:\code\2008\Fresh Copy - 2008\adc.c
00436c   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Fresh Copy - 2008\adc.c
00436e   ffe1                                                                                                               
004370   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004372   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004374   ffd9                                                                                                               
004376   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	TITLE:		camera.c                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	VERSION:	0.2 (Beta)                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	DATE:		16-Jan-2007                                                             C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	COMMENTS:	This is the "streamlined" version of camera.c                        C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *				You are free to use this source code for any non-commercial                 C:\code\2008\Fresh Copy - 2008\camera.c
                                           *				use. Please do not make copies of this source code, modified                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *				or un-modified, publicly available on the internet or elsewhere             C:\code\2008\Fresh Copy - 2008\camera.c
                                           *				without permission. Thanks.                                                 C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *				Copyright ©2005-2007 R. Kevin Watson. All rights are reserved.              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           ******************************************************************************** C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	CHANGE LOG:                                                                    C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	01-Jan-2006  0.1  RKW - Original code.                                         C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	16-Jan-2007  0.2  RKW - Added Virtual_Window() function.                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\camera.c
                                           #include <stdio.h>                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           #include "serial_ports.h"                                                        C:\code\2008\Fresh Copy - 2008\camera.c
                                           #include "camera.h"                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           // This variable, when equal to one, indicates that the                          C:\code\2008\Fresh Copy - 2008\camera.c
                                           // camera has successfully initialized and should be                             C:\code\2008\Fresh Copy - 2008\camera.c
                                           // sending data. You can also force a re-initialization                          C:\code\2008\Fresh Copy - 2008\camera.c
                                           // by setting this variable to zero by calling the                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           // function Reinitialize_Camera().                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           unsigned char camera_initialized = 0;                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           unsigned int camera_t_packets = 0;                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           unsigned int camera_acks = 0;                                                    C:\code\2008\Fresh Copy - 2008\camera.c
                                           unsigned int camera_ncks = 0;                                                    C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           // camera T packet structure                                                     C:\code\2008\Fresh Copy - 2008\camera.c
                                           T_Packet_Data_Type T_Packet_Data;                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	FUNCTION:		Camera_Handler()                                                    C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PURPOSE:		This function is responsable for camera initialization               C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					and camera serial data interpretation. Once the camera                     C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					is initialized and starts sending tracking data, this                      C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					function will continuously update the global T_Packet_Data                 C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					structure with the received tracking information.					                     C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	CALLED FROM:	user_routines.c/Process_Data_From_Master_uP()                     C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PARAMETERS:		none                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	RETURNS:		nothing                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\camera.c
002b4a   cfd9     MOVFF     0xfd9,0xfe6    void Camera_Handler(void)                                                        C:\code\2008\Fresh Copy - 2008\camera.c
002b4c   ffe6                                                                                                               
002b4e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002b50   ffd9                                                                                                               
002b52   0e04     MOVLW     0x4                                                                                             
002b54   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           	unsigned char return_value;                                                     C:\code\2008\Fresh Copy - 2008\camera.c
                                           	unsigned char byte_count;                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           	unsigned char byte;                                                             C:\code\2008\Fresh Copy - 2008\camera.c
                                           	unsigned char i;                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           	// if needed, (re)initialize the camera and if the                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           	// initialization process throws an error, retry                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           	// until it's successfully initializes                                          C:\code\2008\Fresh Copy - 2008\camera.c
002b56   0102     MOVLB     0x2            	if(camera_initialized == 0)                                                     C:\code\2008\Fresh Copy - 2008\camera.c
002b58   51ad     MOVF      0xad,0x0,0x1                                                                                    
002b5a   e10b     BNZ       0x2b72                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
002b5c   d8f0     RCALL     0x2d3e         		return_value = Initialize_Camera();                                            C:\code\2008\Fresh Copy - 2008\camera.c
002b5e   6edf     MOVWF     0xdf,0x0                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           		// is the camera done initializing and if so,                                  C:\code\2008\Fresh Copy - 2008\camera.c
                                           		// did it initialize without an error?                                         C:\code\2008\Fresh Copy - 2008\camera.c
002b60   04df     DECF      0xdf,0x0,0x0   		if(return_value == 1)                                                          C:\code\2008\Fresh Copy - 2008\camera.c
002b62   e104     BNZ       0x2b6c                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\camera.c
002b64   0102     MOVLB     0x2            			camera_initialized = 1;                                                       C:\code\2008\Fresh Copy - 2008\camera.c
002b66   0e01     MOVLW     0x1                                                                                             
002b68   6fad     MOVWF     0xad,0x1                                                                                        
                                           			DEBUG(("\r\nCamera: Initialized normally\r\n"));                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           		// is the camera done initializing and if so,                                  C:\code\2008\Fresh Copy - 2008\camera.c
                                           		// did it return an error?                                                     C:\code\2008\Fresh Copy - 2008\camera.c
002b6a   d003     BRA       0x2b72         		else if(return_value > 1)                                                      C:\code\2008\Fresh Copy - 2008\camera.c
002b6c   50df     MOVF      0xdf,0x0,0x0                                                                                    
002b6e   0801     SUBLW     0x1                                                                                             
002b70   e200     BC        0x2b72                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           			DEBUG(("\r\nCamera: Initialized abnormally with code %u\r\n", (unsigned int)return_value)); C:\code\2008\Fresh Copy - 2008\camera.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           	// find out how much data, if any, is present in                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           	// the camera serial port's received data queue?                                C:\code\2008\Fresh Copy - 2008\camera.c
002b72   db01     RCALL     0x3176         	byte_count = Camera_Serial_Port_Byte_Count();                                   C:\code\2008\Fresh Copy - 2008\camera.c
002b74   6ee7     MOVWF     0xe7,0x0                                                                                        
002b76   0e01     MOVLW     0x1                                                                                             
002b78   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
002b7a   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           	// have we received any data?                                                   C:\code\2008\Fresh Copy - 2008\camera.c
002b7c   50db     MOVF      0xdb,0x0,0x0   	if(byte_count > 0)                                                              C:\code\2008\Fresh Copy - 2008\camera.c
002b7e   0800     SUBLW     0x0                                                                                             
002b80   e217     BC        0x2bb0                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           		// we have fresh data, so read each received byte one                          C:\code\2008\Fresh Copy - 2008\camera.c
                                           		// at a time and immediatly send it to the camera state                        C:\code\2008\Fresh Copy - 2008\camera.c
                                           		// machine, which is responsable for parsing the camera                        C:\code\2008\Fresh Copy - 2008\camera.c
                                           		// data packets                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002b82   0e03     MOVLW     0x3            		for(i=0; i<byte_count; i++)                                                    C:\code\2008\Fresh Copy - 2008\camera.c
002b84   6adb     CLRF      0xdb,0x0                                                                                        
002b86   0e01     MOVLW     0x1                                                                                             
002b88   50db     MOVF      0xdb,0x0,0x0                                                                                    
002b8a   6ef3     MOVWF     0xf3,0x0                                                                                        
002b8c   0e03     MOVLW     0x3                                                                                             
002b8e   cfdb     MOVFF     0xfdb,0xff4                                                                                     
002b90   fff4                                                                                                               
002b92   50f3     MOVF      0xf3,0x0,0x0                                                                                    
002b94   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
002b96   e20c     BC        0x2bb0                                                                                          
002baa   0e03     MOVLW     0x3                                                                                             
002bac   2adb     INCF      0xdb,0x1,0x0                                                                                    
002bae   d7eb     BRA       0x2b86                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           			// get the next data byte                                                     C:\code\2008\Fresh Copy - 2008\camera.c
002b98   daf2     RCALL     0x317e         			byte = Read_Camera_Serial_Port();                                             C:\code\2008\Fresh Copy - 2008\camera.c
002b9a   6ee7     MOVWF     0xe7,0x0                                                                                        
002b9c   0e02     MOVLW     0x2                                                                                             
002b9e   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
002ba0   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           			// send the byte to the camera state machine                                  C:\code\2008\Fresh Copy - 2008\camera.c
002ba2   cfdb     MOVFF     0xfdb,0xfe6    			Camera_State_Machine(byte);                                                   C:\code\2008\Fresh Copy - 2008\camera.c
002ba4   ffe6                                                                                                               
002ba6   d80a     RCALL     0x2bbc                                                                                          
002ba8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
002bb0   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002bb2   ffe1                                                                                                               
002bb4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002bb6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002bb8   ffd9                                                                                                               
002bba   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	FUNCTION:		Camera_State_Machine()                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PURPOSE:		Parses the camera serial data stream looking for data                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					packets, ACKs and NCKS. When packets are complete the                      C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					individual packet counter variable is incremented, and                     C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					in the case of packets, the global data structure is                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					updated with the new data.					                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	CALLED FROM:	Camera_Handler(), above                                           C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PARAMETERS:		unsigned char of camera serial data                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	RETURNS:		nothing                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	COMMENTS:		Camera must be configured to output binary data,                    C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\camera.c
002bbc   cfd9     MOVFF     0xfd9,0xfe6    void Camera_State_Machine(unsigned char byte)                                    C:\code\2008\Fresh Copy - 2008\camera.c
002bbe   ffe6                                                                                                               
002bc0   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002bc2   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           	static unsigned char state = UNSYNCHRONIZED;                                    C:\code\2008\Fresh Copy - 2008\camera.c
                                           	static unsigned char packet_buffer[34];                                         C:\code\2008\Fresh Copy - 2008\camera.c
                                           	static unsigned char packet_buffer_index;                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           	static unsigned char packet_char_count;                                         C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002bc4   0102     MOVLB     0x2            	switch(state)                                                                   C:\code\2008\Fresh Copy - 2008\camera.c
002bc6   51b4     MOVF      0xb4,0x0,0x1                                                                                    
002bc8   0a06     XORLW     0x6                                                                                             
002bca   e101     BNZ       0x2bce                                                                                          
002bcc   d08f     BRA       0x2cec                                                                                          
002bce   0a03     XORLW     0x3                                                                                             
002bd0   e068     BZ        0x2ca2                                                                                          
002bd2   0a06     XORLW     0x6                                                                                             
002bd4   e034     BZ        0x2c3e                                                                                          
002bd6   0a01     XORLW     0x1                                                                                             
002bd8   e025     BZ        0x2c24                                                                                          
002bda   0a03     XORLW     0x3                                                                                             
002bdc   e001     BZ        0x2be0                                                                                          
002bde   d0ab     BRA       0x2d36                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           		case UNSYNCHRONIZED:                                                           C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002be0   0efe     MOVLW     0xfe           			if(byte == 255) // start of a new data packet?                                C:\code\2008\Fresh Copy - 2008\camera.c
002be2   50db     MOVF      0xdb,0x0,0x0                                                                                    
002be4   6e00     MOVWF     0x0,0x0                                                                                         
002be6   6a01     CLRF      0x1,0x0                                                                                         
002be8   0eff     MOVLW     0xff                                                                                            
002bea   1800     XORWF     0x0,0x0,0x0                                                                                     
002bec   e101     BNZ       0x2bf0                                                                                          
002bee   5001     MOVF      0x1,0x0,0x0                                                                                     
002bf0   e103     BNZ       0x2bf8                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002bf2   0e02     MOVLW     0x2            				state = DETERMINING_PACKET_TYPE;                                             C:\code\2008\Fresh Copy - 2008\camera.c
002bf4   6fb4     MOVWF     0xb4,0x1                                                                                        
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002bf6   d015     BRA       0x2c22         			else if(byte == 'A') // start of an ACK?                                      C:\code\2008\Fresh Copy - 2008\camera.c
002bf8   0efe     MOVLW     0xfe                                                                                            
002bfa   50db     MOVF      0xdb,0x0,0x0                                                                                    
002bfc   0841     SUBLW     0x41                                                                                            
002bfe   e107     BNZ       0x2c0e                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002c00   0102     MOVLB     0x2            				packet_char_count = 2;                                                       C:\code\2008\Fresh Copy - 2008\camera.c
002c02   0e02     MOVLW     0x2                                                                                             
002c04   6f6c     MOVWF     0x6c,0x1                                                                                        
002c06   0102     MOVLB     0x2            				state = RECEIVING_ACK;                                                       C:\code\2008\Fresh Copy - 2008\camera.c
002c08   0e05     MOVLW     0x5                                                                                             
002c0a   6fb4     MOVWF     0xb4,0x1                                                                                        
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002c0c   d00a     BRA       0x2c22         			else if(byte == 'N') // start of a NCK?                                       C:\code\2008\Fresh Copy - 2008\camera.c
002c0e   0efe     MOVLW     0xfe                                                                                            
002c10   50db     MOVF      0xdb,0x0,0x0                                                                                    
002c12   084e     SUBLW     0x4e                                                                                            
002c14   e106     BNZ       0x2c22                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002c16   0102     MOVLB     0x2            				packet_char_count = 2;                                                       C:\code\2008\Fresh Copy - 2008\camera.c
002c18   0e02     MOVLW     0x2                                                                                             
002c1a   6f6c     MOVWF     0x6c,0x1                                                                                        
002c1c   0102     MOVLB     0x2            				state = RECEIVING_NCK;                                                       C:\code\2008\Fresh Copy - 2008\camera.c
002c1e   0e06     MOVLW     0x6                                                                                             
002c20   6fb4     MOVWF     0xb4,0x1                                                                                        
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002c22   d089     BRA       0x2d36         			break;                                                                        C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           		case DETERMINING_PACKET_TYPE:                                                  C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002c24   0efe     MOVLW     0xfe           			if(byte == 'T') // are we receiving a "t packet"?                             C:\code\2008\Fresh Copy - 2008\camera.c
002c26   50db     MOVF      0xdb,0x0,0x0                                                                                    
002c28   0854     SUBLW     0x54                                                                                            
002c2a   e106     BNZ       0x2c38                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002c2c   0102     MOVLB     0x2            				packet_buffer_index = 0;                                                     C:\code\2008\Fresh Copy - 2008\camera.c
002c2e   6b6b     CLRF      0x6b,0x1                                                                                        
002c30   0102     MOVLB     0x2            				state = RECEIVING_T_PACKET;                                                  C:\code\2008\Fresh Copy - 2008\camera.c
002c32   0e03     MOVLW     0x3                                                                                             
002c34   6fb4     MOVWF     0xb4,0x1                                                                                        
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002c36   d002     BRA       0x2c3c         			else // unknown packet type; go back to the unsynchronized state              C:\code\2008\Fresh Copy - 2008\camera.c
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002c38   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED;                                                      C:\code\2008\Fresh Copy - 2008\camera.c
002c3a   6fb4     MOVWF     0xb4,0x1                                                                                        
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002c3c   d07c     BRA       0x2d36         			break;                                                                        C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           		case RECEIVING_T_PACKET:                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002c3e   0102     MOVLB     0x2            			if(packet_buffer_index < sizeof(T_Packet_Data_Type)) // still building the packet? C:\code\2008\Fresh Copy - 2008\camera.c
002c40   516b     MOVF      0x6b,0x0,0x1                                                                                    
002c42   6e00     MOVWF     0x0,0x0                                                                                         
002c44   6a01     CLRF      0x1,0x0                                                                                         
002c46   0e08     MOVLW     0x8                                                                                             
002c48   5c00     SUBWF     0x0,0x0,0x0                                                                                     
002c4a   0e00     MOVLW     0x0                                                                                             
002c4c   5801     SUBWFB    0x1,0x0,0x0                                                                                     
002c4e   e20a     BC        0x2c64                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// move packet character to our buffer                                       C:\code\2008\Fresh Copy - 2008\camera.c
002c50   516b     MOVF      0x6b,0x0,0x1   				packet_buffer[packet_buffer_index] = byte;                                   C:\code\2008\Fresh Copy - 2008\camera.c
002c52   6aea     CLRF      0xea,0x0                                                                                        
002c54   0f49     ADDLW     0x49                                                                                            
002c56   6ee9     MOVWF     0xe9,0x0                                                                                        
002c58   0e02     MOVLW     0x2                                                                                             
002c5a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002c5c   0efe     MOVLW     0xfe                                                                                            
002c5e   cfdb     MOVFF     0xfdb,0xfef                                                                                     
002c60   ffef                                                                                                               
002c62   2b6b     INCF      0x6b,0x1,0x1   				packet_buffer_index++;                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
                                           			                                                                              C:\code\2008\Fresh Copy - 2008\camera.c
002c64   516b     MOVF      0x6b,0x0,0x1   			if(packet_buffer_index == sizeof(T_Packet_Data_Type)) // complete packet?     C:\code\2008\Fresh Copy - 2008\camera.c
002c66   6e00     MOVWF     0x0,0x0                                                                                         
002c68   6a01     CLRF      0x1,0x0                                                                                         
002c6a   0e08     MOVLW     0x8                                                                                             
002c6c   1800     XORWF     0x0,0x0,0x0                                                                                     
002c6e   e101     BNZ       0x2c72                                                                                          
002c70   5001     MOVF      0x1,0x0,0x0                                                                                     
002c72   e116     BNZ       0x2ca0                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002c74   c249     MOVFF     0x249,0x241    				T_Packet_Data.mx = packet_buffer[0];                                         C:\code\2008\Fresh Copy - 2008\camera.c
002c76   f241                                                                                                               
002c78   c24a     MOVFF     0x24a,0x242    				T_Packet_Data.my = packet_buffer[1];                                         C:\code\2008\Fresh Copy - 2008\camera.c
002c7a   f242                                                                                                               
002c7c   c24b     MOVFF     0x24b,0x243    				T_Packet_Data.x1 = packet_buffer[2];                                         C:\code\2008\Fresh Copy - 2008\camera.c
002c7e   f243                                                                                                               
002c80   c24c     MOVFF     0x24c,0x244    				T_Packet_Data.y1 = packet_buffer[3];                                         C:\code\2008\Fresh Copy - 2008\camera.c
002c82   f244                                                                                                               
002c84   c24d     MOVFF     0x24d,0x245    				T_Packet_Data.x2 = packet_buffer[4];                                         C:\code\2008\Fresh Copy - 2008\camera.c
002c86   f245                                                                                                               
002c88   c24e     MOVFF     0x24e,0x246    				T_Packet_Data.y2 = packet_buffer[5];                                         C:\code\2008\Fresh Copy - 2008\camera.c
002c8a   f246                                                                                                               
002c8c   c24f     MOVFF     0x24f,0x247    				T_Packet_Data.pixels = packet_buffer[6];                                     C:\code\2008\Fresh Copy - 2008\camera.c
002c8e   f247                                                                                                               
002c90   c250     MOVFF     0x250,0x248    				T_Packet_Data.confidence = packet_buffer[7];                                 C:\code\2008\Fresh Copy - 2008\camera.c
002c92   f248                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002c94   0102     MOVLB     0x2            				camera_t_packets++;                                                          C:\code\2008\Fresh Copy - 2008\camera.c
002c96   2bae     INCF      0xae,0x1,0x1                                                                                    
002c98   0e00     MOVLW     0x0                                                                                             
002c9a   23af     ADDWFC    0xaf,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002c9c   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED; // we're done; go back to the unsynchronized state   C:\code\2008\Fresh Copy - 2008\camera.c
002c9e   6fb4     MOVWF     0xb4,0x1                                                                                        
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002ca0   d04a     BRA       0x2d36         			break;                                                                        C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           		case RECEIVING_ACK:                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002ca2   0e02     MOVLW     0x2            			if(packet_char_count == 2 && byte == 'C') // second character a C?            C:\code\2008\Fresh Copy - 2008\camera.c
002ca4   0102     MOVLB     0x2                                                                                             
002ca6   5d6c     SUBWF     0x6c,0x0,0x1                                                                                    
002ca8   e106     BNZ       0x2cb6                                                                                          
002caa   0efe     MOVLW     0xfe                                                                                            
002cac   50db     MOVF      0xdb,0x0,0x0                                                                                    
002cae   0843     SUBLW     0x43                                                                                            
002cb0   e102     BNZ       0x2cb6                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002cb2   2b6c     INCF      0x6c,0x1,0x1   				packet_char_count++;                                                         C:\code\2008\Fresh Copy - 2008\camera.c
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002cb4   d01a     BRA       0x2cea         			else if(packet_char_count == 3 && byte == 'K') // third character a K?        C:\code\2008\Fresh Copy - 2008\camera.c
002cb6   0e03     MOVLW     0x3                                                                                             
002cb8   5d6c     SUBWF     0x6c,0x0,0x1                                                                                    
002cba   e106     BNZ       0x2cc8                                                                                          
002cbc   0efe     MOVLW     0xfe                                                                                            
002cbe   50db     MOVF      0xdb,0x0,0x0                                                                                    
002cc0   084b     SUBLW     0x4b                                                                                            
002cc2   e102     BNZ       0x2cc8                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002cc4   2b6c     INCF      0x6c,0x1,0x1   				packet_char_count++;                                                         C:\code\2008\Fresh Copy - 2008\camera.c
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002cc6   d011     BRA       0x2cea         			else if(packet_char_count == 4 && byte == '\r') // fourth character a return? C:\code\2008\Fresh Copy - 2008\camera.c
002cc8   0e04     MOVLW     0x4                                                                                             
002cca   5d6c     SUBWF     0x6c,0x0,0x1                                                                                    
002ccc   e10b     BNZ       0x2ce4                                                                                          
002cce   0efe     MOVLW     0xfe                                                                                            
002cd0   50db     MOVF      0xdb,0x0,0x0                                                                                    
002cd2   080d     SUBLW     0xd                                                                                             
002cd4   e107     BNZ       0x2ce4                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002cd6   0102     MOVLB     0x2            				camera_acks++;                                                               C:\code\2008\Fresh Copy - 2008\camera.c
002cd8   2bb0     INCF      0xb0,0x1,0x1                                                                                    
002cda   0e00     MOVLW     0x0                                                                                             
002cdc   23b1     ADDWFC    0xb1,0x1,0x1                                                                                    
002cde   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED;                                                      C:\code\2008\Fresh Copy - 2008\camera.c
002ce0   6fb4     MOVWF     0xb4,0x1                                                                                        
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002ce2   d003     BRA       0x2cea         			else                                                                          C:\code\2008\Fresh Copy - 2008\camera.c
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002ce4   0102     MOVLB     0x2            				state = UNSYNCHRONIZED;                                                      C:\code\2008\Fresh Copy - 2008\camera.c
002ce6   0e01     MOVLW     0x1                                                                                             
002ce8   6fb4     MOVWF     0xb4,0x1                                                                                        
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002cea   d025     BRA       0x2d36         			break;                                                                        C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           		case RECEIVING_NCK:                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002cec   0e02     MOVLW     0x2            			if(packet_char_count == 2 && byte == 'C') // second character a C?            C:\code\2008\Fresh Copy - 2008\camera.c
002cee   0102     MOVLB     0x2                                                                                             
002cf0   5d6c     SUBWF     0x6c,0x0,0x1                                                                                    
002cf2   e106     BNZ       0x2d00                                                                                          
002cf4   0efe     MOVLW     0xfe                                                                                            
002cf6   50db     MOVF      0xdb,0x0,0x0                                                                                    
002cf8   0843     SUBLW     0x43                                                                                            
002cfa   e102     BNZ       0x2d00                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002cfc   2b6c     INCF      0x6c,0x1,0x1   				packet_char_count++;                                                         C:\code\2008\Fresh Copy - 2008\camera.c
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002cfe   d01a     BRA       0x2d34         			else if(packet_char_count == 3 && byte == 'K') // third character a K?        C:\code\2008\Fresh Copy - 2008\camera.c
002d00   0e03     MOVLW     0x3                                                                                             
002d02   5d6c     SUBWF     0x6c,0x0,0x1                                                                                    
002d04   e106     BNZ       0x2d12                                                                                          
002d06   0efe     MOVLW     0xfe                                                                                            
002d08   50db     MOVF      0xdb,0x0,0x0                                                                                    
002d0a   084b     SUBLW     0x4b                                                                                            
002d0c   e102     BNZ       0x2d12                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002d0e   2b6c     INCF      0x6c,0x1,0x1   				packet_char_count++;                                                         C:\code\2008\Fresh Copy - 2008\camera.c
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002d10   d011     BRA       0x2d34         			else if(packet_char_count == 4 && byte == '\r') // fourth character a return? C:\code\2008\Fresh Copy - 2008\camera.c
002d12   0e04     MOVLW     0x4                                                                                             
002d14   5d6c     SUBWF     0x6c,0x0,0x1                                                                                    
002d16   e10b     BNZ       0x2d2e                                                                                          
002d18   0efe     MOVLW     0xfe                                                                                            
002d1a   50db     MOVF      0xdb,0x0,0x0                                                                                    
002d1c   080d     SUBLW     0xd                                                                                             
002d1e   e107     BNZ       0x2d2e                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002d20   0102     MOVLB     0x2            				camera_ncks++;                                                               C:\code\2008\Fresh Copy - 2008\camera.c
002d22   2bb2     INCF      0xb2,0x1,0x1                                                                                    
002d24   0e00     MOVLW     0x0                                                                                             
002d26   23b3     ADDWFC    0xb3,0x1,0x1                                                                                    
002d28   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED;                                                      C:\code\2008\Fresh Copy - 2008\camera.c
002d2a   6fb4     MOVWF     0xb4,0x1                                                                                        
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002d2c   d003     BRA       0x2d34         			else                                                                          C:\code\2008\Fresh Copy - 2008\camera.c
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002d2e   0102     MOVLB     0x2            				state = UNSYNCHRONIZED;                                                      C:\code\2008\Fresh Copy - 2008\camera.c
002d30   0e01     MOVLW     0x1                                                                                             
002d32   6fb4     MOVWF     0xb4,0x1                                                                                        
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002d34   d000     BRA       0x2d36         			break;	                                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
002d36   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002d38   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002d3a   ffd9                                                                                                               
002d3c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	FUNCTION:		Initialize_Camera()                                                 C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PURPOSE:		This function is responsable for initializing the                    C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					camera.                                                                    C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	CALLED FROM:	Camera_Handler(), below.                                          C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	RETURNS:		0: Initialization in progress.                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					1: Initialization has completed.                                           C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					2-127: Camera returned a NCK and the returned value                        C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					indicates the state that caused the NCK.                                   C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					128-255: Camera didn't return a ACK or NCK within                          C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					the time allowed. The returned value is the value                          C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					128 added to the state that failed. The amount of                          C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					time allowed is set by the MAX_ACK_LOOP_COUNT                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					parameter found in camera.h.					                                          C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	COMMENTS:		Camera_acks and camera_ncks are incremented by the                  C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					function Camera_State_Machine() which is called by                         C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					Process_Camera_Data() to process data sent by the                          C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					camera.                                                                    C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					                                                                           C:\code\2008\Fresh Copy - 2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\camera.c
002d3e   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Initialize_Camera(void)                                            C:\code\2008\Fresh Copy - 2008\camera.c
002d40   ffe6                                                                                                               
002d42   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002d44   ffd9                                                                                                               
002d46   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           	static unsigned char boot_initialization_flag = 1;                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           	static unsigned char initialize_flag = 1;                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           	static unsigned char state;                                                     C:\code\2008\Fresh Copy - 2008\camera.c
                                           	static unsigned char wait_for_ack;                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           	static unsigned int loop_count;                                                 C:\code\2008\Fresh Copy - 2008\camera.c
                                           	static unsigned char return_value;                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           	unsigned char returned_value;                                                   C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           	// stuff to do after the camera goes through a power-on reset                   C:\code\2008\Fresh Copy - 2008\camera.c
002d48   0102     MOVLB     0x2            	if(boot_initialization_flag == 1)                                               C:\code\2008\Fresh Copy - 2008\camera.c
002d4a   05b5     DECF      0xb5,0x0,0x1                                                                                    
002d4c   e107     BNZ       0x2d5c                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           		// get the camera's attention                                                  C:\code\2008\Fresh Copy - 2008\camera.c
002d4e   d98a     RCALL     0x3064         		Camera_Idle();                                                                 C:\code\2008\Fresh Copy - 2008\camera.c
                                           		// set the command & packet transfer mode                                      C:\code\2008\Fresh Copy - 2008\camera.c
002d50   0e05     MOVLW     0x5            		Raw_Mode(5);                                                                   C:\code\2008\Fresh Copy - 2008\camera.c
002d52   6ee6     MOVWF     0xe6,0x0                                                                                        
002d54   d993     RCALL     0x307c                                                                                          
002d56   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		// don't execute this code again until the next power on reset                 C:\code\2008\Fresh Copy - 2008\camera.c
002d58   0102     MOVLB     0x2            		boot_initialization_flag = 0;                                                  C:\code\2008\Fresh Copy - 2008\camera.c
002d5a   6bb5     CLRF      0xb5,0x1                                                                                        
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           	// do we need to (re)initialize the state machine?                              C:\code\2008\Fresh Copy - 2008\camera.c
002d5c   05b6     DECF      0xb6,0x0,0x1   	if(initialize_flag == 1)                                                        C:\code\2008\Fresh Copy - 2008\camera.c
002d5e   e10d     BNZ       0x2d7a                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
002d60   6bb6     CLRF      0xb6,0x1       		initialize_flag = 0;                                                           C:\code\2008\Fresh Copy - 2008\camera.c
002d62   0102     MOVLB     0x2            		wait_for_ack = 0;                                                              C:\code\2008\Fresh Copy - 2008\camera.c
002d64   6b6e     CLRF      0x6e,0x1                                                                                        
002d66   0e01     MOVLW     0x1            		state = STATE_ONE;                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002d68   6f6d     MOVWF     0x6d,0x1                                                                                        
002d6a   6b6f     CLRF      0x6f,0x1       		loop_count = 0;                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002d6c   6b70     CLRF      0x70,0x1                                                                                        
002d6e   6b71     CLRF      0x71,0x1       		return_value = 0;                                                              C:\code\2008\Fresh Copy - 2008\camera.c
002d70   0102     MOVLB     0x2            		camera_acks = 0;                                                               C:\code\2008\Fresh Copy - 2008\camera.c
002d72   6bb0     CLRF      0xb0,0x1                                                                                        
002d74   6bb1     CLRF      0xb1,0x1                                                                                        
002d76   6bb2     CLRF      0xb2,0x1       		camera_ncks = 0;                                                               C:\code\2008\Fresh Copy - 2008\camera.c
002d78   6bb3     CLRF      0xb3,0x1                                                                                        
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           	// do we need to wait for an ACK from the camera?                               C:\code\2008\Fresh Copy - 2008\camera.c
002d7a   0102     MOVLB     0x2            	if(wait_for_ack == 1)                                                           C:\code\2008\Fresh Copy - 2008\camera.c
002d7c   056e     DECF      0x6e,0x0,0x1                                                                                    
002d7e   e129     BNZ       0x2dd2                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
002d80   0102     MOVLB     0x2            		if(camera_acks >= 1) // got ACK?                                               C:\code\2008\Fresh Copy - 2008\camera.c
002d82   0e01     MOVLW     0x1                                                                                             
002d84   5db0     SUBWF     0xb0,0x0,0x1                                                                                    
002d86   0e00     MOVLW     0x0                                                                                             
002d88   59b1     SUBWFB    0xb1,0x0,0x1                                                                                    
002d8a   e305     BNC       0x2d96                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           			// we're no longer waiting for an ACK                                         C:\code\2008\Fresh Copy - 2008\camera.c
002d8c   0102     MOVLB     0x2            			wait_for_ack = 0;                                                             C:\code\2008\Fresh Copy - 2008\camera.c
002d8e   6b6e     CLRF      0x6e,0x1                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           			// reset the loop counter                                                     C:\code\2008\Fresh Copy - 2008\camera.c
002d90   6b6f     CLRF      0x6f,0x1       			loop_count = 0;                                                               C:\code\2008\Fresh Copy - 2008\camera.c
002d92   6b70     CLRF      0x70,0x1                                                                                        
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\camera.c
002d94   d01d     BRA       0x2dd0         		else if(camera_ncks >= 1) // got NCK?                                          C:\code\2008\Fresh Copy - 2008\camera.c
002d96   0e01     MOVLW     0x1                                                                                             
002d98   5db2     SUBWF     0xb2,0x0,0x1                                                                                    
002d9a   0e00     MOVLW     0x0                                                                                             
002d9c   59b3     SUBWFB    0xb3,0x0,0x1                                                                                    
002d9e   e304     BNC       0x2da8                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           			// return with a value that signals an error happened                         C:\code\2008\Fresh Copy - 2008\camera.c
002da0   0102     MOVLB     0x2            			return_value = state - 1;                                                     C:\code\2008\Fresh Copy - 2008\camera.c
002da2   056d     DECF      0x6d,0x0,0x1                                                                                    
002da4   6f71     MOVWF     0x71,0x1                                                                                        
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\camera.c
002da6   d014     BRA       0x2dd0         		else if(loop_count >= MAX_ACK_LOOP_COUNT) // have we waited too long?          C:\code\2008\Fresh Copy - 2008\camera.c
002da8   0102     MOVLB     0x2                                                                                             
002daa   0e0a     MOVLW     0xa                                                                                             
002dac   5d6f     SUBWF     0x6f,0x0,0x1                                                                                    
002dae   0e00     MOVLW     0x0                                                                                             
002db0   5970     SUBWFB    0x70,0x0,0x1                                                                                    
002db2   e30b     BNC       0x2dca                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           			// return with a value that signals an error happened                         C:\code\2008\Fresh Copy - 2008\camera.c
002db4   0e80     MOVLW     0x80           			return_value = state + 128 - 1;                                               C:\code\2008\Fresh Copy - 2008\camera.c
002db6   256d     ADDWF     0x6d,0x0,0x1                                                                                    
002db8   6e00     MOVWF     0x0,0x0                                                                                         
002dba   6a01     CLRF      0x1,0x0                                                                                         
002dbc   0e00     MOVLW     0x0                                                                                             
002dbe   2201     ADDWFC    0x1,0x1,0x0                                                                                     
002dc0   0600     DECF      0x0,0x1,0x0                                                                                     
002dc2   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
002dc4   c000     MOVFF     0x0,0x271                                                                                       
002dc6   f271                                                                                                               
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\camera.c
002dc8   d003     BRA       0x2dd0         		else                                                                           C:\code\2008\Fresh Copy - 2008\camera.c
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           			// if we fall through to here it means that that we've sent a                 C:\code\2008\Fresh Copy - 2008\camera.c
                                           			// command to the camera, and we're still waiting to receive                  C:\code\2008\Fresh Copy - 2008\camera.c
                                           			// an ACK/NCK or time-out, so other than incrementing the loop                C:\code\2008\Fresh Copy - 2008\camera.c
                                           			// counter, we don't do anything and continue to wait...                      C:\code\2008\Fresh Copy - 2008\camera.c
002dca   2b6f     INCF      0x6f,0x1,0x1   			loop_count++;                                                                 C:\code\2008\Fresh Copy - 2008\camera.c
002dcc   0e00     MOVLW     0x0                                                                                             
002dce   2370     ADDWFC    0x70,0x1,0x1                                                                                    
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
002dd0   d109     BRA       0x2fe4         	else                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           		// if debugging mode is on, send camera initialization information             C:\code\2008\Fresh Copy - 2008\camera.c
                                           		// to the terminal (the DEBUG() macro is defined in camera.h                   C:\code\2008\Fresh Copy - 2008\camera.c
                                           		DEBUG(("Camera: Initialization state = %u\r\n", (unsigned int)state));         C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           		// reset the ACK/NCK counters                                                  C:\code\2008\Fresh Copy - 2008\camera.c
002dd2   0102     MOVLB     0x2            		camera_acks = 0;                                                               C:\code\2008\Fresh Copy - 2008\camera.c
002dd4   6bb0     CLRF      0xb0,0x1                                                                                        
002dd6   6bb1     CLRF      0xb1,0x1                                                                                        
002dd8   6bb2     CLRF      0xb2,0x1       		camera_ncks = 0;                                                               C:\code\2008\Fresh Copy - 2008\camera.c
002dda   6bb3     CLRF      0xb3,0x1                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002ddc   0102     MOVLB     0x2            		switch(state)                                                                  C:\code\2008\Fresh Copy - 2008\camera.c
002dde   516d     MOVF      0x6d,0x0,0x1                                                                                    
002de0   0a12     XORLW     0x12                                                                                            
002de2   e101     BNZ       0x2de6                                                                                          
002de4   d0fc     BRA       0x2fde                                                                                          
002de6   0a03     XORLW     0x3                                                                                             
002de8   e101     BNZ       0x2dec                                                                                          
002dea   d0e2     BRA       0x2fb0                                                                                          
002dec   0a01     XORLW     0x1                                                                                             
002dee   e101     BNZ       0x2df2                                                                                          
002df0   d0d6     BRA       0x2f9e                                                                                          
002df2   0a1f     XORLW     0x1f                                                                                            
002df4   e101     BNZ       0x2df8                                                                                          
002df6   d0c6     BRA       0x2f84                                                                                          
002df8   0a01     XORLW     0x1                                                                                             
002dfa   e101     BNZ       0x2dfe                                                                                          
002dfc   d0b6     BRA       0x2f6a                                                                                          
002dfe   0a03     XORLW     0x3                                                                                             
002e00   e101     BNZ       0x2e04                                                                                          
002e02   d0a6     BRA       0x2f50                                                                                          
002e04   0a01     XORLW     0x1                                                                                             
002e06   e101     BNZ       0x2e0a                                                                                          
002e08   d096     BRA       0x2f36                                                                                          
002e0a   0a07     XORLW     0x7                                                                                             
002e0c   e101     BNZ       0x2e10                                                                                          
002e0e   d086     BRA       0x2f1c                                                                                          
002e10   0a01     XORLW     0x1                                                                                             
002e12   e101     BNZ       0x2e16                                                                                          
002e14   d078     BRA       0x2f06                                                                                          
002e16   0a03     XORLW     0x3                                                                                             
002e18   e069     BZ        0x2eec                                                                                          
002e1a   0a01     XORLW     0x1                                                                                             
002e1c   e05a     BZ        0x2ed2                                                                                          
002e1e   0a0f     XORLW     0xf                                                                                             
002e20   e04b     BZ        0x2eb8                                                                                          
002e22   0a01     XORLW     0x1                                                                                             
002e24   e03c     BZ        0x2e9e                                                                                          
002e26   0a03     XORLW     0x3                                                                                             
002e28   e02d     BZ        0x2e84                                                                                          
002e2a   0a01     XORLW     0x1                                                                                             
002e2c   e01e     BZ        0x2e6a                                                                                          
002e2e   0a07     XORLW     0x7                                                                                             
002e30   e00f     BZ        0x2e50                                                                                          
002e32   0a01     XORLW     0x1                                                                                             
002e34   e009     BZ        0x2e48                                                                                          
002e36   0a03     XORLW     0x3                                                                                             
002e38   e001     BZ        0x2e3c                                                                                          
002e3a   d0d4     BRA       0x2fe4                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           			case STATE_ONE:                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// get the camera's attention                                                C:\code\2008\Fresh Copy - 2008\camera.c
002e3c   d913     RCALL     0x3064         				Camera_Idle();                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// next state                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002e3e   0102     MOVLB     0x2            				state = STATE_TWO;                                                           C:\code\2008\Fresh Copy - 2008\camera.c
002e40   0e02     MOVLW     0x2                                                                                             
002e42   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// don't wait for an ACK before transitioning to the next state              C:\code\2008\Fresh Copy - 2008\camera.c
002e44   6b6e     CLRF      0x6e,0x1       				wait_for_ack = 0;                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002e46   d0ce     BRA       0x2fe4         				break;                                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           			case STATE_TWO:                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// next state                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002e48   0e03     MOVLW     0x3            				state = STATE_THREE;                                                         C:\code\2008\Fresh Copy - 2008\camera.c
002e4a   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// don't wait for an ACK before transitioning to the next state              C:\code\2008\Fresh Copy - 2008\camera.c
002e4c   6b6e     CLRF      0x6e,0x1       				wait_for_ack = 0;                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002e4e   d0ca     BRA       0x2fe4         				break;                                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           			case STATE_THREE:                                                             C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// initialize the Common Control I register                                  C:\code\2008\Fresh Copy - 2008\camera.c
002e50   0e80     MOVLW     0x80           				Write_Camera_Module_Register(COMI_ADDRESS, COMI_DEFAULT);                    C:\code\2008\Fresh Copy - 2008\camera.c
002e52   6ee6     MOVWF     0xe6,0x0                                                                                        
002e54   0e29     MOVLW     0x29                                                                                            
002e56   6ee6     MOVWF     0xe6,0x0                                                                                        
002e58   d970     RCALL     0x313a                                                                                          
002e5a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002e5c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002e5e   0102     MOVLB     0x2            				state = STATE_FOUR;                                                          C:\code\2008\Fresh Copy - 2008\camera.c
002e60   0e04     MOVLW     0x4                                                                                             
002e62   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Fresh Copy - 2008\camera.c
002e64   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002e66   6f6e     MOVWF     0x6e,0x1                                                                                        
002e68   d0bd     BRA       0x2fe4         				break;                                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           			case STATE_FOUR:                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// initialize the Common Control B register                                  C:\code\2008\Fresh Copy - 2008\camera.c
002e6a   0e20     MOVLW     0x20           				Write_Camera_Module_Register(COMB_ADDRESS, COMB_DEFAULT);                    C:\code\2008\Fresh Copy - 2008\camera.c
002e6c   6ee6     MOVWF     0xe6,0x0                                                                                        
002e6e   0e13     MOVLW     0x13                                                                                            
002e70   6ee6     MOVWF     0xe6,0x0                                                                                        
002e72   d963     RCALL     0x313a                                                                                          
002e74   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002e76   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002e78   0102     MOVLB     0x2            				state = STATE_FIVE;                                                          C:\code\2008\Fresh Copy - 2008\camera.c
002e7a   0e05     MOVLW     0x5                                                                                             
002e7c   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Fresh Copy - 2008\camera.c
002e7e   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002e80   6f6e     MOVWF     0x6e,0x1                                                                                        
002e82   d0b0     BRA       0x2fe4         				break;                                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           			case STATE_FIVE:                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// initialize the Common Control J register to power-on state                C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// to disable the banding filter, which must be done before                  C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// setting the Frame Rate Adjust register 2 (EHSL)                           C:\code\2008\Fresh Copy - 2008\camera.c
002e84   0e84     MOVLW     0x84           				Write_Camera_Module_Register(COMJ_ADDRESS, COMJ_DEFAULT);                    C:\code\2008\Fresh Copy - 2008\camera.c
002e86   6ee6     MOVWF     0xe6,0x0                                                                                        
002e88   0e2d     MOVLW     0x2d                                                                                            
002e8a   6ee6     MOVWF     0xe6,0x0                                                                                        
002e8c   d956     RCALL     0x313a                                                                                          
002e8e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002e90   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002e92   0102     MOVLB     0x2            				state = STATE_SIX;                                                           C:\code\2008\Fresh Copy - 2008\camera.c
002e94   0e06     MOVLW     0x6                                                                                             
002e96   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Fresh Copy - 2008\camera.c
002e98   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002e9a   6f6e     MOVWF     0x6e,0x1                                                                                        
002e9c   d0a3     BRA       0x2fe4         				break;                                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           			case STATE_SIX:                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// initialize the Frame Rate Adjust register 1                               C:\code\2008\Fresh Copy - 2008\camera.c
002e9e   0e80     MOVLW     0x80           				Write_Camera_Module_Register(EHSH_ADDRESS, EHSH_DEFAULT);                    C:\code\2008\Fresh Copy - 2008\camera.c
002ea0   6ee6     MOVWF     0xe6,0x0                                                                                        
002ea2   0e2a     MOVLW     0x2a                                                                                            
002ea4   6ee6     MOVWF     0xe6,0x0                                                                                        
002ea6   d949     RCALL     0x313a                                                                                          
002ea8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002eaa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002eac   0102     MOVLB     0x2            				state = STATE_SEVEN;                                                         C:\code\2008\Fresh Copy - 2008\camera.c
002eae   0e07     MOVLW     0x7                                                                                             
002eb0   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Fresh Copy - 2008\camera.c
002eb2   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002eb4   6f6e     MOVWF     0x6e,0x1                                                                                        
002eb6   d096     BRA       0x2fe4         				break;                                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           			case STATE_SEVEN:                                                             C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// initialize the Frame Rate Adjust register 2                               C:\code\2008\Fresh Copy - 2008\camera.c
002eb8   0e20     MOVLW     0x20           				Write_Camera_Module_Register(EHSL_ADDRESS, EHSL_DEFAULT);                    C:\code\2008\Fresh Copy - 2008\camera.c
002eba   6ee6     MOVWF     0xe6,0x0                                                                                        
002ebc   0e2b     MOVLW     0x2b                                                                                            
002ebe   6ee6     MOVWF     0xe6,0x0                                                                                        
002ec0   d93c     RCALL     0x313a                                                                                          
002ec2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002ec4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002ec6   0102     MOVLB     0x2            				state = STATE_EIGHT;                                                         C:\code\2008\Fresh Copy - 2008\camera.c
002ec8   0e08     MOVLW     0x8                                                                                             
002eca   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Fresh Copy - 2008\camera.c
002ecc   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002ece   6f6e     MOVWF     0x6e,0x1                                                                                        
002ed0   d089     BRA       0x2fe4         				break;                                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           			case STATE_EIGHT:                                                             C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// initialize the Common Control J register                                  C:\code\2008\Fresh Copy - 2008\camera.c
002ed2   0e84     MOVLW     0x84           				Write_Camera_Module_Register(COMJ_ADDRESS, COMJ_DEFAULT);                    C:\code\2008\Fresh Copy - 2008\camera.c
002ed4   6ee6     MOVWF     0xe6,0x0                                                                                        
002ed6   0e2d     MOVLW     0x2d                                                                                            
002ed8   6ee6     MOVWF     0xe6,0x0                                                                                        
002eda   d92f     RCALL     0x313a                                                                                          
002edc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002ede   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002ee0   0102     MOVLB     0x2            				state = STATE_NINE;                                                          C:\code\2008\Fresh Copy - 2008\camera.c
002ee2   0e09     MOVLW     0x9                                                                                             
002ee4   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Fresh Copy - 2008\camera.c
002ee6   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002ee8   6f6e     MOVWF     0x6e,0x1                                                                                        
002eea   d07c     BRA       0x2fe4         				break;                                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           			case STATE_NINE:                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// initialize the Common Control A register                                  C:\code\2008\Fresh Copy - 2008\camera.c
002eec   0e20     MOVLW     0x20           				Write_Camera_Module_Register(COMA_ADDRESS, COMA_DEFAULT);                    C:\code\2008\Fresh Copy - 2008\camera.c
002eee   6ee6     MOVWF     0xe6,0x0                                                                                        
002ef0   0e12     MOVLW     0x12                                                                                            
002ef2   6ee6     MOVWF     0xe6,0x0                                                                                        
002ef4   d922     RCALL     0x313a                                                                                          
002ef6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002ef8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002efa   0102     MOVLB     0x2            				state = STATE_TEN;                                                           C:\code\2008\Fresh Copy - 2008\camera.c
002efc   0e0a     MOVLW     0xa                                                                                             
002efe   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Fresh Copy - 2008\camera.c
002f00   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002f02   6f6e     MOVWF     0x6e,0x1                                                                                        
002f04   d06f     BRA       0x2fe4         				break;                                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           			case STATE_TEN:                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// initialize the Automatic Gain Control register                            C:\code\2008\Fresh Copy - 2008\camera.c
002f06   6ae6     CLRF      0xe6,0x0       				Write_Camera_Module_Register(AGC_ADDRESS, AGC_DEFAULT);                      C:\code\2008\Fresh Copy - 2008\camera.c
002f08   6ae6     CLRF      0xe6,0x0                                                                                        
002f0a   d917     RCALL     0x313a                                                                                          
002f0c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f0e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002f10   0102     MOVLB     0x2            				state = STATE_ELEVEN;                                                        C:\code\2008\Fresh Copy - 2008\camera.c
002f12   0e0b     MOVLW     0xb                                                                                             
002f14   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Fresh Copy - 2008\camera.c
002f16   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002f18   6f6e     MOVWF     0x6e,0x1                                                                                        
002f1a   d064     BRA       0x2fe4         				break;                                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           			case STATE_ELEVEN:                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// initialize the Blue Gain Control register                                 C:\code\2008\Fresh Copy - 2008\camera.c
002f1c   0e80     MOVLW     0x80           				Write_Camera_Module_Register(BLU_ADDRESS, BLU_DEFAULT);                      C:\code\2008\Fresh Copy - 2008\camera.c
002f1e   6ee6     MOVWF     0xe6,0x0                                                                                        
002f20   0e01     MOVLW     0x1                                                                                             
002f22   6ee6     MOVWF     0xe6,0x0                                                                                        
002f24   d90a     RCALL     0x313a                                                                                          
002f26   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f28   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002f2a   0102     MOVLB     0x2            				state = STATE_TWELVE;                                                        C:\code\2008\Fresh Copy - 2008\camera.c
002f2c   0e0c     MOVLW     0xc                                                                                             
002f2e   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Fresh Copy - 2008\camera.c
002f30   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002f32   6f6e     MOVWF     0x6e,0x1                                                                                        
002f34   d057     BRA       0x2fe4         				break;                                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           			case STATE_TWELVE:                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// initialize the Red Gain Control register                                  C:\code\2008\Fresh Copy - 2008\camera.c
002f36   0e80     MOVLW     0x80           				Write_Camera_Module_Register(RED_ADDRESS, RED_DEFAULT);                      C:\code\2008\Fresh Copy - 2008\camera.c
002f38   6ee6     MOVWF     0xe6,0x0                                                                                        
002f3a   0e02     MOVLW     0x2                                                                                             
002f3c   6ee6     MOVWF     0xe6,0x0                                                                                        
002f3e   d8fd     RCALL     0x313a                                                                                          
002f40   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f42   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002f44   0102     MOVLB     0x2            				state = STATE_THIRTEEN;                                                      C:\code\2008\Fresh Copy - 2008\camera.c
002f46   0e0d     MOVLW     0xd                                                                                             
002f48   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Fresh Copy - 2008\camera.c
002f4a   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002f4c   6f6e     MOVWF     0x6e,0x1                                                                                        
002f4e   d04a     BRA       0x2fe4         				break;                                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           			case STATE_THIRTEEN:                                                          C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// initialize the Saturation Control register                                C:\code\2008\Fresh Copy - 2008\camera.c
002f50   0e80     MOVLW     0x80           				Write_Camera_Module_Register(SAT_ADDRESS, SAT_DEFAULT);                      C:\code\2008\Fresh Copy - 2008\camera.c
002f52   6ee6     MOVWF     0xe6,0x0                                                                                        
002f54   0e03     MOVLW     0x3                                                                                             
002f56   6ee6     MOVWF     0xe6,0x0                                                                                        
002f58   d8f0     RCALL     0x313a                                                                                          
002f5a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f5c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002f5e   0102     MOVLB     0x2            				state = STATE_FOURTEEN;                                                      C:\code\2008\Fresh Copy - 2008\camera.c
002f60   0e0e     MOVLW     0xe                                                                                             
002f62   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Fresh Copy - 2008\camera.c
002f64   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002f66   6f6e     MOVWF     0x6e,0x1                                                                                        
002f68   d03d     BRA       0x2fe4         				break;                                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           			case STATE_FOURTEEN:                                                          C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// initialize the Brightness Control register                                C:\code\2008\Fresh Copy - 2008\camera.c
002f6a   0e01     MOVLW     0x1            				Write_Camera_Module_Register(BRT_ADDRESS, BRT_DEFAULT);                      C:\code\2008\Fresh Copy - 2008\camera.c
002f6c   6ee6     MOVWF     0xe6,0x0                                                                                        
002f6e   0e06     MOVLW     0x6                                                                                             
002f70   6ee6     MOVWF     0xe6,0x0                                                                                        
002f72   d8e3     RCALL     0x313a                                                                                          
002f74   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f76   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002f78   0102     MOVLB     0x2            				state = STATE_FIFTEEN;                                                       C:\code\2008\Fresh Copy - 2008\camera.c
002f7a   0e0f     MOVLW     0xf                                                                                             
002f7c   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Fresh Copy - 2008\camera.c
002f7e   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002f80   6f6e     MOVWF     0x6e,0x1                                                                                        
002f82   d030     BRA       0x2fe4         				break;                                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           			case STATE_FIFTEEN:                                                           C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// initialize the Automatic Exposure Control register                        C:\code\2008\Fresh Copy - 2008\camera.c
002f84   0e01     MOVLW     0x1            				Write_Camera_Module_Register(AEC_ADDRESS, AEC_DEFAULT);                      C:\code\2008\Fresh Copy - 2008\camera.c
002f86   6ee6     MOVWF     0xe6,0x0                                                                                        
002f88   0e10     MOVLW     0x10                                                                                            
002f8a   6ee6     MOVWF     0xe6,0x0                                                                                        
002f8c   d8d6     RCALL     0x313a                                                                                          
002f8e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f90   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002f92   0102     MOVLB     0x2            				state = STATE_SIXTEEN;                                                       C:\code\2008\Fresh Copy - 2008\camera.c
002f94   0e10     MOVLW     0x10                                                                                            
002f96   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Fresh Copy - 2008\camera.c
002f98   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002f9a   6f6e     MOVWF     0x6e,0x1                                                                                        
002f9c   d023     BRA       0x2fe4         				break;                                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                           			case STATE_SIXTEEN:                                                           C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// initialize the Noise Filter value                                         C:\code\2008\Fresh Copy - 2008\camera.c
002f9e   6ae6     CLRF      0xe6,0x0       				Noise_Filter(NF_DEFAULT);                                                    C:\code\2008\Fresh Copy - 2008\camera.c
002fa0   d88b     RCALL     0x30b8                                                                                          
002fa2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002fa4   0102     MOVLB     0x2            				state = STATE_SEVENTEEN;                                                     C:\code\2008\Fresh Copy - 2008\camera.c
002fa6   0e11     MOVLW     0x11                                                                                            
002fa8   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Fresh Copy - 2008\camera.c
002faa   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002fac   6f6e     MOVWF     0x6e,0x1                                                                                        
002fae   d01a     BRA       0x2fe4         				break;                                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           			case STATE_SEVENTEEN:                                                         C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// send the TC or Track Color command                                        C:\code\2008\Fresh Copy - 2008\camera.c
002fc0   0e73     MOVLW     0x73           				Track_Color(R_MIN_DEFAULT, R_MAX_DEFAULT,                                    C:\code\2008\Fresh Copy - 2008\camera.c
002fc2   6ee6     MOVWF     0xe6,0x0                                                                                        
002fc4   0e55     MOVLW     0x55                                                                                            
002fc6   6ee6     MOVWF     0xe6,0x0                                                                                        
002fb8   0e11     MOVLW     0x11           							G_MIN_DEFAULT, G_MAX_DEFAULT,                                             C:\code\2008\Fresh Copy - 2008\camera.c
002fba   6ee6     MOVWF     0xe6,0x0                                                                                        
002fbc   0e0f     MOVLW     0xf                                                                                             
002fbe   6ee6     MOVWF     0xe6,0x0                                                                                        
002fb0   0e91     MOVLW     0x91           							B_MIN_DEFAULT, B_MAX_DEFAULT);                                            C:\code\2008\Fresh Copy - 2008\camera.c
002fb2   6ee6     MOVWF     0xe6,0x0                                                                                        
002fb4   0e64     MOVLW     0x64                                                                                            
002fb6   6ee6     MOVWF     0xe6,0x0                                                                                        
002fc8   d81b     RCALL     0x3000                                                                                          
002fca   6ef5     MOVWF     0xf5,0x0                                                                                        
002fcc   0e06     MOVLW     0x6                                                                                             
002fce   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
002fd0   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002fd2   0102     MOVLB     0x2            				state = STATE_EIGHTEEN;                                                      C:\code\2008\Fresh Copy - 2008\camera.c
002fd4   0e12     MOVLW     0x12                                                                                            
002fd6   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Fresh Copy - 2008\camera.c
002fd8   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002fda   6f6e     MOVWF     0x6e,0x1                                                                                        
002fdc   d003     BRA       0x2fe4         				break;                                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           			case STATE_EIGHTEEN:                                                          C:\code\2008\Fresh Copy - 2008\camera.c
                                           				// signal that we're done                                                    C:\code\2008\Fresh Copy - 2008\camera.c
002fde   0e01     MOVLW     0x1            				return_value = 1;                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002fe0   6f71     MOVWF     0x71,0x1                                                                                        
002fe2   d000     BRA       0x2fe4         				break;                                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           	// If we're returning from this function with a value greater                   C:\code\2008\Fresh Copy - 2008\camera.c
                                           	// than zero, it means that configuration is complete or we've                  C:\code\2008\Fresh Copy - 2008\camera.c
                                           	// generated an error. In either case we'll want to re-initialize               C:\code\2008\Fresh Copy - 2008\camera.c
                                           	// the state machine if this function is called again.                          C:\code\2008\Fresh Copy - 2008\camera.c
002fe4   5171     MOVF      0x71,0x0,0x1   	if(return_value > 0)                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002fe6   0800     SUBLW     0x0                                                                                             
002fe8   e203     BC        0x2ff0                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
002fea   0102     MOVLB     0x2            		initialize_flag = 1;                                                           C:\code\2008\Fresh Copy - 2008\camera.c
002fec   0e01     MOVLW     0x1                                                                                             
002fee   6fb6     MOVWF     0xb6,0x1                                                                                        
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
002ff0   0102     MOVLB     0x2            	return(return_value);	                                                          C:\code\2008\Fresh Copy - 2008\camera.c
002ff2   5171     MOVF      0x71,0x0,0x1                                                                                    
002ff4   d000     BRA       0x2ff6                                                                                          
002ff6   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
002ff8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002ffa   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002ffc   ffd9                                                                                                               
002ffe   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	FUNCTION:		Track_Color()                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PURPOSE:		Properly formats and sends a TC (Track Color) command                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					to the camera.		                                                           C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PARAMETERS:		Minimum and maximum intensity values for the red, green           C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					and blue (or YCrCb) channels.                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	COMMENTS:		Camera must be configured to accept binary commands,                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					See CMUCam2_commands.pdf for details.                                      C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\camera.c
003000   cfd9     MOVFF     0xfd9,0xfe6    void Track_Color(unsigned char Rmin, unsigned char Rmax,                         C:\code\2008\Fresh Copy - 2008\camera.c
003002   ffe6                                                                                                               
003004   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003006   ffd9                                                                                                               
                                           				 unsigned char Gmin, unsigned char Gmax,                                     C:\code\2008\Fresh Copy - 2008\camera.c
                                           				 unsigned char Bmin, unsigned char Bmax)                                     C:\code\2008\Fresh Copy - 2008\camera.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
003008   0e54     MOVLW     0x54           	Write_Camera_Serial_Port('T');                                                  C:\code\2008\Fresh Copy - 2008\camera.c
00300a   6ee6     MOVWF     0xe6,0x0                                                                                        
00300c   d8bc     RCALL     0x3186                                                                                          
00300e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003010   0e43     MOVLW     0x43           	Write_Camera_Serial_Port('C');                                                  C:\code\2008\Fresh Copy - 2008\camera.c
003012   6ee6     MOVWF     0xe6,0x0                                                                                        
003014   d8b8     RCALL     0x3186                                                                                          
003016   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003018   0e06     MOVLW     0x6            	Write_Camera_Serial_Port(6);                                                    C:\code\2008\Fresh Copy - 2008\camera.c
00301a   6ee6     MOVWF     0xe6,0x0                                                                                        
00301c   d8b4     RCALL     0x3186                                                                                          
00301e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003020   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(Rmin);                                                 C:\code\2008\Fresh Copy - 2008\camera.c
003022   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003024   ffe6                                                                                                               
003026   d8af     RCALL     0x3186                                                                                          
003028   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00302a   0efd     MOVLW     0xfd           	Write_Camera_Serial_Port(Rmax);                                                 C:\code\2008\Fresh Copy - 2008\camera.c
00302c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00302e   ffe6                                                                                                               
003030   d8aa     RCALL     0x3186                                                                                          
003032   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003034   0efc     MOVLW     0xfc           	Write_Camera_Serial_Port(Gmin);                                                 C:\code\2008\Fresh Copy - 2008\camera.c
003036   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003038   ffe6                                                                                                               
00303a   d8a5     RCALL     0x3186                                                                                          
00303c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00303e   0efb     MOVLW     0xfb           	Write_Camera_Serial_Port(Gmax);                                                 C:\code\2008\Fresh Copy - 2008\camera.c
003040   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003042   ffe6                                                                                                               
003044   d8a0     RCALL     0x3186                                                                                          
003046   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003048   0efa     MOVLW     0xfa           	Write_Camera_Serial_Port(Bmin);                                                 C:\code\2008\Fresh Copy - 2008\camera.c
00304a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00304c   ffe6                                                                                                               
00304e   d89b     RCALL     0x3186                                                                                          
003050   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003052   0ef9     MOVLW     0xf9           	Write_Camera_Serial_Port(Bmax);                                                 C:\code\2008\Fresh Copy - 2008\camera.c
003054   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003056   ffe6                                                                                                               
003058   d896     RCALL     0x3186                                                                                          
00305a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00305c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
00305e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003060   ffd9                                                                                                               
003062   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	FUNCTION:		Camera_Idle()                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PURPOSE:		If the camera is currently streaming data, this command              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					will stop the streaming and prepare it to receive commands.                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\camera.c
                                           void Camera_Idle(void)                                                           C:\code\2008\Fresh Copy - 2008\camera.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
003064   0e0d     MOVLW     0xd            	Write_Camera_Serial_Port('\r');                                                 C:\code\2008\Fresh Copy - 2008\camera.c
003066   6ee6     MOVWF     0xe6,0x0                                                                                        
003068   d88e     RCALL     0x3186                                                                                          
00306a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00306c   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	FUNCTION:		Restart_Camera()                                                    C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PURPOSE:		This command will force a camera reinitialization		                  C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PARAMETERS:		none                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	RETURNS:		nothing                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\camera.c
                                           void Restart_Camera(void)                                                        C:\code\2008\Fresh Copy - 2008\camera.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
00306e   0102     MOVLB     0x2            	camera_initialized = 0;                                                         C:\code\2008\Fresh Copy - 2008\camera.c
003070   6bad     CLRF      0xad,0x1                                                                                        
003072   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	FUNCTION:		Get_Camera_State()                                                  C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PURPOSE:		                                                                     C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PARAMETERS:		none                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	RETURNS:		0: camera is initializing.                                           C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					1: camera is initialized and sending T (Tracking) packets.                 C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\camera.c
                                           unsigned char Get_Camera_State(void)                                             C:\code\2008\Fresh Copy - 2008\camera.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
003074   0102     MOVLB     0x2            	return(camera_initialized);                                                     C:\code\2008\Fresh Copy - 2008\camera.c
003076   51ad     MOVF      0xad,0x0,0x1                                                                                    
003078   d000     BRA       0x307a                                                                                          
00307a   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	FUNCTION:		Raw_Mode()                                                          C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PURPOSE:		Properly formats and sends a camera RM (Raw Mode) command            C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					to the camera. 		                                                          C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PARAMETERS:		unsigned char                                                     C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	RETURNS:		nothing                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	COMMENTS:		This body of software assumes that raw serial communication         C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					mode five is invoked, meaning that camera input and output                 C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					is done in the raw binary format and that ACKs and NCKs                    C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					are not suppressed.                                                        C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					See CMUCam2_commands.pdf for details.                                      C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\camera.c
00307c   cfd9     MOVFF     0xfd9,0xfe6    void Raw_Mode(unsigned char mode)                                                C:\code\2008\Fresh Copy - 2008\camera.c
00307e   ffe6                                                                                                               
003080   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003082   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
003084   0e52     MOVLW     0x52           	Write_Camera_Serial_Port('R');                                                  C:\code\2008\Fresh Copy - 2008\camera.c
003086   6ee6     MOVWF     0xe6,0x0                                                                                        
003088   d87e     RCALL     0x3186                                                                                          
00308a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00308c   0e4d     MOVLW     0x4d           	Write_Camera_Serial_Port('M');                                                  C:\code\2008\Fresh Copy - 2008\camera.c
00308e   6ee6     MOVWF     0xe6,0x0                                                                                        
003090   d87a     RCALL     0x3186                                                                                          
003092   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003094   0e20     MOVLW     0x20           	Write_Camera_Serial_Port(' ');                                                  C:\code\2008\Fresh Copy - 2008\camera.c
003096   6ee6     MOVWF     0xe6,0x0                                                                                        
003098   d876     RCALL     0x3186                                                                                          
00309a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00309c   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(48 + mode);                                            C:\code\2008\Fresh Copy - 2008\camera.c
00309e   50db     MOVF      0xdb,0x0,0x0                                                                                    
0030a0   0f30     ADDLW     0x30                                                                                            
0030a2   6ee6     MOVWF     0xe6,0x0                                                                                        
0030a4   d870     RCALL     0x3186                                                                                          
0030a6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0030a8   0e0d     MOVLW     0xd            	Write_Camera_Serial_Port('\r');                                                 C:\code\2008\Fresh Copy - 2008\camera.c
0030aa   6ee6     MOVWF     0xe6,0x0                                                                                        
0030ac   d86c     RCALL     0x3186                                                                                          
0030ae   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0030b0   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
0030b2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0030b4   ffd9                                                                                                               
0030b6   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	FUNCTION:		Noise_Filter()                                                      C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PURPOSE:		Properly formats and sends a camera NF (Noise Filter)                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					command to the camera.                                                     C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PARAMETERS:		Noise filter threshold value.                                     C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	COMMENTS:		Camera must be configured to accept binary commands,                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					See CMUCam2_commands.pdf for details.                                      C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\camera.c
0030b8   cfd9     MOVFF     0xfd9,0xfe6    void Noise_Filter(unsigned char threshold)                                       C:\code\2008\Fresh Copy - 2008\camera.c
0030ba   ffe6                                                                                                               
0030bc   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0030be   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
0030c0   0e4e     MOVLW     0x4e           	Write_Camera_Serial_Port('N');                                                  C:\code\2008\Fresh Copy - 2008\camera.c
0030c2   6ee6     MOVWF     0xe6,0x0                                                                                        
0030c4   d860     RCALL     0x3186                                                                                          
0030c6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0030c8   0e46     MOVLW     0x46           	Write_Camera_Serial_Port('F');                                                  C:\code\2008\Fresh Copy - 2008\camera.c
0030ca   6ee6     MOVWF     0xe6,0x0                                                                                        
0030cc   d85c     RCALL     0x3186                                                                                          
0030ce   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0030d0   0e01     MOVLW     0x1            	Write_Camera_Serial_Port(1);                                                    C:\code\2008\Fresh Copy - 2008\camera.c
0030d2   6ee6     MOVWF     0xe6,0x0                                                                                        
0030d4   d858     RCALL     0x3186                                                                                          
0030d6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0030d8   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(threshold);                                            C:\code\2008\Fresh Copy - 2008\camera.c
0030da   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0030dc   ffe6                                                                                                               
0030de   d853     RCALL     0x3186                                                                                          
0030e0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0030e2   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
0030e4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0030e6   ffd9                                                                                                               
0030e8   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	FUNCTION:		Virtual_Window()                                                    C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PURPOSE:		Properly formats and sends a VW (Virtual Window) command             C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					to the camera.                                                             C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PARAMETERS:		Four unsigned chars specifying two corners of the                 C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					virtual window.                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	COMMENTS:		Camera must be configured to accept binary commands,                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					See CMUCam2_commands.pdf for details.                                      C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\camera.c
0030ea   cfd9     MOVFF     0xfd9,0xfe6    void Virtual_Window(unsigned char x, unsigned char y, unsigned char x2, unsigned char y2) C:\code\2008\Fresh Copy - 2008\camera.c
0030ec   ffe6                                                                                                               
0030ee   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0030f0   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
0030f2   0e56     MOVLW     0x56           	Write_Camera_Serial_Port('V');                                                  C:\code\2008\Fresh Copy - 2008\camera.c
0030f4   6ee6     MOVWF     0xe6,0x0                                                                                        
0030f6   d847     RCALL     0x3186                                                                                          
0030f8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0030fa   0e57     MOVLW     0x57           	Write_Camera_Serial_Port('W');                                                  C:\code\2008\Fresh Copy - 2008\camera.c
0030fc   6ee6     MOVWF     0xe6,0x0                                                                                        
0030fe   d843     RCALL     0x3186                                                                                          
003100   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003102   0e04     MOVLW     0x4            	Write_Camera_Serial_Port(4);                                                    C:\code\2008\Fresh Copy - 2008\camera.c
003104   6ee6     MOVWF     0xe6,0x0                                                                                        
003106   d83f     RCALL     0x3186                                                                                          
003108   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00310a   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(x);                                                    C:\code\2008\Fresh Copy - 2008\camera.c
00310c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00310e   ffe6                                                                                                               
003110   d83a     RCALL     0x3186                                                                                          
003112   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003114   0efd     MOVLW     0xfd           	Write_Camera_Serial_Port(y);                                                    C:\code\2008\Fresh Copy - 2008\camera.c
003116   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003118   ffe6                                                                                                               
00311a   d835     RCALL     0x3186                                                                                          
00311c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00311e   0efc     MOVLW     0xfc           	Write_Camera_Serial_Port(x2);                                                   C:\code\2008\Fresh Copy - 2008\camera.c
003120   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003122   ffe6                                                                                                               
003124   d830     RCALL     0x3186                                                                                          
003126   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003128   0efb     MOVLW     0xfb           	Write_Camera_Serial_Port(y2);                                                   C:\code\2008\Fresh Copy - 2008\camera.c
00312a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00312c   ffe6                                                                                                               
00312e   d82b     RCALL     0x3186                                                                                          
003130   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003132   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
003134   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003136   ffd9                                                                                                               
003138   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	FUNCTION:		Write_Camera_Module_Register()                                      C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PURPOSE:		Properly formats and sends a CR (Camera Register) command            C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					to the camera.                                                             C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PARAMETERS:		Camera register number and new register value.                    C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	COMMENTS:		Camera must be configured to accept binary commands,                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					See CMUCam2_commands.pdf for details.                                      C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\camera.c
00313a   cfd9     MOVFF     0xfd9,0xfe6    void Write_Camera_Module_Register(unsigned char reg, unsigned char value)        C:\code\2008\Fresh Copy - 2008\camera.c
00313c   ffe6                                                                                                               
00313e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003140   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
003142   0e43     MOVLW     0x43           	Write_Camera_Serial_Port('C');                                                  C:\code\2008\Fresh Copy - 2008\camera.c
003144   6ee6     MOVWF     0xe6,0x0                                                                                        
003146   d81f     RCALL     0x3186                                                                                          
003148   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00314a   0e52     MOVLW     0x52           	Write_Camera_Serial_Port('R');                                                  C:\code\2008\Fresh Copy - 2008\camera.c
00314c   6ee6     MOVWF     0xe6,0x0                                                                                        
00314e   d81b     RCALL     0x3186                                                                                          
003150   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003152   0e02     MOVLW     0x2            	Write_Camera_Serial_Port(2);                                                    C:\code\2008\Fresh Copy - 2008\camera.c
003154   6ee6     MOVWF     0xe6,0x0                                                                                        
003156   d817     RCALL     0x3186                                                                                          
003158   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00315a   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(reg);                                                  C:\code\2008\Fresh Copy - 2008\camera.c
00315c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00315e   ffe6                                                                                                               
003160   d812     RCALL     0x3186                                                                                          
003162   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003164   0efd     MOVLW     0xfd           	Write_Camera_Serial_Port(value);                                                C:\code\2008\Fresh Copy - 2008\camera.c
003166   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003168   ffe6                                                                                                               
00316a   d80d     RCALL     0x3186                                                                                          
00316c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00316e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
003170   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003172   ffd9                                                                                                               
003174   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	FUNCTION:		Camera_Serial_Port_Byte_Count()                                     C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PURPOSE:		Returns the number of bytes in the camera serial port's              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					received data queue.		                                                     C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	RETURNS:		Number of bytes in the queue.                                        C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					properly set in camera.h.		                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\camera.c
                                           unsigned char Camera_Serial_Port_Byte_Count(void)                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           #ifdef CAMERA_SERIAL_PORT_1                                                      C:\code\2008\Fresh Copy - 2008\camera.c
                                           	return(Serial_Port_One_Byte_Count());                                           C:\code\2008\Fresh Copy - 2008\camera.c
                                           #else                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
003176   ec3d     CALL      0x4a7a,0x0     	return(Serial_Port_Two_Byte_Count());                                           C:\code\2008\Fresh Copy - 2008\camera.c
003178   f025                                                                                                               
00317a   d000     BRA       0x317c                                                                                          
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\camera.c
00317c   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	FUNCTION:		Read_Camera_Serial_Port()                                           C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PURPOSE:		Reads a byte of data from the camera serial port.		                  C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	RETURNS:		If data is present in the camera serial port's received              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					data queue, the next byte in the queue is returned. If                     C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					data is not present in the camera serial port's received                   C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					data queue, zero is returned.                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	COMMENTS:		Camera_Serial_Port_Byte_Count() should be called before             C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					calling this function to make sure data is present.                        C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					This code assumes that the camera serial port has been                     C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					properly set in camera.h.                                                  C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\camera.c
                                           unsigned char Read_Camera_Serial_Port(void)                                      C:\code\2008\Fresh Copy - 2008\camera.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           #ifdef CAMERA_SERIAL_PORT_1                                                      C:\code\2008\Fresh Copy - 2008\camera.c
                                           	return(Read_Serial_Port_One());                                                 C:\code\2008\Fresh Copy - 2008\camera.c
                                           #else                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
00317e   ec73     CALL      0x4ae6,0x0     	return(Read_Serial_Port_Two());                                                 C:\code\2008\Fresh Copy - 2008\camera.c
003180   f025                                                                                                               
003182   d000     BRA       0x3184                                                                                          
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\camera.c
003184   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	FUNCTION:		Write_Camera_Serial_Port()                                          C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PURPOSE:		Sends a byte of data to the camera serial port.                      C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PARAMETERS:		Byte of data to send to the camera serial port.                   C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	RETURNS:		nothing                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					properly set in camera.h.                                                  C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\camera.c
003186   cfd9     MOVFF     0xfd9,0xfe6    void Write_Camera_Serial_Port(unsigned char value)                               C:\code\2008\Fresh Copy - 2008\camera.c
003188   ffe6                                                                                                               
00318a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00318c   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           #ifdef CAMERA_SERIAL_PORT_1                                                      C:\code\2008\Fresh Copy - 2008\camera.c
                                           	Write_Serial_Port_One(value);                                                   C:\code\2008\Fresh Copy - 2008\camera.c
                                           #else                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
00318e   0efe     MOVLW     0xfe           	Write_Serial_Port_Two(value);                                                   C:\code\2008\Fresh Copy - 2008\camera.c
003190   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003192   ffe6                                                                                                               
003194   ecba     CALL      0x4b74,0x0                                                                                      
003196   f025                                                                                                               
003198   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\camera.c
00319a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
00319c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00319e   ffd9                                                                                                               
0031a0   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	FUNCTION:		Terminal_Serial_Port_Byte_Count()                                   C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PURPOSE:		Returns the number of bytes in the terminal serial port's            C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					received data queue.                                                       C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	RETURNS:		Number of bytes in the queue.                                        C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					properly set in camera.h.                                                  C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\camera.c
                                           unsigned char Terminal_Serial_Port_Byte_Count(void)                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\code\2008\Fresh Copy - 2008\camera.c
0031a2   ec2d     CALL      0x4a5a,0x0     	return(Serial_Port_One_Byte_Count());                                           C:\code\2008\Fresh Copy - 2008\camera.c
0031a4   f025                                                                                                               
0031a6   d000     BRA       0x31a8                                                                                          
                                           #else                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           	return(Serial_Port_Two_Byte_Count());                                           C:\code\2008\Fresh Copy - 2008\camera.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\camera.c
0031a8   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	FUNCTION:		Read_Terminal_Serial_Port()                                         C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PURPOSE:		Reads a byte of data from the terminal serial port.                  C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PARAMETERS:		none                                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	RETURNS:		If data is present in the terminal serial port's received            C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					data queue, the next byte in the queue is returned. If                     C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					data is not present in the terminal serial port's received                 C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					data queue, zero is returned.                                              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	COMMENTS:		Terminal_Serial_Port_Byte_Count() should be called before           C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					calling this function to make sure data is present.                        C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					This code assumes that the camera serial port has been                     C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					properly set in camera.h.                                                  C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\camera.c
                                           unsigned char Read_Terminal_Serial_Port(void)                                    C:\code\2008\Fresh Copy - 2008\camera.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\code\2008\Fresh Copy - 2008\camera.c
0031aa   ec4d     CALL      0x4a9a,0x0     	return(Read_Serial_Port_One());                                                 C:\code\2008\Fresh Copy - 2008\camera.c
0031ac   f025                                                                                                               
0031ae   d000     BRA       0x31b0                                                                                          
                                           #else                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           	return(Read_Serial_Port_Two());                                                 C:\code\2008\Fresh Copy - 2008\camera.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\camera.c
0031b0   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	FUNCTION:		Write_Terminal_Serial_Port()                                        C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PURPOSE:		Sends a byte of data to the terminal serial port.		                  C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	PARAMETERS:		Byte of data to send to the terminal serial port.                 C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\code\2008\Fresh Copy - 2008\camera.c
                                           *					properly set in camera.h.                                                  C:\code\2008\Fresh Copy - 2008\camera.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\camera.c
0031b2   cfd9     MOVFF     0xfd9,0xfe6    void Write_Terminal_Serial_Port(unsigned char value)                             C:\code\2008\Fresh Copy - 2008\camera.c
0031b4   ffe6                                                                                                               
0031b6   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0031b8   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\code\2008\Fresh Copy - 2008\camera.c
0031ba   0efe     MOVLW     0xfe           	Write_Serial_Port_One(value);                                                   C:\code\2008\Fresh Copy - 2008\camera.c
0031bc   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0031be   ffe6                                                                                                               
0031c0   ec99     CALL      0x4b32,0x0                                                                                      
0031c2   f025                                                                                                               
0031c4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #else                                                                            C:\code\2008\Fresh Copy - 2008\camera.c
                                           	Write_Serial_Port_Two(value);                                                   C:\code\2008\Fresh Copy - 2008\camera.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\camera.c
0031c6   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\camera.c
0031c8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0031ca   ffd9                                                                                                               
0031cc   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	TITLE:		encoder.c                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	VERSION:	0.5 (Beta)                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	DATE:		17-Dec-2005                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	COMMENTS:	You are free to use this source code for any non-commercial          C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *				use. Please do not make copies of this source code, modified                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *				or un-modified, publicly available on the internet or                       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *				elsewhere without permission. Thanks.                                       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *				Copyright ©2003-2006 R. Kevin Watson. All rights are reserved.              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           ******************************************************************************** C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	CHANGE LOG:                                                                    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	20-Dec-2003  0.1  RKW - Original code.                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	18-Feb-2004  0.2  RKW - Reassigned the encoder digital inputs to run           C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	                  on the FRC robot controller too.                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	01-Jan-2005  0.3  RKW - Get_Left_Encoder_Count(), Get_Right_Encoder_Count(),   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	                  Set_Left_Encoder_Count() and Set_Right_Encoder_Count()       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	                  functions added.                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	01-Jan-2005  0.3  RKW - Renamed Int_1_Handler() and Int_2_Handler() to         C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	                  Left_Encoder_Int_Handler() and Right_Encoder_Int_Handler     C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	                  respectively.                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	01-Jan-2005  0.3  RKW - Altered the interrupt service routines to easily       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	                  flip the direction the encoders count by altering the        C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	                  RIGHT_ENCODER_TICK_DELTA and LEFT_ENCODER_TICK_DELTA         C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	                  #defines found in encoder.h                                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	06-Jan-2005  0.4  RKW - Rebuilt with C18 version 2.40.                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	17-Dec-2005  0.5  RKW - Added code to accommodate four more encoders on        C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	                  interrupts 3 through 6. These additional encoder inputs      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	                  are optimized for position control.                          C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #include <stdio.h>                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #include "ifi_aliases.h"                                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #include "encoder.h"                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           // These variables are used to keep track of the encoder position over time.     C:\code\2008\Fresh Copy - 2008\encoder.c
                                           // Though these are global variables, they shouldn't be modified directly.       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           // Functions to modify these variables are included below.                       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #ifdef ENABLE_ENCODER_1                                                          C:\code\2008\Fresh Copy - 2008\encoder.c
                                           volatile long Encoder_1_Count = 0;                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #ifdef ENABLE_ENCODER_2                                                          C:\code\2008\Fresh Copy - 2008\encoder.c
                                           volatile long Encoder_2_Count = 0;                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #ifdef ENABLE_ENCODER_3                                                          C:\code\2008\Fresh Copy - 2008\encoder.c
                                           unsigned char Encoder_3_State;                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           volatile long Encoder_3_Count = 0;                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #ifdef ENABLE_ENCODER_4                                                          C:\code\2008\Fresh Copy - 2008\encoder.c
                                           unsigned char Encoder_4_State;                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           volatile long Encoder_4_Count = 0;                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #ifdef ENABLE_ENCODER_5                                                          C:\code\2008\Fresh Copy - 2008\encoder.c
                                           unsigned char Encoder_5_State;                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           volatile long Encoder_5_Count = 0;                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #ifdef ENABLE_ENCODER_6                                                          C:\code\2008\Fresh Copy - 2008\encoder.c
                                           unsigned char Encoder_6_State;                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           volatile long Encoder_6_Count = 0;                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           // So that we'll know which interrupt pin changed state the next time through,   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           // the state of port b is saved in this variable each time the interrupt         C:\code\2008\Fresh Copy - 2008\encoder.c
                                           // handler for interrupts 3 through 6 is called. This variable should be         C:\code\2008\Fresh Copy - 2008\encoder.c
                                           // initialized to the current state of port b just before enabling interrupts    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           // 3 through 6.                                                                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           unsigned char Old_Port_B = 0xFF;                                                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	FUNCTION:		Initialize_Encoders()                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PURPOSE:		Initializes the encoder software.                                    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\encoder.c
                                           void Initialize_Encoders(void)                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// if enabled in encoder.h, configure encoder 1's interrupt input               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	#ifdef ENABLE_ENCODER_1                                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// make sure interrupt 1 is configured as an input                              C:\code\2008\Fresh Copy - 2008\encoder.c
0055c6   8493     BSF       0x93,0x2,0x0   	TRISBbits.TRISB2 = 1;                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// interrupt 1 is low priority                                                  C:\code\2008\Fresh Copy - 2008\encoder.c
0055c8   9ef0     BCF       0xf0,0x7,0x0   	INTCON3bits.INT2IP = 0;                                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// trigger on rising edge                                                       C:\code\2008\Fresh Copy - 2008\encoder.c
0055ca   88f1     BSF       0xf1,0x4,0x0   	INTCON2bits.INTEDG2 = 1;                                                        C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// make sure the interrupt flag is reset before enabling                        C:\code\2008\Fresh Copy - 2008\encoder.c
0055cc   92f0     BCF       0xf0,0x1,0x0   	INTCON3bits.INT2IF = 0;                                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// enable interrupt 1                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
0055ce   88f0     BSF       0xf0,0x4,0x0   	INTCON3bits.INT2IE = 1;                                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	#endif                                                                          C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// if enabled in encoder.h, configure encoder 2's interrupt input               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	#ifdef ENABLE_ENCODER_2                                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// make sure interrupt 2 is configured as an input                              C:\code\2008\Fresh Copy - 2008\encoder.c
0055d0   8693     BSF       0x93,0x3,0x0   	TRISBbits.TRISB3 = 1;                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// interrupt 2 is low priority                                                  C:\code\2008\Fresh Copy - 2008\encoder.c
0055d2   92f1     BCF       0xf1,0x1,0x0   	INTCON2bits.INT3IP = 0;                                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// trigger on rising edge                                                       C:\code\2008\Fresh Copy - 2008\encoder.c
0055d4   86f1     BSF       0xf1,0x3,0x0   	INTCON2bits.INTEDG3 = 1;                                                        C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// make sure the interrupt flag is reset before enabling                        C:\code\2008\Fresh Copy - 2008\encoder.c
0055d6   94f0     BCF       0xf0,0x2,0x0   	INTCON3bits.INT3IF = 0;                                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// enable interrupt 2                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
0055d8   8af0     BSF       0xf0,0x5,0x0   	INTCON3bits.INT3IE = 1;                                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	#endif                                                                          C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// if enabled in encoder.h, configure the interrupt input for encoders 3-6      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	#ifdef ENABLE_ENCODER_3_6                                                       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// make sure interrupts 3 through 6 are configured as inputs                    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	TRISBbits.TRISB4 = 1;                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	TRISBbits.TRISB5 = 1;                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	TRISBbits.TRISB6 = 1;                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	TRISBbits.TRISB7 = 1;                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// interrupts 3 through 6 are low priority                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                             	INTCON2bits.RBIP = 0;                                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// before enabling interrupts 3 through 6, take a snapshot of port b            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	Old_Port_B = PORTB;                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// make sure the interrupt flag is reset before enabling                        C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	INTCONbits.RBIF = 0;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// enable interrupts 3 through 6                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	#endif                                                                          C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
0055da   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #ifdef ENABLE_ENCODER_1                                                          C:\code\2008\Fresh Copy - 2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	FUNCTION:		Get_Encoder_1_Count()                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PURPOSE:		Gets the current number of encoder 1 counts.		                       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	RETURNS:		Number of encoder 1 counts since the last reset.                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\encoder.c
0055dc   cfd9     MOVFF     0xfd9,0xfe6    long Get_Encoder_1_Count(void)                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
0055de   ffe6                                                                                                               
0055e0   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0055e2   ffd9                                                                                                               
0055e4   0e04     MOVLW     0x4                                                                                             
0055e6   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	long count;                                                                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Since we're about to access the Encoder_1_Count variable,                    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that the Encoder_1_Count variable doesn't get altered while                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
0055e8   98f0     BCF       0xf0,0x4,0x0   	INTCON3bits.INT2IE = 0;                                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Now we can get a local copy of the encoder count without fear                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that we'll get corrupted data.                                               C:\code\2008\Fresh Copy - 2008\encoder.c
0055ea   c2b7     MOVFF     0x2b7,0xfdf    	count = Encoder_1_Count;                                                        C:\code\2008\Fresh Copy - 2008\encoder.c
0055ec   ffdf                                                                                                               
0055ee   0e01     MOVLW     0x1                                                                                             
0055f0   c2b8     MOVFF     0x2b8,0xfdb                                                                                     
0055f2   ffdb                                                                                                               
0055f4   0e02     MOVLW     0x2                                                                                             
0055f6   c2b9     MOVFF     0x2b9,0xfdb                                                                                     
0055f8   ffdb                                                                                                               
0055fa   0e03     MOVLW     0x3                                                                                             
0055fc   c2ba     MOVFF     0x2ba,0xfdb                                                                                     
0055fe   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Okay, we have a local copy of the encoder count, so turn the                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// encoder's interrupt back on.                                                 C:\code\2008\Fresh Copy - 2008\encoder.c
005600   88f0     BSF       0xf0,0x4,0x0   	INTCON3bits.INT2IE = 1;                                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Return the encoder count to the caller.                                      C:\code\2008\Fresh Copy - 2008\encoder.c
005602   cfde     MOVFF     0xfde,0x3f     	return(count);                                                                  C:\code\2008\Fresh Copy - 2008\encoder.c
005604   f03f                                                                                                               
005606   cfde     MOVFF     0xfde,0x40                                                                                      
005608   f040                                                                                                               
00560a   cfde     MOVFF     0xfde,0x41                                                                                      
00560c   f041                                                                                                               
00560e   cfdd     MOVFF     0xfdd,0x42                                                                                      
005610   f042                                                                                                               
005612   52dd     MOVF      0xdd,0x1,0x0                                                                                    
005614   52dd     MOVF      0xdd,0x1,0x0                                                                                    
005616   d000     BRA       0x5618                                                                                          
005618   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
00561a   ffe1                                                                                                               
00561c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00561e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005620   ffd9                                                                                                               
005622   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	FUNCTION:		Reset_Encoder_1_Count()                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PURPOSE:		Resets the encoder 1 count to zero	                                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\encoder.c
                                           void Reset_Encoder_1_Count(void)                                                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Since we're about to access the Encoder_1_Count variable,                    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that the Encoder_1_Count variable doesn't get altered while                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
005624   98f0     BCF       0xf0,0x4,0x0   	INTCON3bits.INT2IE = 0;                                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Now we can set the value of the encoder count without fear                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that we'll write corrupted data.                                             C:\code\2008\Fresh Copy - 2008\encoder.c
005626   0102     MOVLB     0x2            	Encoder_1_Count = 0;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
005628   6bb7     CLRF      0xb7,0x1                                                                                        
00562a   6bb8     CLRF      0xb8,0x1                                                                                        
00562c   6bb9     CLRF      0xb9,0x1                                                                                        
00562e   6bba     CLRF      0xba,0x1                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Okay, we're done updating the encoder count, so turn the                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// left encoder's interrupt back on.                                            C:\code\2008\Fresh Copy - 2008\encoder.c
005630   88f0     BSF       0xf0,0x4,0x0   	INTCON3bits.INT2IE = 1;                                                         C:\code\2008\Fresh Copy - 2008\encoder.c
005632   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	FUNCTION:		Encoder_1_Int_Handler()                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PURPOSE:		If enabled, the encoder 1 interrupt handler is called when           C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *					the interrupt 1 pin changes from a logic 0 to a logic 1.                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\encoder.c
                                           void Encoder_1_Int_Handler(void)                                                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Encoder 1's phase a signal just transitioned from zero to one, causing       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// this interrupt service routine to be called. We know that the encoder        C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// just rotated one count or "tick" so now check the logical state of the       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// phase b signal to determine which way the the encoder shaft rotated.         C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
005634   b288     BTFSC     0x88,0x1,0x0   	if(ENCODER_1_PHASE_B_PIN == 0)                                                  C:\code\2008\Fresh Copy - 2008\encoder.c
005636   d007     BRA       0x5646                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
005638   0eff     MOVLW     0xff           		Encoder_1_Count -= ENCODER_1_TICK_DELTA;                                       C:\code\2008\Fresh Copy - 2008\encoder.c
00563a   0102     MOVLB     0x2                                                                                             
00563c   5fb7     SUBWF     0xb7,0x1,0x1                                                                                    
00563e   5bb8     SUBWFB    0xb8,0x1,0x1                                                                                    
005640   5bb9     SUBWFB    0xb9,0x1,0x1                                                                                    
005642   5bba     SUBWFB    0xba,0x1,0x1                                                                                    
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
005644   d006     BRA       0x5652         	else                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
005646   0eff     MOVLW     0xff           		Encoder_1_Count += ENCODER_1_TICK_DELTA;                                       C:\code\2008\Fresh Copy - 2008\encoder.c
005648   0102     MOVLB     0x2                                                                                             
00564a   27b7     ADDWF     0xb7,0x1,0x1                                                                                    
00564c   23b8     ADDWFC    0xb8,0x1,0x1                                                                                    
00564e   23b9     ADDWFC    0xb9,0x1,0x1                                                                                    
005650   23ba     ADDWFC    0xba,0x1,0x1                                                                                    
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
005652   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #ifdef ENABLE_ENCODER_2                                                          C:\code\2008\Fresh Copy - 2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	FUNCTION:		Get_Encoder_2_Count()                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PURPOSE:		Gets the current number of encoder 2 counts.		                       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	RETURNS:		Number of encoder 2 counts since the last reset.                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\encoder.c
005654   cfd9     MOVFF     0xfd9,0xfe6    long Get_Encoder_2_Count(void)                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
005656   ffe6                                                                                                               
005658   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00565a   ffd9                                                                                                               
00565c   0e04     MOVLW     0x4                                                                                             
00565e   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	long count;                                                                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Since we're about to access the Encoder_2_Count variable,                    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that the Encoder_2_Count variable doesn't get altered while                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
005660   9af0     BCF       0xf0,0x5,0x0   	INTCON3bits.INT3IE = 0;                                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Now we can get a local copy of the encoder count without fear                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that we'll get corrupted data.                                               C:\code\2008\Fresh Copy - 2008\encoder.c
005662   c2bb     MOVFF     0x2bb,0xfdf    	count = Encoder_2_Count;                                                        C:\code\2008\Fresh Copy - 2008\encoder.c
005664   ffdf                                                                                                               
005666   0e01     MOVLW     0x1                                                                                             
005668   c2bc     MOVFF     0x2bc,0xfdb                                                                                     
00566a   ffdb                                                                                                               
00566c   0e02     MOVLW     0x2                                                                                             
00566e   c2bd     MOVFF     0x2bd,0xfdb                                                                                     
005670   ffdb                                                                                                               
005672   0e03     MOVLW     0x3                                                                                             
005674   c2be     MOVFF     0x2be,0xfdb                                                                                     
005676   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Okay, we have a local copy of the encoder count, so turn the                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// encoder's interrupt back on.                                                 C:\code\2008\Fresh Copy - 2008\encoder.c
005678   8af0     BSF       0xf0,0x5,0x0   	INTCON3bits.INT3IE = 1;                                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Return the encoder count to the caller.                                      C:\code\2008\Fresh Copy - 2008\encoder.c
00567a   cfde     MOVFF     0xfde,0x3f     	return(count);                                                                  C:\code\2008\Fresh Copy - 2008\encoder.c
00567c   f03f                                                                                                               
00567e   cfde     MOVFF     0xfde,0x40                                                                                      
005680   f040                                                                                                               
005682   cfde     MOVFF     0xfde,0x41                                                                                      
005684   f041                                                                                                               
005686   cfdd     MOVFF     0xfdd,0x42                                                                                      
005688   f042                                                                                                               
00568a   52dd     MOVF      0xdd,0x1,0x0                                                                                    
00568c   52dd     MOVF      0xdd,0x1,0x0                                                                                    
00568e   d000     BRA       0x5690                                                                                          
005690   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
005692   ffe1                                                                                                               
005694   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005696   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005698   ffd9                                                                                                               
00569a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	FUNCTION:		Reset_Encoder_2_Count()                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PURPOSE:		Resets the encoder 2 count to zero	                                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\encoder.c
                                           void Reset_Encoder_2_Count(void)                                                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Since we're about to access the Encoder_2_Count variable,                    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that the Encoder_2_Count variable doesn't get altered while                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
00569c   9af0     BCF       0xf0,0x5,0x0   	INTCON3bits.INT3IE = 0;                                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Now we can set the value of the encoder count without fear                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that we'll write corrupted data.                                             C:\code\2008\Fresh Copy - 2008\encoder.c
00569e   0102     MOVLB     0x2            	Encoder_2_Count = 0;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
0056a0   6bbb     CLRF      0xbb,0x1                                                                                        
0056a2   6bbc     CLRF      0xbc,0x1                                                                                        
0056a4   6bbd     CLRF      0xbd,0x1                                                                                        
0056a6   6bbe     CLRF      0xbe,0x1                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Okay, we're done updating the encoder count, so turn the                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// left encoder's interrupt back on.                                            C:\code\2008\Fresh Copy - 2008\encoder.c
0056a8   8af0     BSF       0xf0,0x5,0x0   	INTCON3bits.INT3IE = 1;                                                         C:\code\2008\Fresh Copy - 2008\encoder.c
0056aa   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	FUNCTION:		Encoder_2_Int_Handler()                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PURPOSE:		If enabled, the encoder 2 interrupt handler is called when           C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *					the interrupt 2 pin changes from a logic 0 to a logic 1.                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\encoder.c
                                           void Encoder_2_Int_Handler(void)                                                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Encoder 2's phase a signal just transitioned from zero to one, causing       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// this interrupt service routine to be called. We know that the encoder        C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// just rotated one count or "tick" so now check the logical state of the       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// phase b signal to determine which way the the encoder shaft rotated.         C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
0056ac   b488     BTFSC     0x88,0x2,0x0   	if(ENCODER_2_PHASE_B_PIN == 0)                                                  C:\code\2008\Fresh Copy - 2008\encoder.c
0056ae   d007     BRA       0x56be                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
0056b0   0102     MOVLB     0x2            		Encoder_2_Count -= ENCODER_2_TICK_DELTA;                                       C:\code\2008\Fresh Copy - 2008\encoder.c
0056b2   07bb     DECF      0xbb,0x1,0x1                                                                                    
0056b4   0e00     MOVLW     0x0                                                                                             
0056b6   5bbc     SUBWFB    0xbc,0x1,0x1                                                                                    
0056b8   5bbd     SUBWFB    0xbd,0x1,0x1                                                                                    
0056ba   5bbe     SUBWFB    0xbe,0x1,0x1                                                                                    
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
0056bc   d006     BRA       0x56ca         	else                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
0056be   0102     MOVLB     0x2            		Encoder_2_Count += ENCODER_2_TICK_DELTA;                                       C:\code\2008\Fresh Copy - 2008\encoder.c
0056c0   2bbb     INCF      0xbb,0x1,0x1                                                                                    
0056c2   0e00     MOVLW     0x0                                                                                             
0056c4   23bc     ADDWFC    0xbc,0x1,0x1                                                                                    
0056c6   23bd     ADDWFC    0xbd,0x1,0x1                                                                                    
0056c8   23be     ADDWFC    0xbe,0x1,0x1                                                                                    
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
0056ca   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #ifdef ENABLE_ENCODER_3                                                          C:\code\2008\Fresh Copy - 2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	FUNCTION:		Get_Encoder_3_Count()                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PURPOSE:		Gets the current number of encoder 3 counts.		                       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	RETURNS:		Number of encoder 3 counts since the last reset.                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\encoder.c
                                           long Get_Encoder_3_Count(void)                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	long count;                                                                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Since we're about to access the Encoder_3_Count variable,                    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that the Encoder_3_Count variable doesn't get altered while                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Now we can get a local copy of the encoder count without fear                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that we'll get corrupted data.                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	count = Encoder_3_Count;                                                        C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Okay, we have a local copy of the encoder count, so turn the                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// encoder's interrupt back on.                                                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Return the encoder count to the caller.                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	return(count);                                                                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           }                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	FUNCTION:		Reset_Encoder_3_Count()                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PURPOSE:		Resets the encoder 3 count to zero	                                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\encoder.c
                                           void Reset_Encoder_3_Count(void)                                                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Since we're about to access the Encoder_3_Count variable,                    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that the Encoder_3_Count variable doesn't get altered while                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Now we can set the value of the encoder count without fear                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that we'll write corrupted data.                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	Encoder_3_Count = 0;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Okay, we're done updating the encoder count, so turn the                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// left encoder's interrupt back on.                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           }                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	FUNCTION:		Encoder_3_Int_Handler()                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PURPOSE:		If enabled, the encoder 3 interrupt handler is called when           C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *					the interrupt 3 pin changes logic state                                    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\encoder.c
                                           void Encoder_3_Int_Handler(unsigned char state)                                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Encoder 3's phase a signal just changed logic level, causing this            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// interrupt service routine to be called.                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	if(state == 1)                                                                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		// rising-edge interrupt                                                       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		if(ENCODER_3_PHASE_B_PIN == 0)                                                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			// backward                                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			if(Encoder_3_State == 1)                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           				Encoder_3_Count -= ENCODER_3_TICK_DELTA;                                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		else                                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			// forward                                                                    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			if(Encoder_3_State == 0)                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           				Encoder_3_Count += ENCODER_3_TICK_DELTA;                                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	else                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		// falling-edge interrupt                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		//   phase b is zero if moving forward                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		//   phase b is one if moving backward                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		Encoder_3_State = ENCODER_3_PHASE_B_PIN;                                       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           }                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #ifdef ENABLE_ENCODER_4                                                          C:\code\2008\Fresh Copy - 2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	FUNCTION:		Get_Encoder_4_Count()                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PURPOSE:		Gets the current number of encoder 4 counts.		                       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	RETURNS:		Number of encoder 4 counts since the last reset.                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\encoder.c
                                           long Get_Encoder_4_Count(void)                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	long count;                                                                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Since we're about to access the Encoder_4_Count variable,                    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that the Encoder_4_Count variable doesn't get altered while                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Now we can get a local copy of the encoder count without fear                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that we'll get corrupted data.                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	count = Encoder_4_Count;                                                        C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Okay, we have a local copy of the encoder count, so turn the                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// encoder's interrupt back on.                                                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Return the encoder count to the caller.                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	return(count);                                                                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           }                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	FUNCTION:		Reset_Encoder_4_Count()                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PURPOSE:		Resets the encoder 4 count to zero	                                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\encoder.c
                                           void Reset_Encoder_4_Count(void)                                                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Since we're about to access the Encoder_4_Count variable,                    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that the Encoder_4_Count variable doesn't get altered while                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Now we can set the value of the encoder count without fear                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that we'll write corrupted data.                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	Encoder_4_Count = 0;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Okay, we're done updating the encoder count, so turn the                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// left encoder's interrupt back on.                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           }                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	FUNCTION:		Encoder_4_Int_Handler()                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PURPOSE:		If enabled, the encoder 4 interrupt handler is called when           C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *					the interrupt 4 pin changes logic state                                    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\encoder.c
                                           void Encoder_4_Int_Handler(unsigned char state)                                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Encoder 4's phase a signal just changed logic level, causing this            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// interrupt service routine to be called.                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	if(state == 1)                                                                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		// rising-edge interrupt                                                       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		if(ENCODER_4_PHASE_B_PIN == 0)                                                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			// backward                                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			if(Encoder_4_State == 1)                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           				Encoder_4_Count -= ENCODER_4_TICK_DELTA;                                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		else                                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			// forward                                                                    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			if(Encoder_4_State == 0)                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           				Encoder_4_Count += ENCODER_4_TICK_DELTA;                                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	else                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		// falling-edge interrupt                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		//   phase b is zero if moving forward                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		//   phase b is one if moving backward                                         C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		Encoder_4_State = ENCODER_4_PHASE_B_PIN;                                       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           }                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #ifdef ENABLE_ENCODER_5                                                          C:\code\2008\Fresh Copy - 2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	FUNCTION:		Get_Encoder_5_Count()                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PURPOSE:		Gets the current number of encoder 5 counts.		                       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	RETURNS:		Number of encoder 5 counts since the last reset.                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\encoder.c
                                           long Get_Encoder_5_Count(void)                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	long count;                                                                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Since we're about to access the Encoder_5_Count variable,                    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that the Encoder_5_Count variable doesn't get altered while                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Now we can get a local copy of the encoder count without fear                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that we'll get corrupted data.                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	count = Encoder_5_Count;                                                        C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Okay, we have a local copy of the encoder count, so turn the                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// encoder's interrupt back on.                                                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Return the encoder count to the caller.                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	return(count);                                                                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           }                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	FUNCTION:		Reset_Encoder_5_Count()                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PURPOSE:		Resets the encoder 5 count to zero	                                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\encoder.c
                                           void Reset_Encoder_5_Count(void)                                                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Since we're about to access the Encoder_5_Count variable,                    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that the Encoder_5_Count variable doesn't get altered while                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Now we can set the value of the encoder count without fear                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that we'll write corrupted data.                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	Encoder_5_Count = 0;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Okay, we're done updating the encoder count, so turn the                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// left encoder's interrupt back on.                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           }                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	FUNCTION:		Encoder_5_Int_Handler()                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PURPOSE:		If enabled, the encoder 5 interrupt handler is called when           C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *					the interrupt 5 pin changes logic state                                    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\encoder.c
                                           void Encoder_5_Int_Handler(unsigned char state)                                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Encoder 5's phase a signal just changed logic level, causing this            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// interrupt service routine to be called.                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	if(state == 1)                                                                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		// rising-edge interrupt                                                       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		if(ENCODER_5_PHASE_B_PIN == 0)                                                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			Encoder_5_Count -= ENCODER_5_TICK_DELTA;                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		else                                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			Encoder_5_Count += ENCODER_5_TICK_DELTA;                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	else                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		// falling-edge interrupt                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		if(ENCODER_5_PHASE_B_PIN == 0)                                                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			Encoder_5_Count += ENCODER_5_TICK_DELTA;                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		else                                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			Encoder_5_Count -= ENCODER_5_TICK_DELTA;                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           }                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #ifdef ENABLE_ENCODER_6                                                          C:\code\2008\Fresh Copy - 2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	FUNCTION:		Get_Encoder_6_Count()                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PURPOSE:		Gets the current number of encoder 6 counts.		                       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	RETURNS:		Number of encoder 6 counts since the last reset.                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\encoder.c
                                           long Get_Encoder_6_Count(void)                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	long count;                                                                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Since we're about to access the Encoder_6_Count variable,                    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that the Encoder_6_Count variable doesn't get altered while                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Now we can get a local copy of the encoder count without fear                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that we'll get corrupted data.                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	count = Encoder_6_Count;                                                        C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Okay, we have a local copy of the encoder count, so turn the                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// encoder's interrupt back on.                                                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Return the encoder count to the caller.                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	return(count);                                                                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           }                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	FUNCTION:		Reset_Encoder_6_Count()                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PURPOSE:		Resets the encoder 6 count to zero	                                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\encoder.c
                                           void Reset_Encoder_6_Count(void)                                                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Since we're about to access the Encoder_6_Count variable,                    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that the Encoder_6_Count variable doesn't get altered while                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Now we can set the value of the encoder count without fear                   C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// that we'll write corrupted data.                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	Encoder_6_Count = 0;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Okay, we're done updating the encoder count, so turn the                     C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// left encoder's interrupt back on.                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           }                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	FUNCTION:		Encoder_6_Int_Handler()                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PURPOSE:		If enabled, the encoder 6 interrupt handler is called when           C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *					the interrupt 6 pin changes logic state                                    C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\encoder.c
                                           void Encoder_6_Int_Handler(unsigned char state)                                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// Encoder 6's phase a signal just changed logic level, causing this            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	// interrupt service routine to be called.                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	if(state == 1)                                                                  C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		// rising-edge interrupt                                                       C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		if(ENCODER_6_PHASE_B_PIN == 0)                                                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			Encoder_6_Count -= ENCODER_6_TICK_DELTA;                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		else                                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			Encoder_6_Count += ENCODER_6_TICK_DELTA;                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	else                                                                            C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		// falling-edge interrupt                                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		if(ENCODER_6_PHASE_B_PIN == 0)                                                 C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			Encoder_6_Count += ENCODER_6_TICK_DELTA;                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		else                                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           			Encoder_6_Count -= ENCODER_6_TICK_DELTA;                                      C:\code\2008\Fresh Copy - 2008\encoder.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\encoder.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\encoder.c
                                           }                                                                                C:\code\2008\Fresh Copy - 2008\encoder.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	TITLE		gyro.c                                                                  C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	VERSION:	0.5 (Beta)                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	DATE:		10-Jan-2006                                                             C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	COMMENTS:	You are free to use this source code for any non-commercial          C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *				use. Please do not make copies of this source code, modified                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *				or un-modified, publicly available on the internet or                       C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *				elsewhere without permission. Thanks.                                       C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *				Copyright ©2005-2006 R. Kevin Watson. All rights are reserved.              C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           ******************************************************************************** C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	CHANGE LOG:                                                                    C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	21-Nov-2004  0.1  RKW - Original code.                                         C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	12-Jan-2005  0.2  RKW - Altered Get_Gyro_Rate() and Get_Gyro_Angle() to use    C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	                  long integers for internal calculations, allowing larger     C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	                  numerators and denominators in the GYRO_RATE_SCALE_FACTOR    C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	                  and GYRO_ANGLE_SCALE_FACTOR #defines.                        C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	12-Jan-2005  0.2  RKW - GYRO_RATE_SCALE_FACTOR and GYRO_ANGLE_SCALE_FACTOR     C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	                  #defines added for Analog Devices' ADXRS401, ADXRS150 and    C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	                  ADXRS300 gyros.                                              C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	16-Jan-2005  0.3  RKW - Using preprocessor directives, added the ability       C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	                  to select the gyro type, angular units, sample rate and      C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	                  number of averaged samples per update.                       C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	21-Jan-2005  0.3  RKW - Added scaling factors for the BEI GyroChip.            C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	30-Jan-2005  0.4  RKW - Revised the way bias calculations are done.            C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	                  Instead of using only one data set as a bias, multiple       C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	                  sample sets can now be averaged over a much longer period    C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	                  of time to derive the gyro bias. Updated documentation.      C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	04-Sep-2005  0.5  RKW - Significant overhaul of gyro code to strip-out ADC-    C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	                  specific code and use new adc.c/.h interface. Added          C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	                  deadband option.                                             C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	21-Nov-2005  0.5  RKW - Added support for Murata's ENV-05D gyro.               C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	10-Jan-2006  0.5  RKW - Verified code works on PIC18F8722.                     C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\gyro.c
                                           #include "adc.h"                                                                 C:\code\2008\Fresh Copy - 2008\gyro.c
                                           #include "gyro.h"                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           #include "ifi_aliases.h"                                                         C:\code\2008\Fresh Copy - 2008\gyro.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Fresh Copy - 2008\gyro.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
                                           int gyro_bias;                                                                   C:\code\2008\Fresh Copy - 2008\gyro.c
                                           int gyro_rate;                                                                   C:\code\2008\Fresh Copy - 2008\gyro.c
                                           long gyro_angle;                                                                 C:\code\2008\Fresh Copy - 2008\gyro.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
                                           unsigned long avg_accum;                                                         C:\code\2008\Fresh Copy - 2008\gyro.c
                                           unsigned int avg_samples;                                                        C:\code\2008\Fresh Copy - 2008\gyro.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
                                           unsigned char calc_gyro_bias;                                                    C:\code\2008\Fresh Copy - 2008\gyro.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	FUNCTION:		Initialize_Gyro()                                                   C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	PURPOSE:		Initializes the gyro code.                                           C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	COMMENTS:		Place "#include "gyro.h" in the includes section                    C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *					of user_routines.c then call Initialize_Gyro() in                          C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *					user_routines.c/User_Initialization().                                     C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *					After calling Initialize_Gyro(), gyro rate and angle                       C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *					data will be meaningless until a gyro bias calculation                     C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *					has taken place by calling Start_Gyro_Bias_Calc() and                      C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *					Stop_Gyro_Bias_Calc().                                                     C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\gyro.c
                                           void Initialize_Gyro(void)                                                       C:\code\2008\Fresh Copy - 2008\gyro.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           	// reset the heading angle to zero                                              C:\code\2008\Fresh Copy - 2008\gyro.c
00470e   0102     MOVLB     0x2            	gyro_angle = 0;                                                                 C:\code\2008\Fresh Copy - 2008\gyro.c
004710   6b8b     CLRF      0x8b,0x1                                                                                        
004712   6b8c     CLRF      0x8c,0x1                                                                                        
004714   6b8d     CLRF      0x8d,0x1                                                                                        
004716   6b8e     CLRF      0x8e,0x1                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
                                           	// reset the bias calculation flag                                              C:\code\2008\Fresh Copy - 2008\gyro.c
004718   6b95     CLRF      0x95,0x1       	calc_gyro_bias = 0;                                                             C:\code\2008\Fresh Copy - 2008\gyro.c
00471a   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	FUNCTION:		Get_Gyro_Rate()                                                     C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	PURPOSE:		Returns the current heading angular rate of change.                  C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	RETURNS:		Signed integer with the current heading rate of change.              C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\gyro.c
                                           int Get_Gyro_Rate(void)                                                          C:\code\2008\Fresh Copy - 2008\gyro.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           	// Return the calculated gyro rate to the caller.                               C:\code\2008\Fresh Copy - 2008\gyro.c
00471c   c289     MOVFF     0x289,0x3f     	return((int)((((long)gyro_rate * GYRO_SENSITIVITY * 5L) / ADC_RANGE)) * GYRO_CAL_FACTOR); C:\code\2008\Fresh Copy - 2008\gyro.c
00471e   f03f                                                                                                               
004720   c28a     MOVFF     0x28a,0x40                                                                                      
004722   f040                                                                                                               
004724   6a41     CLRF      0x41,0x0                                                                                        
004726   6a42     CLRF      0x42,0x0                                                                                        
004728   ae40     BTFSS     0x40,0x7,0x0                                                                                    
00472a   d002     BRA       0x4730                                                                                          
00472c   6841     SETF      0x41,0x0                                                                                        
00472e   6842     SETF      0x42,0x0                                                                                        
004730   0e20     MOVLW     0x20                                                                                            
004732   6e44     MOVWF     0x44,0x0                                                                                        
004734   0e03     MOVLW     0x3                                                                                             
004736   6e45     MOVWF     0x45,0x0                                                                                        
004738   6a46     CLRF      0x46,0x0                                                                                        
00473a   6a47     CLRF      0x47,0x0                                                                                        
00473c   ec41     CALL      0x5882,0x0                                                                                      
00473e   f02c                                                                                                               
004740   c03b     MOVFF     0x3b,0x3f                                                                                       
004742   f03f                                                                                                               
004744   c03c     MOVFF     0x3c,0x40                                                                                       
004746   f040                                                                                                               
004748   c03d     MOVFF     0x3d,0x41                                                                                       
00474a   f041                                                                                                               
00474c   c03e     MOVFF     0x3e,0x42                                                                                       
00474e   f042                                                                                                               
004750   0e05     MOVLW     0x5                                                                                             
004752   6e44     MOVWF     0x44,0x0                                                                                        
004754   6a45     CLRF      0x45,0x0                                                                                        
004756   6a46     CLRF      0x46,0x0                                                                                        
004758   6a47     CLRF      0x47,0x0                                                                                        
00475a   ec41     CALL      0x5882,0x0                                                                                      
00475c   f02c                                                                                                               
00475e   c03b     MOVFF     0x3b,0x3f                                                                                       
004760   f03f                                                                                                               
004762   c03c     MOVFF     0x3c,0x40                                                                                       
004764   f040                                                                                                               
004766   c03d     MOVFF     0x3d,0x41                                                                                       
004768   f041                                                                                                               
00476a   c03e     MOVFF     0x3e,0x42                                                                                       
00476c   f042                                                                                                               
00476e   6a44     CLRF      0x44,0x0                                                                                        
004770   0e08     MOVLW     0x8                                                                                             
004772   6e45     MOVWF     0x45,0x0                                                                                        
004774   6a46     CLRF      0x46,0x0                                                                                        
004776   6a47     CLRF      0x47,0x0                                                                                        
004778   ec82     CALL      0x5504,0x0                                                                                      
00477a   f02a                                                                                                               
00477c   c03f     MOVFF     0x3f,0x0                                                                                        
00477e   f000                                                                                                               
004780   c040     MOVFF     0x40,0x1                                                                                        
004782   f001                                                                                                               
004784   0ee8     MOVLW     0xe8                                                                                            
004786   0201     MULWF     0x1,0x0                                                                                         
004788   cff3     MOVFF     0xff3,0x1                                                                                       
00478a   f001                                                                                                               
00478c   0e03     MOVLW     0x3                                                                                             
00478e   0200     MULWF     0x0,0x0                                                                                         
004790   50f3     MOVF      0xf3,0x0,0x0                                                                                    
004792   2601     ADDWF     0x1,0x1,0x0                                                                                     
004794   0ee8     MOVLW     0xe8                                                                                            
004796   0200     MULWF     0x0,0x0                                                                                         
004798   cff3     MOVFF     0xff3,0x0                                                                                       
00479a   f000                                                                                                               
00479c   50f4     MOVF      0xf4,0x0,0x0                                                                                    
00479e   2601     ADDWF     0x1,0x1,0x0                                                                                     
0047a0   0ee8     MOVLW     0xe8                                                                                            
0047a2   6e46     MOVWF     0x46,0x0                                                                                        
0047a4   0e03     MOVLW     0x3                                                                                             
0047a6   6e47     MOVWF     0x47,0x0                                                                                        
0047a8   c000     MOVFF     0x0,0x41                                                                                        
0047aa   f041                                                                                                               
0047ac   c001     MOVFF     0x1,0x42                                                                                        
0047ae   f042                                                                                                               
0047b0   ec5c     CALL      0x54b8,0x0                                                                                      
0047b2   f02a                                                                                                               
0047b4   c041     MOVFF     0x41,0x0                                                                                        
0047b6   f000                                                                                                               
0047b8   c042     MOVFF     0x42,0x1                                                                                        
0047ba   f001                                                                                                               
0047bc   c000     MOVFF     0x0,0xff3                                                                                       
0047be   fff3                                                                                                               
0047c0   c001     MOVFF     0x1,0xff4                                                                                       
0047c2   fff4                                                                                                               
0047c4   d000     BRA       0x47c6                                                                                          
0047c6   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	FUNCTION:		Get_Gyro_Angle()                                                    C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	PURPOSE:		Returns the current heading angle.                                   C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	RETURNS:		Signed long with the current heading angle.                          C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\gyro.c
0047c8   cfd9     MOVFF     0xfd9,0xfe6    long Get_Gyro_Angle(void)                                                        C:\code\2008\Fresh Copy - 2008\gyro.c
0047ca   ffe6                                                                                                               
0047cc   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0047ce   ffd9                                                                                                               
0047d0   0e04     MOVLW     0x4                                                                                             
0047d2   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
0047d4   c28b     MOVFF     0x28b,0x3f     	long angle = ((gyro_angle * GYRO_SENSITIVITY * 5L) / (ADC_RANGE * ADC_UPDATE_RATE)); C:\code\2008\Fresh Copy - 2008\gyro.c
0047d6   f03f                                                                                                               
0047d8   c28c     MOVFF     0x28c,0x40                                                                                      
0047da   f040                                                                                                               
0047dc   c28d     MOVFF     0x28d,0x41                                                                                      
0047de   f041                                                                                                               
0047e0   c28e     MOVFF     0x28e,0x42                                                                                      
0047e2   f042                                                                                                               
0047e4   0e20     MOVLW     0x20                                                                                            
0047e6   6e44     MOVWF     0x44,0x0                                                                                        
0047e8   0e03     MOVLW     0x3                                                                                             
0047ea   6e45     MOVWF     0x45,0x0                                                                                        
0047ec   6a46     CLRF      0x46,0x0                                                                                        
0047ee   6a47     CLRF      0x47,0x0                                                                                        
0047f0   ec41     CALL      0x5882,0x0                                                                                      
0047f2   f02c                                                                                                               
0047f4   c03b     MOVFF     0x3b,0x3f                                                                                       
0047f6   f03f                                                                                                               
0047f8   c03c     MOVFF     0x3c,0x40                                                                                       
0047fa   f040                                                                                                               
0047fc   c03d     MOVFF     0x3d,0x41                                                                                       
0047fe   f041                                                                                                               
004800   c03e     MOVFF     0x3e,0x42                                                                                       
004802   f042                                                                                                               
004804   0e05     MOVLW     0x5                                                                                             
004806   6e44     MOVWF     0x44,0x0                                                                                        
004808   6a45     CLRF      0x45,0x0                                                                                        
00480a   6a46     CLRF      0x46,0x0                                                                                        
00480c   6a47     CLRF      0x47,0x0                                                                                        
00480e   ec41     CALL      0x5882,0x0                                                                                      
004810   f02c                                                                                                               
004812   c03b     MOVFF     0x3b,0x3f                                                                                       
004814   f03f                                                                                                               
004816   c03c     MOVFF     0x3c,0x40                                                                                       
004818   f040                                                                                                               
00481a   c03d     MOVFF     0x3d,0x41                                                                                       
00481c   f041                                                                                                               
00481e   c03e     MOVFF     0x3e,0x42                                                                                       
004820   f042                                                                                                               
004822   6a44     CLRF      0x44,0x0                                                                                        
004824   0ec8     MOVLW     0xc8                                                                                            
004826   6e45     MOVWF     0x45,0x0                                                                                        
004828   6a46     CLRF      0x46,0x0                                                                                        
00482a   6a47     CLRF      0x47,0x0                                                                                        
00482c   ec82     CALL      0x5504,0x0                                                                                      
00482e   f02a                                                                                                               
004830   c03f     MOVFF     0x3f,0xfde                                                                                      
004832   ffde                                                                                                               
004834   c040     MOVFF     0x40,0xfde                                                                                      
004836   ffde                                                                                                               
004838   c041     MOVFF     0x41,0xfde                                                                                      
00483a   ffde                                                                                                               
00483c   c042     MOVFF     0x42,0xfdd                                                                                      
00483e   ffdd                                                                                                               
004840   52dd     MOVF      0xdd,0x1,0x0                                                                                    
004842   52dd     MOVF      0xdd,0x1,0x0                                                                                    
                                           	// Return the calculated gyro angle to the caller.                              C:\code\2008\Fresh Copy - 2008\gyro.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
004844   cfd9     MOVFF     0xfd9,0xfe9    	return ((angle * 1000)/1000);                                                   C:\code\2008\Fresh Copy - 2008\gyro.c
004846   ffe9                                                                                                               
004848   cfda     MOVFF     0xfda,0xfea                                                                                     
00484a   ffea                                                                                                               
00484c   cfee     MOVFF     0xfee,0x3f                                                                                      
00484e   f03f                                                                                                               
004850   cfee     MOVFF     0xfee,0x40                                                                                      
004852   f040                                                                                                               
004854   cfee     MOVFF     0xfee,0x41                                                                                      
004856   f041                                                                                                               
004858   cfef     MOVFF     0xfef,0x42                                                                                      
00485a   f042                                                                                                               
00485c   0ee8     MOVLW     0xe8                                                                                            
00485e   6e44     MOVWF     0x44,0x0                                                                                        
004860   0e03     MOVLW     0x3                                                                                             
004862   6e45     MOVWF     0x45,0x0                                                                                        
004864   6a46     CLRF      0x46,0x0                                                                                        
004866   6a47     CLRF      0x47,0x0                                                                                        
004868   ec41     CALL      0x5882,0x0                                                                                      
00486a   f02c                                                                                                               
00486c   c03b     MOVFF     0x3b,0x3f                                                                                       
00486e   f03f                                                                                                               
004870   c03c     MOVFF     0x3c,0x40                                                                                       
004872   f040                                                                                                               
004874   c03d     MOVFF     0x3d,0x41                                                                                       
004876   f041                                                                                                               
004878   c03e     MOVFF     0x3e,0x42                                                                                       
00487a   f042                                                                                                               
00487c   0ee8     MOVLW     0xe8                                                                                            
00487e   6e44     MOVWF     0x44,0x0                                                                                        
004880   0e03     MOVLW     0x3                                                                                             
004882   6e45     MOVWF     0x45,0x0                                                                                        
004884   6a46     CLRF      0x46,0x0                                                                                        
004886   6a47     CLRF      0x47,0x0                                                                                        
004888   ec82     CALL      0x5504,0x0                                                                                      
00488a   f02a                                                                                                               
00488c   d000     BRA       0x488e                                                                                          
                                                                                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
00488e   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
004890   ffe1                                                                                                               
004892   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004894   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004896   ffd9                                                                                                               
004898   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	FUNCTION:		Start_Gyro_Bias_Calc()                                              C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	PURPOSE:		Starts an ongoing gyro bias calculation.                             C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	COMMENTS:		IMPORTANT NOTE: Only call this function when your                   C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *					robot will be absolutely still and free of vibration                       C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *					(e.g., the air compressor is off) until the call to                        C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *					Stop_Gyro_Bias_Calc() is made.                                             C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\gyro.c
                                           void Start_Gyro_Bias_Calc(void)                                                  C:\code\2008\Fresh Copy - 2008\gyro.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
00489a   0102     MOVLB     0x2            	if(calc_gyro_bias == 0)                                                         C:\code\2008\Fresh Copy - 2008\gyro.c
00489c   5195     MOVF      0x95,0x0,0x1                                                                                    
00489e   e108     BNZ       0x48b0                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\gyro.c
                                           		// reset the averaging accumulator                                             C:\code\2008\Fresh Copy - 2008\gyro.c
0048a0   6b8f     CLRF      0x8f,0x1       		avg_accum = 0;                                                                 C:\code\2008\Fresh Copy - 2008\gyro.c
0048a2   6b90     CLRF      0x90,0x1                                                                                        
0048a4   6b91     CLRF      0x91,0x1                                                                                        
0048a6   6b92     CLRF      0x92,0x1                                                                                        
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           		// reset the number of number of average samples counters                      C:\code\2008\Fresh Copy - 2008\gyro.c
0048a8   6b93     CLRF      0x93,0x1       		avg_samples = 0;                                                               C:\code\2008\Fresh Copy - 2008\gyro.c
0048aa   6b94     CLRF      0x94,0x1                                                                                        
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           		// set flag informing the Process_Gyro_Data()                                  C:\code\2008\Fresh Copy - 2008\gyro.c
                                           		// function to start a gyro bias calculation                                   C:\code\2008\Fresh Copy - 2008\gyro.c
0048ac   0e01     MOVLW     0x1            		calc_gyro_bias = 1;                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
0048ae   6f95     MOVWF     0x95,0x1                                                                                        
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\gyro.c
0048b0   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	FUNCTION:		Stop_Gyro_Bias_Calc()                                               C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	PURPOSE:		Ends the current ongoing gyro bias calculation                       C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *					and updates the internal gyro_bias variable.                               C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\gyro.c
                                           void Stop_Gyro_Bias_Calc(void)                                                   C:\code\2008\Fresh Copy - 2008\gyro.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
0048b2   0102     MOVLB     0x2            	if(calc_gyro_bias == 1)                                                         C:\code\2008\Fresh Copy - 2008\gyro.c
0048b4   0595     DECF      0x95,0x0,0x1                                                                                    
0048b6   e11e     BNZ       0x48f4                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\gyro.c
                                           		// Update the gyro bias                                                        C:\code\2008\Fresh Copy - 2008\gyro.c
0048b8   c293     MOVFF     0x293,0x0      		gyro_bias = (int)(avg_accum / avg_samples);                                    C:\code\2008\Fresh Copy - 2008\gyro.c
0048ba   f000                                                                                                               
0048bc   c294     MOVFF     0x294,0x1                                                                                       
0048be   f001                                                                                                               
0048c0   6a02     CLRF      0x2,0x0                                                                                         
0048c2   6a03     CLRF      0x3,0x0                                                                                         
0048c4   c28f     MOVFF     0x28f,0x3f                                                                                      
0048c6   f03f                                                                                                               
0048c8   c290     MOVFF     0x290,0x40                                                                                      
0048ca   f040                                                                                                               
0048cc   c291     MOVFF     0x291,0x41                                                                                      
0048ce   f041                                                                                                               
0048d0   c292     MOVFF     0x292,0x42                                                                                      
0048d2   f042                                                                                                               
0048d4   c000     MOVFF     0x0,0x44                                                                                        
0048d6   f044                                                                                                               
0048d8   c001     MOVFF     0x1,0x45                                                                                        
0048da   f045                                                                                                               
0048dc   c002     MOVFF     0x2,0x46                                                                                        
0048de   f046                                                                                                               
0048e0   c003     MOVFF     0x3,0x47                                                                                        
0048e2   f047                                                                                                               
0048e4   ec45     CALL      0x5a8a,0x0                                                                                      
0048e6   f02d                                                                                                               
0048e8   c03f     MOVFF     0x3f,0x287                                                                                      
0048ea   f287                                                                                                               
0048ec   c040     MOVFF     0x40,0x288                                                                                      
0048ee   f288                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
                                           		// inform Process_Gyro_Data() function that                                    C:\code\2008\Fresh Copy - 2008\gyro.c
                                           		// the ongoing bias calculation needs to stop                                  C:\code\2008\Fresh Copy - 2008\gyro.c
0048f0   0102     MOVLB     0x2            		calc_gyro_bias = 0;                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
0048f2   6b95     CLRF      0x95,0x1                                                                                        
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\gyro.c
0048f4   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	FUNCTION:		Get_Gyro_Bias()                                                     C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	PURPOSE:		Returns the current gyro bias.		                                     C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	RETURNS:		Signed integer with the current gyro bias.                           C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\gyro.c
                                           int Get_Gyro_Bias(void)                                                          C:\code\2008\Fresh Copy - 2008\gyro.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           	// return the gyro bias to the caller                                           C:\code\2008\Fresh Copy - 2008\gyro.c
0048f6   c287     MOVFF     0x287,0xff3    	return(gyro_bias);                                                              C:\code\2008\Fresh Copy - 2008\gyro.c
0048f8   fff3                                                                                                               
0048fa   c288     MOVFF     0x288,0xff4                                                                                     
0048fc   fff4                                                                                                               
0048fe   d000     BRA       0x4900                                                                                          
004900   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	FUNCTION:		Set_Gyro_Bias()                                                     C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	PURPOSE:		Manually sets the gyro bias.                                         C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\gyro.c
004902   cfd9     MOVFF     0xfd9,0xfe6    void Set_Gyro_Bias(int new_gyro_bias)                                            C:\code\2008\Fresh Copy - 2008\gyro.c
004904   ffe6                                                                                                               
004906   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004908   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           	// update gyro_bias                                                             C:\code\2008\Fresh Copy - 2008\gyro.c
00490a   0efd     MOVLW     0xfd           	gyro_bias = new_gyro_bias;                                                      C:\code\2008\Fresh Copy - 2008\gyro.c
00490c   cfdb     MOVFF     0xfdb,0x287                                                                                     
00490e   f287                                                                                                               
004910   0efe     MOVLW     0xfe                                                                                            
004912   cfdb     MOVFF     0xfdb,0x288                                                                                     
004914   f288                                                                                                               
004916   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
004918   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00491a   ffd9                                                                                                               
00491c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	FUNCTION:		Reset_Gyro_Angle()                                                  C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	PURPOSE:		Resets the heading angle to zero.                                    C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\gyro.c
                                           void Reset_Gyro_Angle(void)                                                      C:\code\2008\Fresh Copy - 2008\gyro.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           	// zero out gyro_angle                                                          C:\code\2008\Fresh Copy - 2008\gyro.c
00491e   0102     MOVLB     0x2            	gyro_angle = 0L;                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
004920   6b8b     CLRF      0x8b,0x1                                                                                        
004922   6b8c     CLRF      0x8c,0x1                                                                                        
004924   6b8d     CLRF      0x8d,0x1                                                                                        
004926   6b8e     CLRF      0x8e,0x1                                                                                        
004928   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	FUNCTION:		Process_Gyro_Data()                                                 C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	PURPOSE:		Timer 2 interrupt service routine                                    C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\gyro.c
00492a   cfd9     MOVFF     0xfd9,0xfe6    void Process_Gyro_Data(void)                                                     C:\code\2008\Fresh Copy - 2008\gyro.c
00492c   ffe6                                                                                                               
00492e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004930   ffd9                                                                                                               
004932   0e02     MOVLW     0x2                                                                                             
004934   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
                                           	int temp_gyro_rate;                                                             C:\code\2008\Fresh Copy - 2008\gyro.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
                                           	// should the completed sample set be used to calculate the gyro bias?          C:\code\2008\Fresh Copy - 2008\gyro.c
004936   0102     MOVLB     0x2            	if(calc_gyro_bias == 1)                                                         C:\code\2008\Fresh Copy - 2008\gyro.c
004938   0595     DECF      0x95,0x0,0x1                                                                                    
00493a   e117     BNZ       0x496a                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\gyro.c
                                           		// convert the accumulator to an integer and update gyro_bias                  C:\code\2008\Fresh Copy - 2008\gyro.c
00493c   0e01     MOVLW     0x1            		avg_accum += Get_ADC_Result(GYRO_CHANNEL);                                     C:\code\2008\Fresh Copy - 2008\gyro.c
00493e   6ee6     MOVWF     0xe6,0x0                                                                                        
004940   ec61     CALL      0x40c2,0x0                                                                                      
004942   f020                                                                                                               
004944   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004946   cff3     MOVFF     0xff3,0x0                                                                                       
004948   f000                                                                                                               
00494a   cff4     MOVFF     0xff4,0x1                                                                                       
00494c   f001                                                                                                               
00494e   0100     MOVLB     0x0                                                                                             
004950   5000     MOVF      0x0,0x0,0x0                                                                                     
004952   0102     MOVLB     0x2                                                                                             
004954   278f     ADDWF     0x8f,0x1,0x1                                                                                    
004956   0100     MOVLB     0x0                                                                                             
004958   5001     MOVF      0x1,0x0,0x0                                                                                     
00495a   0102     MOVLB     0x2                                                                                             
00495c   2390     ADDWFC    0x90,0x1,0x1                                                                                    
00495e   0e00     MOVLW     0x0                                                                                             
004960   2391     ADDWFC    0x91,0x1,0x1                                                                                    
004962   2392     ADDWFC    0x92,0x1,0x1                                                                                    
004964   2b93     INCF      0x93,0x1,0x1   		avg_samples++;                                                                 C:\code\2008\Fresh Copy - 2008\gyro.c
004966   2394     ADDWFC    0x94,0x1,0x1                                                                                    
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\gyro.c
004968   d040     BRA       0x49ea         	else                                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\gyro.c
                                           		// get the latest measured gyro rate                                           C:\code\2008\Fresh Copy - 2008\gyro.c
00496a   0e01     MOVLW     0x1            		temp_gyro_rate = (int)Get_ADC_Result(GYRO_CHANNEL) - gyro_bias;                C:\code\2008\Fresh Copy - 2008\gyro.c
00496c   6ee6     MOVWF     0xe6,0x0                                                                                        
00496e   ec61     CALL      0x40c2,0x0                                                                                      
004970   f020                                                                                                               
004972   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004974   0102     MOVLB     0x2                                                                                             
004976   5187     MOVF      0x87,0x0,0x1                                                                                    
004978   5cf3     SUBWF     0xf3,0x0,0x0                                                                                    
00497a   6e00     MOVWF     0x0,0x0                                                                                         
00497c   5188     MOVF      0x88,0x0,0x1                                                                                    
00497e   58f4     SUBWFB    0xf4,0x0,0x0                                                                                    
004980   6e01     MOVWF     0x1,0x0                                                                                         
004982   c000     MOVFF     0x0,0xfde                                                                                       
004984   ffde                                                                                                               
004986   c001     MOVFF     0x1,0xfdd                                                                                       
004988   ffdd                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
                                           		// update reported gyro rate and angle only if                                 C:\code\2008\Fresh Copy - 2008\gyro.c
                                           		// measured gyro rate lies outside the deadband                                C:\code\2008\Fresh Copy - 2008\gyro.c
00498a   cfde     MOVFF     0xfde,0x0      		if(temp_gyro_rate < -GYRO_DEADBAND || temp_gyro_rate > GYRO_DEADBAND)          C:\code\2008\Fresh Copy - 2008\gyro.c
00498c   f000                                                                                                               
00498e   cfdd     MOVFF     0xfdd,0x1                                                                                       
004990   f001                                                                                                               
004992   80d8     BSF       0xd8,0x0,0x0                                                                                    
004994   5001     MOVF      0x1,0x0,0x0                                                                                     
004996   e704     BNN       0x49a0                                                                                          
004998   0ef8     MOVLW     0xf8                                                                                            
00499a   5c00     SUBWF     0x0,0x0,0x0                                                                                     
00499c   0eff     MOVLW     0xff                                                                                            
00499e   5801     SUBWFB    0x1,0x0,0x0                                                                                     
0049a0   e30b     BNC       0x49b8                                                                                          
0049a2   cfde     MOVFF     0xfde,0x2                                                                                       
0049a4   f002                                                                                                               
0049a6   cfdd     MOVFF     0xfdd,0x3                                                                                       
0049a8   f003                                                                                                               
0049aa   3403     RLCF      0x3,0x0,0x0                                                                                     
0049ac   e204     BC        0x49b6                                                                                          
0049ae   5002     MOVF      0x2,0x0,0x0                                                                                     
0049b0   0808     SUBLW     0x8                                                                                             
0049b2   0e00     MOVLW     0x0                                                                                             
0049b4   5403     SUBFWB    0x3,0x0,0x0                                                                                     
0049b6   e217     BC        0x49e6                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\gyro.c
                                           			// update the gyro rate                                                       C:\code\2008\Fresh Copy - 2008\gyro.c
0049b8   cfde     MOVFF     0xfde,0x289    			gyro_rate = temp_gyro_rate;                                                   C:\code\2008\Fresh Copy - 2008\gyro.c
0049ba   f289                                                                                                               
0049bc   cfdd     MOVFF     0xfdd,0x28a                                                                                     
0049be   f28a                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\gyro.c
                                           			// integrate the gyro rate to derive the heading                              C:\code\2008\Fresh Copy - 2008\gyro.c
0049c0   cfde     MOVFF     0xfde,0x0      			gyro_angle += (long)temp_gyro_rate;                                           C:\code\2008\Fresh Copy - 2008\gyro.c
0049c2   f000                                                                                                               
0049c4   cfdd     MOVFF     0xfdd,0x1                                                                                       
0049c6   f001                                                                                                               
0049c8   6a02     CLRF      0x2,0x0                                                                                         
0049ca   6a03     CLRF      0x3,0x0                                                                                         
0049cc   ae01     BTFSS     0x1,0x7,0x0                                                                                     
0049ce   d002     BRA       0x49d4                                                                                          
0049d0   6802     SETF      0x2,0x0                                                                                         
0049d2   6803     SETF      0x3,0x0                                                                                         
0049d4   5000     MOVF      0x0,0x0,0x0                                                                                     
0049d6   278b     ADDWF     0x8b,0x1,0x1                                                                                    
0049d8   5001     MOVF      0x1,0x0,0x0                                                                                     
0049da   238c     ADDWFC    0x8c,0x1,0x1                                                                                    
0049dc   5002     MOVF      0x2,0x0,0x0                                                                                     
0049de   238d     ADDWFC    0x8d,0x1,0x1                                                                                    
0049e0   5003     MOVF      0x3,0x0,0x0                                                                                     
0049e2   238e     ADDWFC    0x8e,0x1,0x1                                                                                    
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\gyro.c
0049e4   d002     BRA       0x49ea         		else                                                                           C:\code\2008\Fresh Copy - 2008\gyro.c
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\gyro.c
0049e6   6b89     CLRF      0x89,0x1       			gyro_rate = 0;                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
0049e8   6b8a     CLRF      0x8a,0x1                                                                                        
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\gyro.c
                                           	}	                                                                              C:\code\2008\Fresh Copy - 2008\gyro.c
0049ea   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Fresh Copy - 2008\gyro.c
0049ec   ffe1                                                                                                               
0049ee   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0049f0   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0049f2   ffd9                                                                                                               
0049f4   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           * FILE NAME: ifi_startup.c                                                       C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           * DESCRIPTION:                                                                   C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           *  This file contains important startup code.                                    C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           * USAGE:                                                                         C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           *  This file should not be modified at all by the user.                          C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           *  DO NOT MODIFY THIS FILE!                                                      C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           extern void Clear_Memory (void);                                                 C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           extern void main (void);                                                         C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           void _entry (void);     /* prototype for the startup function */                 C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           void _startup (void);                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           void _do_cinit (void);  /* prototype for the initialized data setup */           C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           extern volatile near unsigned long short TBLPTR;                                 C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           extern near unsigned FSR0;                                                       C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           extern near char FPFLAGS;                                                        C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           #define RND 6                                                                    C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           #pragma code _entry_scn=RESET_VECTOR                                             C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           void _entry (void)                                                               C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\ifi_startup.c
000800   efc4     GOTO      0x5b88         _asm goto _startup _endasm                                                       C:\code\2008\Fresh Copy - 2008\ifi_startup.c
000802   f02d                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
000804   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           #pragma code _startup_scn                                                        C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           void _startup (void)                                                             C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             _asm                                                                           C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                               /* Initialize the stack pointer */                                           C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005b88   ee1e     LFSR      0x1,0xe00          lfsr 1, _stack lfsr 2, _stack clrf TBLPTRU, 0 /* 1st silicon doesn't do this on POR */ C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005b8a   f000                                                                                                               
005b8c   ee2e     LFSR      0x2,0xe00                                                                                       
005b8e   f000                                                                                                               
005b90   6af8     CLRF      0xf8,0x0                                                                                        
005b92   9c4a     BCF       0x4a,0x6,0x0       bcf  FPFLAGS,RND,0 /* Initialize rounding flag for floating point libs */    C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                               /* initialize the flash memory access configuration. this is harmless */     C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                               /* for non-flash devices, so we do it on all parts. */                       C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005b94   8ea6     BSF       0xa6,0x7,0x0       bsf 0xa6, 7, 0                                                               C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005b96   9ca6     BCF       0xa6,0x6,0x0       bcf 0xa6, 6, 0                                                               C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             _endasm                                                                        C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           loop:                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005b98   ecbc     CALL      0x4378,0x0      	Clear_Memory();                                                                C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005b9a   f021                                                                                                               
005b9c   ec66     CALL      0x56cc,0x0       _do_cinit ();                                                                  C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005b9e   f02b                                                                                                               
                                             /* Call the user's main routine */                                             C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005ba0   ec9e     CALL      0x5b3c,0x0       main ();                                                                       C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005ba2   f02d                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005ba4   d7f9     BRA       0x5b98           goto loop;                                                                     C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005ba6   0012     RETURN    0x0            }                               /* end _startup() */                             C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           /* MPLAB-C18 initialized data memory support */                                  C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           /* The linker will populate the _cinit table */                                  C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           extern far rom struct                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             unsigned short num_init;                                                       C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             struct _init_entry                                                             C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             {                                                                              C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                               unsigned long from;                                                          C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                               unsigned long to;                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                               unsigned long size;                                                          C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             }                                                                              C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             entries[];                                                                     C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           }                                                                                C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           _cinit;                                                                          C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           #pragma code _cinit_scn                                                          C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           void                                                                             C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           _do_cinit (void)                                                                 C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             /* we'll make the assumption in the following code that these statics          C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                              * will be allocated into the same bank.                                       C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                              */                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             static short long prom;                                                        C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             static unsigned short curr_byte;                                               C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             static unsigned short curr_entry;                                              C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             static short long data_ptr;                                                    C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             /* Initialized data... */                                                      C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056cc   0e1e     MOVLW     0x1e             TBLPTR = (short long)&_cinit;                                                  C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056ce   6ef6     MOVWF     0xf6,0x0                                                                                        
0056d0   0e08     MOVLW     0x8                                                                                             
0056d2   6ef7     MOVWF     0xf7,0x0                                                                                        
0056d4   0e00     MOVLW     0x0                                                                                             
0056d6   6ef8     MOVWF     0xf8,0x0                                                                                        
                                             _asm                                                                           C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056d8   0102     MOVLB     0x2                movlb data_ptr                                                               C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056da   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056dc   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056de   6fa8     MOVWF     0xa8,0x1           movwf curr_entry, 1                                                          C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056e0   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056e2   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056e4   6fa9     MOVWF     0xa9,0x1           movwf curr_entry+1, 1                                                        C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             _endasm                                                                        C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                               test:                                                                        C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             _asm                                                                           C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056e6   e103     BNZ       0x56ee              bnz 3                                                                       C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056e8   67a8     TSTFSZ    0xa8,0x1           tstfsz curr_entry, 1                                                         C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056ea   d001     BRA       0x56ee             bra 1                                                                        C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             _endasm                                                                        C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056ec   d03d     BRA       0x5768           goto done;                                                                     C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                               /* Count down so we only have to look up the data in _cinit                  C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                * once.                                                                     C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                *                                                                           C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                * At this point we know that TBLPTR points to the top of the current        C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                * entry in _cinit, so we can just start reading the from, to, and           C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                * size values.                                                              C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                */                                                                          C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             _asm                                                                           C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             /* read the source address */                                                  C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056ee   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056f0   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056f2   6fa3     MOVWF     0xa3,0x1           movwf prom, 1                                                                C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056f4   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056f6   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056f8   6fa4     MOVWF     0xa4,0x1           movwf prom+1, 1                                                              C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056fa   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056fc   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\code\2008\Fresh Copy - 2008\ifi_startup.c
0056fe   6fa5     MOVWF     0xa5,0x1           movwf prom+2, 1                                                              C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                               /* skip a byte since it's stored as a 32bit int */                           C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005700   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                               /* read the destination address directly into FSR0 */                        C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005702   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005704   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005706   6ee9     MOVWF     0xe9,0x0           movwf FSR0L, 0                                                               C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005708   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Fresh Copy - 2008\ifi_startup.c
00570a   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\code\2008\Fresh Copy - 2008\ifi_startup.c
00570c   6eea     MOVWF     0xea,0x0           movwf FSR0H, 0                                                               C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                               /* skip two bytes since it's stored as a 32bit int */                        C:\code\2008\Fresh Copy - 2008\ifi_startup.c
00570e   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005710   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                               /* read the destination address directly into FSR0 */                        C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005712   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005714   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005716   6fa6     MOVWF     0xa6,0x1           movwf curr_byte, 1                                                           C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005718   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Fresh Copy - 2008\ifi_startup.c
00571a   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\code\2008\Fresh Copy - 2008\ifi_startup.c
00571c   6fa7     MOVWF     0xa7,0x1           movwf curr_byte+1, 1                                                         C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                               /* skip two bytes since it's stored as a 32bit int */                        C:\code\2008\Fresh Copy - 2008\ifi_startup.c
00571e   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005720   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             _endasm                                                                        C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             /* the table pointer now points to the next entry. Save it                     C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                              * off since we'll be using the table pointer to do the copying                C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                              * for the entry.                                                              C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                              */                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005722   cff6     MOVFF     0xff6,0x2aa      data_ptr = TBLPTR;                                                             C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005724   f2aa                                                                                                               
005726   cff7     MOVFF     0xff7,0x2ab                                                                                     
005728   f2ab                                                                                                               
00572a   cff8     MOVFF     0xff8,0x2ac                                                                                     
00572c   f2ac                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             /* now assign the source address to the table pointer */                       C:\code\2008\Fresh Copy - 2008\ifi_startup.c
00572e   c2a3     MOVFF     0x2a3,0xff6      TBLPTR = prom;                                                                 C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005730   fff6                                                                                                               
005732   c2a4     MOVFF     0x2a4,0xff7                                                                                     
005734   fff7                                                                                                               
005736   c2a5     MOVFF     0x2a5,0xff8                                                                                     
005738   fff8                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             /* do the copy loop */                                                         C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             _asm                                                                           C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                     /* determine if we have any more bytes to copy */                      C:\code\2008\Fresh Copy - 2008\ifi_startup.c
00573a   0102     MOVLB     0x2                movlb curr_byte                                                              C:\code\2008\Fresh Copy - 2008\ifi_startup.c
00573c   53a6     MOVF      0xa6,0x1,0x1       movf  curr_byte, 1, 1                                                        C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           copy_loop:                                                                       C:\code\2008\Fresh Copy - 2008\ifi_startup.c
00573e   e102     BNZ       0x5744             bnz 2 /* copy_one_byte */                                                    C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005740   53a7     MOVF      0xa7,0x1,0x1       movf  curr_byte + 1, 1, 1                                                    C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005742   e007     BZ        0x5752             bz 7  /* done_copying */                                                     C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           copy_one_byte:                                                                   C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005744   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005746   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005748   6eee     MOVWF     0xee,0x0           movwf POSTINC0, 0                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                               /* decrement byte counter */                                                 C:\code\2008\Fresh Copy - 2008\ifi_startup.c
00574a   07a6     DECF      0xa6,0x1,0x1       decf  curr_byte, 1, 1                                                        C:\code\2008\Fresh Copy - 2008\ifi_startup.c
00574c   e2f8     BC        0x573e             bc -8   /* copy_loop */                                                      C:\code\2008\Fresh Copy - 2008\ifi_startup.c
00574e   07a7     DECF      0xa7,0x1,0x1       decf  curr_byte + 1, 1, 1                                                    C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005750   d7f9     BRA       0x5744             bra -7  /* copy_one_byte */                                                  C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           done_copying:                                                                    C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                             _endasm                                                                        C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                                 /* restore the table pointer for the next entry */                         C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005752   c2aa     MOVFF     0x2aa,0xff6      TBLPTR = data_ptr;                                                             C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005754   fff6                                                                                                               
005756   c2ab     MOVFF     0x2ab,0xff7                                                                                     
005758   fff7                                                                                                               
00575a   c2ac     MOVFF     0x2ac,0xff8                                                                                     
00575c   fff8                                                                                                               
                                             /* next entry... */                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
00575e   0102     MOVLB     0x2              curr_entry--;                                                                  C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005760   07a8     DECF      0xa8,0x1,0x1                                                                                    
005762   0e00     MOVLW     0x0                                                                                             
005764   5ba9     SUBWFB    0xa9,0x1,0x1                                                                                    
005766   d7bf     BRA       0x56e6           goto test;                                                                     C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           done:                                                                            C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           ;                                                                                C:\code\2008\Fresh Copy - 2008\ifi_startup.c
005768   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\ifi_startup.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * FILE NAME: ifi_utilities.c                                                     C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * DESCRIPTION:                                                                   C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *  This file contains some useful functions that you can call in your program.   C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * USAGE:                                                                         C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *  The user should NOT modify this file, so that if a new version is released    C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *  by Innovation First then it can be easily replaced.                           C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *  The user should add their own functions to either user_routines.c or another  C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *  custom file.                                                                  C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           #include <usart.h>                                                               C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           #include <spi.h>                                                                 C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           #include <adc.h>                                                                 C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           #include <capture.h>                                                             C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           #include <timers.h>                                                              C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           #include <string.h>                                                              C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           #include <pwm.h>                                                                 C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           #include "delays.h"       /*defined locally*/                                    C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           #include "ifi_aliases.h"                                                         C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           #include "ifi_utilities.h"                                                       C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           #include "user_routines.h"                                                       C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           int             ifi_packet_num1 = 0;                                             C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           int             ifi_last_packet1 = 0;                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           unsigned char   *ptr;                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           unsigned char   ifi_count;                                                       C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           unsigned char   ifi_analog_channels;                                             C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * FUNCTION NAME: Wait4TXEmpty                                                    C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * PURPOSE:       Wait for serial transmit buffer to be empty.                    C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           /* Used when transmitting data serially.  It waits for each byte to finish.   */ C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           void Wait4TXEmpty(void)                                                          C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           #ifndef _SIMULATOR                                                               C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
00512e   b89e     BTFSC     0x9e,0x4,0x0     while (!TXINTF)                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005130   d002     BRA       0x5136                                                                                          
005134   d7fc     BRA       0x512e                                                                                          
                                             {                                                                              C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005132   d7fd     BRA       0x512e             continue;                                                                    C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                             }                                                                              C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005136   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * FUNCTION NAME: PrintByte                                                       C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * PURPOSE:       A simple way to print a byte of data to the serial port.        C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *     Argument       Type             IO   Description                           C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *     --------       -------------    --   -----------                           C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *     odata          unsigned char    I    byte of data to be transmitted        C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005138   cfd9     MOVFF     0xfd9,0xfe6    void PrintByte(unsigned char odata)                                              C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
00513a   ffe6                                                                                                               
00513c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00513e   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005140   0efe     MOVLW     0xfe             Hex_output((unsigned char) odata);                                             C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005142   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
005144   ffe6                                                                                                               
005146   ecce     CALL      0x439c,0x0                                                                                      
005148   f021                                                                                                               
00514a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00514c   0e0d     MOVLW     0xd              TXREG = 13;  /* a carriage return */                                           C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
00514e   6ead     MOVWF     0xad,0x0                                                                                        
005150   dfee     RCALL     0x512e           Wait4TXEmpty();                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005152   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005154   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005156   ffd9                                                                                                               
005158   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * FUNCTION NAME: PrintWord                                                       C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * PURPOSE:       A simple way to print a word of data to the serial port.        C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *     Argument       Type             IO   Description                           C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *     --------       -------------    --   -----------                           C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *     odata          unsigned int     I    word of data to be transmitted        C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
00515a   cfd9     MOVFF     0xfd9,0xfe6    void PrintWord(unsigned int odata)                                               C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
00515c   ffe6                                                                                                               
00515e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005160   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005162   0102     MOVLB     0x2              ptr = (unsigned char *) &odata;                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005164   50d9     MOVF      0xd9,0x0,0x0                                                                                    
005166   0ffd     ADDLW     0xfd                                                                                            
005168   6fcc     MOVWF     0xcc,0x1                                                                                        
00516a   0eff     MOVLW     0xff                                                                                            
00516c   20da     ADDWFC    0xda,0x0,0x0                                                                                    
00516e   6fcd     MOVWF     0xcd,0x1                                                                                        
005170   0e01     MOVLW     0x1              Hex_output(ptr[1]);                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005172   6aea     CLRF      0xea,0x0                                                                                        
005174   25cc     ADDWF     0xcc,0x0,0x1                                                                                    
005176   6ee9     MOVWF     0xe9,0x0                                                                                        
005178   51cd     MOVF      0xcd,0x0,0x1                                                                                    
00517a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00517c   50ef     MOVF      0xef,0x0,0x0                                                                                    
00517e   6ee6     MOVWF     0xe6,0x0                                                                                        
005180   ecce     CALL      0x439c,0x0                                                                                      
005182   f021                                                                                                               
005184   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005186   c2cc     MOVFF     0x2cc,0xfe9      Hex_output(ptr[0]);                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005188   ffe9                                                                                                               
00518a   c2cd     MOVFF     0x2cd,0xfea                                                                                     
00518c   ffea                                                                                                               
00518e   50ef     MOVF      0xef,0x0,0x0                                                                                    
005190   6ee6     MOVWF     0xe6,0x0                                                                                        
005192   ecce     CALL      0x439c,0x0                                                                                      
005194   f021                                                                                                               
005196   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005198   0e0d     MOVLW     0xd              TXREG = 13;  /* add a carriage return */                                       C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
00519a   6ead     MOVWF     0xad,0x0                                                                                        
00519c   dfc8     RCALL     0x512e           Wait4TXEmpty();                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
00519e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0051a0   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0051a2   ffd9                                                                                                               
0051a4   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * FUNCTION NAME: DisplayBufr                                                     C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * PURPOSE:       Print the entire transmit or receive buffer over the serial     C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *                port for viewing in a terminal program on your PC.              C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * ARGUMENTS:                                                                     C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *     Argument       Type        IO   Description                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *     --------       --------    --   -----------                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *     *bufr          pointer     I    points to beginning of buffer to transmit  C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0051a6   cfd9     MOVFF     0xfd9,0xfe6    void DisplayBufr(unsigned char *bufr)                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0051a8   ffe6                                                                                                               
0051aa   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0051ac   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0051ae   0102     MOVLB     0x2              for (ifi_count=0;ifi_count<26;ifi_count++)                                     C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0051b0   6bce     CLRF      0xce,0x1                                                                                        
0051b2   0e1a     MOVLW     0x1a                                                                                            
0051b4   5dce     SUBWF     0xce,0x0,0x1                                                                                    
0051b6   e211     BC        0x51da                                                                                          
0051d4   0102     MOVLB     0x2                                                                                             
0051d6   2bce     INCF      0xce,0x1,0x1                                                                                    
0051d8   d7ec     BRA       0x51b2                                                                                          
                                             {                                                                              C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0051b8   0efd     MOVLW     0xfd               Hex_output((unsigned char) *bufr++);                                         C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0051ba   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0051bc   ffe9                                                                                                               
0051be   2adb     INCF      0xdb,0x1,0x0                                                                                    
0051c0   0efe     MOVLW     0xfe                                                                                            
0051c2   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0051c4   ffea                                                                                                               
0051c6   e301     BNC       0x51ca                                                                                          
0051c8   2adb     INCF      0xdb,0x1,0x0                                                                                    
0051ca   50ef     MOVF      0xef,0x0,0x0                                                                                    
0051cc   6ee6     MOVWF     0xe6,0x0                                                                                        
0051ce   ecce     CALL      0x439c,0x0                                                                                      
0051d0   f021                                                                                                               
0051d2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                             }                                                                              C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0051da   0e0d     MOVLW     0xd              TXREG = 13;  /* add a carriage return */                                       C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0051dc   6ead     MOVWF     0xad,0x0                                                                                        
0051de   dfa7     RCALL     0x512e           Wait4TXEmpty();                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0051e0   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0051e2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0051e4   ffd9                                                                                                               
0051e6   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * FUNCTION NAME: PacketNum_Check                                                 C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * PURPOSE:       Print the packet number over the serial port if a packet gets   C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *                dropped.  Handy for seeing if you are dropping data.            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           void PacketNum_Check(void)                                                       C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                             /*    to print only the 10th (packet num) byte*/                               C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0051e8   0102     MOVLB     0x2              ptr = (unsigned char *) &rxdata.packet_num;                                    C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0051ea   0e20     MOVLW     0x20                                                                                            
0051ec   6fcc     MOVWF     0xcc,0x1                                                                                        
0051ee   0e02     MOVLW     0x2                                                                                             
0051f0   6fcd     MOVWF     0xcd,0x1                                                                                        
0051f2   0102     MOVLB     0x2              ifi_packet_num1 = (int) rxdata.packet_num;                                     C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0051f4   5120     MOVF      0x20,0x0,0x1                                                                                    
0051f6   0102     MOVLB     0x2                                                                                             
0051f8   6fd4     MOVWF     0xd4,0x1                                                                                        
0051fa   6bd5     CLRF      0xd5,0x1                                                                                        
0051fc   51d6     MOVF      0xd6,0x0,0x1     if (ifi_packet_num1 != ifi_last_packet1)                                       C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0051fe   19d4     XORWF     0xd4,0x0,0x1                                                                                    
005200   e102     BNZ       0x5206                                                                                          
005202   51d7     MOVF      0xd7,0x0,0x1                                                                                    
005204   19d5     XORWF     0xd5,0x0,0x1                                                                                    
005206   e018     BZ        0x5238                                                                                          
                                             {                                                                              C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005208   0102     MOVLB     0x2                if (statusflag.FIRST_TIME == 1)                                              C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
00520a   a540     BTFSS     0x40,0x2,0x1                                                                                    
00520c   d002     BRA       0x5212                                                                                          
                                               {                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
00520e   9540     BCF       0x40,0x2,0x1         statusflag.FIRST_TIME = 0;                                                 C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                               }                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005210   d00f     BRA       0x5230             else                                                                         C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                               {                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005212   c2d6     MOVFF     0x2d6,0xfe6          Hex_output((unsigned char) ifi_last_packet1);                              C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005214   ffe6                                                                                                               
005216   ecce     CALL      0x439c,0x0                                                                                      
005218   f021                                                                                                               
00521a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00521c   c2d4     MOVFF     0x2d4,0xfe6          Hex_output((unsigned char) ifi_packet_num1);                               C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
00521e   ffe6                                                                                                               
005220   ecce     CALL      0x439c,0x0                                                                                      
005222   f021                                                                                                               
005224   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005226   0e0d     MOVLW     0xd                  TXREG = 13;                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005228   6ead     MOVWF     0xad,0x0                                                                                        
00522a   df81     RCALL     0x512e               Wait4TXEmpty();                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
00522c   0102     MOVLB     0x2                  statusflag.FIRST_TIME = 0;                                                 C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
00522e   9540     BCF       0x40,0x2,0x1                                                                                    
                                               }                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005230   c2d4     MOVFF     0x2d4,0x2d6        ifi_last_packet1 = ifi_packet_num1;                                          C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005232   f2d6                                                                                                               
005234   c2d5     MOVFF     0x2d5,0x2d7                                                                                     
005236   f2d7                                                                                                               
                                             }/*   if (ifi_packet_num1 != ifi_last_packet1)*/                               C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005238   0102     MOVLB     0x2              ifi_last_packet1++;                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
00523a   2bd6     INCF      0xd6,0x1,0x1                                                                                    
00523c   0e00     MOVLW     0x0                                                                                             
00523e   23d7     ADDWFC    0xd7,0x1,0x1                                                                                    
005240   35d7     RLCF      0xd7,0x0,0x1     if (ifi_last_packet1 > 255)                                                    C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005242   e204     BC        0x524c                                                                                          
005244   51d6     MOVF      0xd6,0x0,0x1                                                                                    
005246   08ff     SUBLW     0xff                                                                                            
005248   0e00     MOVLW     0x0                                                                                             
00524a   55d7     SUBFWB    0xd7,0x0,0x1                                                                                    
00524c   e202     BC        0x5252                                                                                          
                                             {                                                                              C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
00524e   6bd6     CLRF      0xd6,0x1           ifi_last_packet1 = 0;                                                        C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005250   6bd7     CLRF      0xd7,0x1                                                                                        
                                             }                                                                              C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005252   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * FUNCTION NAME: Initialize_Serial_Comms                                         C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * PURPOSE:       Opens the serial port 1 for communicating with your PC at       C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *                115k baud, 8 bits, no parity, one stop bit, and no flow control. C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * CALLED FROM:   user_routines.c                                                 C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           void Initialize_Serial_Comms (void)                                              C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                             OpenUSART(USART_TX_INT_OFF &                                                   C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                               USART_RX_INT_OFF &                                                           C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                               USART_ASYNCH_MODE &                                                          C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                               USART_EIGHT_BIT &                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                               USART_CONT_RX &                                                              C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005258   0e3c     MOVLW     0x3c               USART_BRGH_HIGH,                                                             C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
00525a   6ee6     MOVWF     0xe6,0x0                                                                                        
005254   0e15     MOVLW     0x15               baud_115);                                                                   C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005256   6ee6     MOVWF     0xe6,0x0                                                                                        
00525c   ec13     CALL      0x5a26,0x0                                                                                      
00525e   f02d                                                                                                               
005260   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005262   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005264   0e32     MOVLW     0x32             Delay1KTCYx( 50 ); /* Settling time */                                         C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005266   6ee6     MOVWF     0xe6,0x0                                                                                        
005268   ecd4     CALL      0x5ba8,0x0                                                                                      
00526a   f02d                                                                                                               
00526c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00526e   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * FUNCTION NAME: Set_Number_of_Analog_Channels                                   C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * PURPOSE:       Sets the variable used in Get_Analog_Value routine (below)      C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *                to the number of analog channels desired by the user.           C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * CALLED FROM:   user_routines.c initialization, typically                       C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * ARGUMENTS:                                                                     C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *      Argument            Type    IO   Description                              C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *     -----------          -----   --   -----------                              C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *     number_of_channels   alias   I    choose alias from ifi_aliases.h          C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005270   cfd9     MOVFF     0xfd9,0xfe6    void Set_Number_of_Analog_Channels (unsigned char number_of_channels)            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005272   ffe6                                                                                                               
005274   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005276   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005278   0efe     MOVLW     0xfe             ifi_analog_channels = number_of_channels;                                      C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
00527a   cfdb     MOVFF     0xfdb,0x2cf                                                                                     
00527c   f2cf                                                                                                               
00527e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005280   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005282   ffd9                                                                                                               
005284   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * FUNCTION NAME: Get_Analog_Value                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * PURPOSE:       Reads the analog voltage on an A/D port and returns the         C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *                10-bit value read stored in an unsigned int.                    C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * CALLED FROM:   user_routines.c, typically                                      C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * ARGUMENTS:                                                                     C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *      Argument         Type        IO   Description                             C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *     -----------   -------------   --   -----------                             C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *     ADC_channel       alias       I    alias found in ifi_aliases.h            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           * RETURNS:       unsigned int                                                    C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005286   cfd9     MOVFF     0xfd9,0xfe6    unsigned int Get_Analog_Value (unsigned char ADC_channel)                        C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005288   ffe6                                                                                                               
00528a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00528c   ffd9                                                                                                               
00528e   0e02     MOVLW     0x2                                                                                             
005290   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                             unsigned int result;                                                           C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           #if defined(__18F8722)                                                           C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0052a2   0ef1     MOVLW     0xf1             OpenADC( ADC_FOSC_RC & ADC_RIGHT_JUST & ADC_0_TAD,                             C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0052a4   6ee6     MOVWF     0xe6,0x0                                                                                        
005292   0e0f     MOVLW     0xf                       ADC_channel & ADC_INT_OFF & ADC_VREFPLUS_VDD & ADC_VREFMINUS_VSS,15); C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005294   6ee6     MOVWF     0xe6,0x0                                                                                        
005296   0efe     MOVLW     0xfe                                                                                            
005298   50db     MOVF      0xdb,0x0,0x0                                                                                    
00529a   0b7f     ANDLW     0x7f                                                                                            
00529c   0bfe     ANDLW     0xfe                                                                                            
00529e   0bfd     ANDLW     0xfd                                                                                            
0052a0   6ee6     MOVWF     0xe6,0x0                                                                                        
0052a6   ec79     CALL      0x58f2,0x0                                                                                      
0052a8   f02c                                                                                                               
0052aa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0052ac   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0052ae   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #else                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                             OpenADC( ADC_FOSC_RC & ADC_RIGHT_JUST & ifi_analog_channels,                   C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                                     ADC_channel & ADC_INT_OFF & ADC_VREFPLUS_VDD & ADC_VREFMINUS_VSS );    C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0052b0   0e0a     MOVLW     0xa              Delay10TCYx( 10 );                                                             C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0052b2   6ee6     MOVWF     0xe6,0x0                                                                                        
0052b4   ecf2     CALL      0x5be4,0x0                                                                                      
0052b6   f02d                                                                                                               
0052b8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0052ba   ec09     CALL      0x5c12,0x0       ConvertADC();                                                                  C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0052bc   f02e                                                                                                               
0052be   ec07     CALL      0x80e,0x0        while( BusyADC() );                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0052c0   f004                                                                                                               
0052c2   0900     IORLW     0x0                                                                                             
0052c4   e001     BZ        0x52c8                                                                                          
0052c6   d7fb     BRA       0x52be                                                                                          
0052c8   ec69     CALL      0x5ad2,0x0       ReadADC();                                                                     C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0052ca   f02d                                                                                                               
0052cc   ec06     CALL      0x5c0c,0x0       CloseADC();                                                                    C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0052ce   f02e                                                                                                               
0052d0   50c4     MOVF      0xc4,0x0,0x0     result = (int) ADRESH << 8 | ADRESL;                                           C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0052d2   6e02     MOVWF     0x2,0x0                                                                                         
0052d4   c002     MOVFF     0x2,0x3                                                                                         
0052d6   f003                                                                                                               
0052d8   6a02     CLRF      0x2,0x0                                                                                         
0052da   50c3     MOVF      0xc3,0x0,0x0                                                                                    
0052dc   0100     MOVLB     0x0                                                                                             
0052de   1002     IORWF     0x2,0x0,0x0                                                                                     
0052e0   6e00     MOVWF     0x0,0x0                                                                                         
0052e2   c003     MOVFF     0x3,0x1                                                                                         
0052e4   f001                                                                                                               
0052e6   c000     MOVFF     0x0,0xfde                                                                                       
0052e8   ffde                                                                                                               
0052ea   c001     MOVFF     0x1,0xfdd                                                                                       
0052ec   ffdd                                                                                                               
0052ee   cfde     MOVFF     0xfde,0x0        return result;                                                                 C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
0052f0   f000                                                                                                               
0052f2   cfdd     MOVFF     0xfdd,0x1                                                                                       
0052f4   f001                                                                                                               
0052f6   c000     MOVFF     0x0,0xff3                                                                                       
0052f8   fff3                                                                                                               
0052fa   c001     MOVFF     0x1,0xff4                                                                                       
0052fc   fff4                                                                                                               
0052fe   d000     BRA       0x5300                                                                                          
005300   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
005302   ffe1                                                                                                               
005304   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005306   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005308   ffd9                                                                                                               
00530a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           /******************************************************************************/ C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           /******************************************************************************/ C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           /******************************************************************************/ C:\code\2008\Fresh Copy - 2008\ifi_utilities.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\main.c
                                           * FILE NAME: main.c <FRC VERSION>                                                C:\code\2008\Fresh Copy - 2008\main.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\main.c
                                           * DESCRIPTION:                                                                   C:\code\2008\Fresh Copy - 2008\main.c
                                           *  This file contains the main program loop.                                     C:\code\2008\Fresh Copy - 2008\main.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\main.c
                                           * USAGE:                                                                         C:\code\2008\Fresh Copy - 2008\main.c
                                           *  You should not need to modify this file.                                      C:\code\2008\Fresh Copy - 2008\main.c
                                           *  Note the different loop speed for the two routines:                           C:\code\2008\Fresh Copy - 2008\main.c
                                           *     Process_Data_From_Master_uP                                                C:\code\2008\Fresh Copy - 2008\main.c
                                           *     Process_Data_From_Local_IO                                                 C:\code\2008\Fresh Copy - 2008\main.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\main.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\main.c
                                           #include "ifi_aliases.h"                                                         C:\code\2008\Fresh Copy - 2008\main.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Fresh Copy - 2008\main.c
                                           #include "ifi_utilities.h"                                                       C:\code\2008\Fresh Copy - 2008\main.c
                                           #include "user_routines.h"                                                       C:\code\2008\Fresh Copy - 2008\main.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\main.c
                                           tx_data_record txdata;          /* DO NOT CHANGE! */                             C:\code\2008\Fresh Copy - 2008\main.c
                                           rx_data_record rxdata;          /* DO NOT CHANGE! */                             C:\code\2008\Fresh Copy - 2008\main.c
                                           packed_struct statusflag;       /* DO NOT CHANGE! */                             C:\code\2008\Fresh Copy - 2008\main.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\main.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\main.c
                                           * FUNCTION NAME: main                                                            C:\code\2008\Fresh Copy - 2008\main.c
                                           * PURPOSE:       Main program function.                                          C:\code\2008\Fresh Copy - 2008\main.c
                                           * CALLED FROM:   ifi_startup.c                                                   C:\code\2008\Fresh Copy - 2008\main.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Fresh Copy - 2008\main.c
                                           * RETURNS:       void                                                            C:\code\2008\Fresh Copy - 2008\main.c
                                           * DO NOT DELETE THIS FUNCTION                                                    C:\code\2008\Fresh Copy - 2008\main.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\main.c
                                           void main (void)                                                                 C:\code\2008\Fresh Copy - 2008\main.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\main.c
                                           #ifdef UNCHANGEABLE_DEFINITION_AREA                                              C:\code\2008\Fresh Copy - 2008\main.c
005b3c   ec72     CALL      0x24e4,0x0       IFI_Initialization ();        /* DO NOT CHANGE! */                             C:\code\2008\Fresh Copy - 2008\main.c
005b3e   f012                                                                                                               
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\main.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\main.c
005b40   ecc2     CALL      0x3784,0x0       User_Initialization();        /* You edit this in user_routines.c */           C:\code\2008\Fresh Copy - 2008\main.c
005b42   f01b                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\main.c
005b44   0102     MOVLB     0x2              statusflag.NEW_SPI_DATA = 0;  /* DO NOT CHANGE! */                             C:\code\2008\Fresh Copy - 2008\main.c
005b46   9140     BCF       0x40,0x0,0x1                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\main.c
005b60   d7f3     BRA       0x5b48           while (1)   /* This loop will repeat indefinitely. */                          C:\code\2008\Fresh Copy - 2008\main.c
                                             {                                                                              C:\code\2008\Fresh Copy - 2008\main.c
                                           #ifdef _SIMULATOR                                                                C:\code\2008\Fresh Copy - 2008\main.c
                                               statusflag.NEW_SPI_DATA = 1;                                                 C:\code\2008\Fresh Copy - 2008\main.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\main.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\main.c
005b48   0102     MOVLB     0x2                if (statusflag.NEW_SPI_DATA)      /* 26.2ms loop area */                     C:\code\2008\Fresh Copy - 2008\main.c
005b4a   a140     BTFSS     0x40,0x0,0x1                                                                                    
005b4c   d007     BRA       0x5b5c                                                                                          
                                               {                                 /* I'm slow!  I only execute every 26.2ms because */ C:\code\2008\Fresh Copy - 2008\main.c
                                                                                 /* that's how fast the Master uP gives me data. */ C:\code\2008\Fresh Copy - 2008\main.c
005b4e   ec36     CALL      0x386c,0x0           Process_Data_From_Master_uP();  /* You edit this in user_routines.c */     C:\code\2008\Fresh Copy - 2008\main.c
005b50   f01c                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\main.c
005b52   0102     MOVLB     0x2                  if (autonomous_mode)            /* DO NOT CHANGE! */                       C:\code\2008\Fresh Copy - 2008\main.c
005b54   ad21     BTFSS     0x21,0x6,0x1                                                                                    
005b56   d002     BRA       0x5b5c                                                                                          
                                                 {                                                                          C:\code\2008\Fresh Copy - 2008\main.c
005b58   ec87     CALL      0x3d0e,0x0             User_Autonomous_Code();        /* You edit this in user_routines_fast.c */ C:\code\2008\Fresh Copy - 2008\main.c
005b5a   f01e                                                                                                               
                                                 }                                                                          C:\code\2008\Fresh Copy - 2008\main.c
                                               }                                                                            C:\code\2008\Fresh Copy - 2008\main.c
005b5c   ecb5     CALL      0x3f6a,0x0         Process_Data_From_Local_IO();     /* You edit this in user_routines_fast.c */ C:\code\2008\Fresh Copy - 2008\main.c
005b5e   f01f                                                                                                               
                                                                                 /* I'm fast!  I execute during every loop.*/ C:\code\2008\Fresh Copy - 2008\main.c
                                             } /* while (1) */                                                              C:\code\2008\Fresh Copy - 2008\main.c
005b62   0012     RETURN    0x0            }  /* END of Main */                                                             C:\code\2008\Fresh Copy - 2008\main.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\main.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\main.c
                                           /******************************************************************************/ C:\code\2008\Fresh Copy - 2008\main.c
                                           /******************************************************************************/ C:\code\2008\Fresh Copy - 2008\main.c
                                           /******************************************************************************/ C:\code\2008\Fresh Copy - 2008\main.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *	TITLE:		pwm.c                                                                  C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *	VERSION:	0.1 (Beta)                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *	DATE:		29-Dec-2006                                                             C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *	COMMENTS:	You are free to use this source code for any non-commercial          C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *				use. Please do not make copies of this source code, modified                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *				or un-modified, publicly available on the internet or elsewhere             C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *				without permission. Thanks.                                                 C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *				Copyright ©2006-2007 R. Kevin Watson. All rights are reserved.              C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           ******************************************************************************** C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *	CHANGE LOG:                                                                    C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *	29-Dec-2006  0.1  RKW - Original code.                                         C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\pwm.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Fresh Copy - 2008\pwm.c
                                           #include "pwm.h"                                                                 C:\code\2008\Fresh Copy - 2008\pwm.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *	FUNCTION:		Initialize_PWM()                                                    C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *	PURPOSE:		CCP and timer initialization				                                     C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *	CALLED FROM:	PWM()                                                             C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *	PARAMETERS:		none                                                              C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *	RETURNS:		nothing                                                              C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\pwm.c
                                           void Initialize_PWM(void)                                                        C:\code\2008\Fresh Copy - 2008\pwm.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	// select 16-bit read/writes to timer 3                                         C:\code\2008\Fresh Copy - 2008\pwm.c
00530c   8eb1     BSF       0xb1,0x7,0x0   	T3CONbits.RD16 = 1;                                                             C:\code\2008\Fresh Copy - 2008\pwm.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	// CCP2 through CCP5 will use timer 3 for compare mode                          C:\code\2008\Fresh Copy - 2008\pwm.c
00530e   86b1     BSF       0xb1,0x3,0x0   	T3CONbits.T3CCP1 = 1;                                                           C:\code\2008\Fresh Copy - 2008\pwm.c
005310   9cb1     BCF       0xb1,0x6,0x0   	T3CONbits.T3CCP2 = 0;                                                           C:\code\2008\Fresh Copy - 2008\pwm.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	// use a 1:1 prescale for timer 3                                               C:\code\2008\Fresh Copy - 2008\pwm.c
005312   9ab1     BCF       0xb1,0x5,0x0   	T3CONbits.T3CKPS1 = 0;                                                          C:\code\2008\Fresh Copy - 2008\pwm.c
005314   98b1     BCF       0xb1,0x4,0x0   	T3CONbits.T3CKPS0 = 0;                                                          C:\code\2008\Fresh Copy - 2008\pwm.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	// use the internal 10MHz clock for timer 3 (each timer "tick" equals 100ns)    C:\code\2008\Fresh Copy - 2008\pwm.c
005316   92b1     BCF       0xb1,0x1,0x0   	T3CONbits.TMR3CS = 0;                                                           C:\code\2008\Fresh Copy - 2008\pwm.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	// disable the timer 3 overflow interrupt                                       C:\code\2008\Fresh Copy - 2008\pwm.c
005318   92a0     BCF       0xa0,0x1,0x0   	PIE2bits.TMR3IE = 0;                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	// disable the CCP interrupts                                                   C:\code\2008\Fresh Copy - 2008\pwm.c
00531a   90a0     BCF       0xa0,0x0,0x0   	PIE2bits.CCP2IE = 0;                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
00531c   90a3     BCF       0xa3,0x0,0x0   	PIE3bits.CCP3IE = 0;                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
00531e   92a3     BCF       0xa3,0x1,0x0   	PIE3bits.CCP4IE = 0;                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
005320   94a3     BCF       0xa3,0x2,0x0   	PIE3bits.CCP5IE = 0;	                                                           C:\code\2008\Fresh Copy - 2008\pwm.c
005322   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *	FUNCTION:		PWM()                                                               C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *	PURPOSE:		Replacement for IFI's Generate_Pwms() function						                 C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *	CALLED FROM:	user_routines.c/Process_Data_From_Master_uP()                     C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *	PARAMETERS:		Four unsigned char PWM position/velocity values                   C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *					for PWM outputs 13, 14, 15 and 16.                                         C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *	RETURNS:		nothing                                                              C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\pwm.c
005324   cfd9     MOVFF     0xfd9,0xfe6    void PWM(unsigned char pwm_13, unsigned char pwm_14, unsigned char pwm_15, unsigned char pwm_16) C:\code\2008\Fresh Copy - 2008\pwm.c
005326   ffe6                                                                                                               
005328   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00532a   ffd9                                                                                                               
00532c   0e08     MOVLW     0x8                                                                                             
00532e   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	int temp_pwm_13;                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	int temp_pwm_14;                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	int temp_pwm_15;                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	int temp_pwm_16;                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	// stop timer 3                                                                 C:\code\2008\Fresh Copy - 2008\pwm.c
005330   90b1     BCF       0xb1,0x0,0x0   	T3CONbits.TMR3ON = 0;                                                           C:\code\2008\Fresh Copy - 2008\pwm.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	// initialize timer 3 register to zero                                          C:\code\2008\Fresh Copy - 2008\pwm.c
005332   6ab3     CLRF      0xb3,0x0       	TMR3H = 0;                                                                      C:\code\2008\Fresh Copy - 2008\pwm.c
005334   6ab2     CLRF      0xb2,0x0       	TMR3L = 0;                                                                      C:\code\2008\Fresh Copy - 2008\pwm.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	// reset CCP hardware                                                           C:\code\2008\Fresh Copy - 2008\pwm.c
005336   6aba     CLRF      0xba,0x0       	CCP2CON = 0;                                                                    C:\code\2008\Fresh Copy - 2008\pwm.c
005338   6ab7     CLRF      0xb7,0x0       	CCP3CON = 0;                                                                    C:\code\2008\Fresh Copy - 2008\pwm.c
00533a   6a73     CLRF      0x73,0x0       	CCP4CON = 0;                                                                    C:\code\2008\Fresh Copy - 2008\pwm.c
00533c   6a70     CLRF      0x70,0x0       	CCP5CON = 0;                                                                    C:\code\2008\Fresh Copy - 2008\pwm.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	// calculate the number of 100 ns timer ticks                                   C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	// needed to match the desired PWM pulse width                                  C:\code\2008\Fresh Copy - 2008\pwm.c
00533e   0efe     MOVLW     0xfe           	temp_pwm_13 = (PWM_13_GAIN * ((int)pwm_13 - 127)) + PWM_13_CENTER;              C:\code\2008\Fresh Copy - 2008\pwm.c
005340   50db     MOVF      0xdb,0x0,0x0                                                                                    
005342   6e02     MOVWF     0x2,0x0                                                                                         
005344   6a03     CLRF      0x3,0x0                                                                                         
005346   0e7f     MOVLW     0x7f                                                                                            
005348   5e02     SUBWF     0x2,0x1,0x0                                                                                     
00534a   0e00     MOVLW     0x0                                                                                             
00534c   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
00534e   0e32     MOVLW     0x32                                                                                            
005350   6e41     MOVWF     0x41,0x0                                                                                        
005352   6a42     CLRF      0x42,0x0                                                                                        
005354   c002     MOVFF     0x2,0x46                                                                                        
005356   f046                                                                                                               
005358   c003     MOVFF     0x3,0x47                                                                                        
00535a   f047                                                                                                               
00535c   ecb6     CALL      0x556c,0x0                                                                                      
00535e   f02a                                                                                                               
005360   c03f     MOVFF     0x3f,0x0                                                                                        
005362   f000                                                                                                               
005364   c040     MOVFF     0x40,0x1                                                                                        
005366   f001                                                                                                               
005368   0e98     MOVLW     0x98                                                                                            
00536a   2600     ADDWF     0x0,0x1,0x0                                                                                     
00536c   0e3a     MOVLW     0x3a                                                                                            
00536e   2201     ADDWFC    0x1,0x1,0x0                                                                                     
005370   c000     MOVFF     0x0,0xfde                                                                                       
005372   ffde                                                                                                               
005374   c001     MOVFF     0x1,0xfdd                                                                                       
005376   ffdd                                                                                                               
005378   0efd     MOVLW     0xfd           	temp_pwm_14 = (PWM_14_GAIN * ((int)pwm_14 - 127)) + PWM_14_CENTER;              C:\code\2008\Fresh Copy - 2008\pwm.c
00537a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00537c   6e02     MOVWF     0x2,0x0                                                                                         
00537e   6a03     CLRF      0x3,0x0                                                                                         
005380   0e7f     MOVLW     0x7f                                                                                            
005382   5e02     SUBWF     0x2,0x1,0x0                                                                                     
005384   0e00     MOVLW     0x0                                                                                             
005386   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
005388   0e32     MOVLW     0x32                                                                                            
00538a   6e41     MOVWF     0x41,0x0                                                                                        
00538c   6a42     CLRF      0x42,0x0                                                                                        
00538e   c002     MOVFF     0x2,0x46                                                                                        
005390   f046                                                                                                               
005392   c003     MOVFF     0x3,0x47                                                                                        
005394   f047                                                                                                               
005396   ecb6     CALL      0x556c,0x0                                                                                      
005398   f02a                                                                                                               
00539a   c03f     MOVFF     0x3f,0x0                                                                                        
00539c   f000                                                                                                               
00539e   c040     MOVFF     0x40,0x1                                                                                        
0053a0   f001                                                                                                               
0053a2   0e98     MOVLW     0x98                                                                                            
0053a4   2600     ADDWF     0x0,0x1,0x0                                                                                     
0053a6   0e3a     MOVLW     0x3a                                                                                            
0053a8   2201     ADDWFC    0x1,0x1,0x0                                                                                     
0053aa   0e02     MOVLW     0x2                                                                                             
0053ac   c000     MOVFF     0x0,0xfdb                                                                                       
0053ae   ffdb                                                                                                               
0053b0   0e03     MOVLW     0x3                                                                                             
0053b2   c001     MOVFF     0x1,0xfdb                                                                                       
0053b4   ffdb                                                                                                               
0053b6   0efc     MOVLW     0xfc           	temp_pwm_15 = (PWM_15_GAIN * ((int)pwm_15 - 127)) + PWM_15_CENTER;              C:\code\2008\Fresh Copy - 2008\pwm.c
0053b8   50db     MOVF      0xdb,0x0,0x0                                                                                    
0053ba   6e02     MOVWF     0x2,0x0                                                                                         
0053bc   6a03     CLRF      0x3,0x0                                                                                         
0053be   0e7f     MOVLW     0x7f                                                                                            
0053c0   5e02     SUBWF     0x2,0x1,0x0                                                                                     
0053c2   0e00     MOVLW     0x0                                                                                             
0053c4   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
0053c6   0e32     MOVLW     0x32                                                                                            
0053c8   6e41     MOVWF     0x41,0x0                                                                                        
0053ca   6a42     CLRF      0x42,0x0                                                                                        
0053cc   c002     MOVFF     0x2,0x46                                                                                        
0053ce   f046                                                                                                               
0053d0   c003     MOVFF     0x3,0x47                                                                                        
0053d2   f047                                                                                                               
0053d4   ecb6     CALL      0x556c,0x0                                                                                      
0053d6   f02a                                                                                                               
0053d8   c03f     MOVFF     0x3f,0x0                                                                                        
0053da   f000                                                                                                               
0053dc   c040     MOVFF     0x40,0x1                                                                                        
0053de   f001                                                                                                               
0053e0   0e98     MOVLW     0x98                                                                                            
0053e2   2600     ADDWF     0x0,0x1,0x0                                                                                     
0053e4   0e3a     MOVLW     0x3a                                                                                            
0053e6   2201     ADDWFC    0x1,0x1,0x0                                                                                     
0053e8   0e04     MOVLW     0x4                                                                                             
0053ea   c000     MOVFF     0x0,0xfdb                                                                                       
0053ec   ffdb                                                                                                               
0053ee   0e05     MOVLW     0x5                                                                                             
0053f0   c001     MOVFF     0x1,0xfdb                                                                                       
0053f2   ffdb                                                                                                               
0053f4   0efb     MOVLW     0xfb           	temp_pwm_16 = (PWM_16_GAIN * ((int)pwm_16 - 127)) + PWM_16_CENTER;              C:\code\2008\Fresh Copy - 2008\pwm.c
0053f6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0053f8   6e02     MOVWF     0x2,0x0                                                                                         
0053fa   6a03     CLRF      0x3,0x0                                                                                         
0053fc   0e7f     MOVLW     0x7f                                                                                            
0053fe   5e02     SUBWF     0x2,0x1,0x0                                                                                     
005400   0e00     MOVLW     0x0                                                                                             
005402   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
005404   0e32     MOVLW     0x32                                                                                            
005406   6e41     MOVWF     0x41,0x0                                                                                        
005408   6a42     CLRF      0x42,0x0                                                                                        
00540a   c002     MOVFF     0x2,0x46                                                                                        
00540c   f046                                                                                                               
00540e   c003     MOVFF     0x3,0x47                                                                                        
005410   f047                                                                                                               
005412   ecb6     CALL      0x556c,0x0                                                                                      
005414   f02a                                                                                                               
005416   c03f     MOVFF     0x3f,0x0                                                                                        
005418   f000                                                                                                               
00541a   c040     MOVFF     0x40,0x1                                                                                        
00541c   f001                                                                                                               
00541e   0e98     MOVLW     0x98                                                                                            
005420   2600     ADDWF     0x0,0x1,0x0                                                                                     
005422   0e3a     MOVLW     0x3a                                                                                            
005424   2201     ADDWFC    0x1,0x1,0x0                                                                                     
005426   0e06     MOVLW     0x6                                                                                             
005428   c000     MOVFF     0x0,0xfdb                                                                                       
00542a   ffdb                                                                                                               
00542c   0e07     MOVLW     0x7                                                                                             
00542e   c001     MOVFF     0x1,0xfdb                                                                                       
005430   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	// load the CCP compare registers                                               C:\code\2008\Fresh Copy - 2008\pwm.c
005432   50df     MOVF      0xdf,0x0,0x0   	CCPR2L = LOBYTE((unsigned int)temp_pwm_13);                                     C:\code\2008\Fresh Copy - 2008\pwm.c
005434   6ebb     MOVWF     0xbb,0x0                                                                                        
005436   cfde     MOVFF     0xfde,0x0      	CCPR2H = HIBYTE((unsigned int)temp_pwm_13);                                     C:\code\2008\Fresh Copy - 2008\pwm.c
005438   f000                                                                                                               
00543a   cfdd     MOVFF     0xfdd,0x1                                                                                       
00543c   f001                                                                                                               
00543e   c001     MOVFF     0x1,0x0                                                                                         
005440   f000                                                                                                               
005442   6a01     CLRF      0x1,0x0                                                                                         
005444   5000     MOVF      0x0,0x0,0x0                                                                                     
005446   6ebc     MOVWF     0xbc,0x0                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
005448   0e02     MOVLW     0x2            	CCPR3L = LOBYTE((unsigned int)temp_pwm_14);                                     C:\code\2008\Fresh Copy - 2008\pwm.c
00544a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00544c   6eb8     MOVWF     0xb8,0x0                                                                                        
00544e   0e02     MOVLW     0x2            	CCPR3H = HIBYTE((unsigned int)temp_pwm_14);                                     C:\code\2008\Fresh Copy - 2008\pwm.c
005450   cfdb     MOVFF     0xfdb,0x0                                                                                       
005452   f000                                                                                                               
005454   0e03     MOVLW     0x3                                                                                             
005456   cfdb     MOVFF     0xfdb,0x1                                                                                       
005458   f001                                                                                                               
00545a   c001     MOVFF     0x1,0x0                                                                                         
00545c   f000                                                                                                               
00545e   6a01     CLRF      0x1,0x0                                                                                         
005460   5000     MOVF      0x0,0x0,0x0                                                                                     
005462   6eb9     MOVWF     0xb9,0x0                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
005464   0e04     MOVLW     0x4            	CCPR4L = LOBYTE((unsigned int)temp_pwm_15);                                     C:\code\2008\Fresh Copy - 2008\pwm.c
005466   50db     MOVF      0xdb,0x0,0x0                                                                                    
005468   6e74     MOVWF     0x74,0x0                                                                                        
00546a   0e04     MOVLW     0x4            	CCPR4H = HIBYTE((unsigned int)temp_pwm_15);                                     C:\code\2008\Fresh Copy - 2008\pwm.c
00546c   cfdb     MOVFF     0xfdb,0x0                                                                                       
00546e   f000                                                                                                               
005470   0e05     MOVLW     0x5                                                                                             
005472   cfdb     MOVFF     0xfdb,0x1                                                                                       
005474   f001                                                                                                               
005476   c001     MOVFF     0x1,0x0                                                                                         
005478   f000                                                                                                               
00547a   6a01     CLRF      0x1,0x0                                                                                         
00547c   5000     MOVF      0x0,0x0,0x0                                                                                     
00547e   6e75     MOVWF     0x75,0x0                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
005480   0e06     MOVLW     0x6            	CCPR5L = LOBYTE((unsigned int)temp_pwm_16);                                     C:\code\2008\Fresh Copy - 2008\pwm.c
005482   50db     MOVF      0xdb,0x0,0x0                                                                                    
005484   6e71     MOVWF     0x71,0x0                                                                                        
005486   0e06     MOVLW     0x6            	CCPR5H = HIBYTE((unsigned int)temp_pwm_16);                                     C:\code\2008\Fresh Copy - 2008\pwm.c
005488   cfdb     MOVFF     0xfdb,0x0                                                                                       
00548a   f000                                                                                                               
00548c   0e07     MOVLW     0x7                                                                                             
00548e   cfdb     MOVFF     0xfdb,0x1                                                                                       
005490   f001                                                                                                               
005492   c001     MOVFF     0x1,0x0                                                                                         
005494   f000                                                                                                               
005496   6a01     CLRF      0x1,0x0                                                                                         
005498   5000     MOVF      0x0,0x0,0x0                                                                                     
00549a   6e72     MOVWF     0x72,0x0                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	// disable all interrupts to prevent an interrupt routine                       C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	// from executing after the CCP hardware is initialized                         C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	// and the moment the timer is started                                          C:\code\2008\Fresh Copy - 2008\pwm.c
00549c   9ef2     BCF       0xf2,0x7,0x0   	INTCONbits.GIEH = 0;                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	// setup CCP hardware for compare mode (each PWM output                         C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	// transitions from low to high at this point)                                  C:\code\2008\Fresh Copy - 2008\pwm.c
00549e   0e09     MOVLW     0x9            	CCP2CON = 0x09;                                                                 C:\code\2008\Fresh Copy - 2008\pwm.c
0054a0   6eba     MOVWF     0xba,0x0                                                                                        
0054a2   6eb7     MOVWF     0xb7,0x0       	CCP3CON = 0x09;                                                                 C:\code\2008\Fresh Copy - 2008\pwm.c
0054a4   6e73     MOVWF     0x73,0x0       	CCP4CON = 0x09;                                                                 C:\code\2008\Fresh Copy - 2008\pwm.c
0054a6   6e70     MOVWF     0x70,0x0       	CCP5CON = 0x09;                                                                 C:\code\2008\Fresh Copy - 2008\pwm.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	// start timer 3                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
0054a8   80b1     BSF       0xb1,0x0,0x0   	T3CONbits.TMR3ON = 1;                                                           C:\code\2008\Fresh Copy - 2008\pwm.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
                                           	//enable interrupts                                                             C:\code\2008\Fresh Copy - 2008\pwm.c
0054aa   8ef2     BSF       0xf2,0x7,0x0   	INTCONbits.GIEH = 1;                                                            C:\code\2008\Fresh Copy - 2008\pwm.c
0054ac   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Fresh Copy - 2008\pwm.c
0054ae   ffe1                                                                                                               
0054b0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0054b2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0054b4   ffd9                                                                                                               
0054b6   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	TITLE:		serial_ports.c                                                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	VERSION:	0.4 (Beta)                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	DATE:		10-Jan-2006                                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	COMMENTS:	The source code in this file implements a fully buffered,            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				interrupt-driven serial port driver that can be used with                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				either or both on-board serial ports.                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				This source code will work with the Robovation (A/K/A EDU-RC)               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				robot controller and the FIRST Robotics robot controller.                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				By default, serial port one will operate at 115200 baud, which              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				is compatible with InnovationFIRST's terminal program, and                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				serial port two will operate at 9600 baud. These values can be              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				easily changed by modifying the	serial port initialization                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				functions mentioned below.                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *               This file is best viewed with tabs set to four characters.       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				Nine things must be done before this software will work                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				correctly:                                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  1a) FRC-RC: As this software is intended to replace IFI's                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  serial port driver, the call to Serial_Driver_Initialize()                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  in user_routines.c / User_Initialization() should be                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  removed or commented out.	In addition, all references to                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  "user_Serialdrv.c" and "user_Serialdrv.h" must be removed                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  from the project and all project source files.                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  1b) EDU-RC: As this software is intended to replace IFI's                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  serial port driver, the call to Initialize_Serial_Comms()                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  in user_routines.c / User_Initialization() should be                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  removed or commented out.	In addition, all references to                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  "printf_lib.c" and "printf_lib.h" must be removed from                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  the project and all project source files.                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  2) You must add the serial_ports.c/.h source files to                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  your MPLAB project.                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  3) A #include statement for the serial_ports.h header                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  file must be included at the beginning of each source                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  file that uses the serial ports. The statement should                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  look like this: #include "serial_ports.h".                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  4) If you intend to use the C18 output stream functions,                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  A #include statement for the stdio.h header file must be                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  included at the beginning of each source file that calls                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  any of these functions. The statement should look like                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  this: #include <serial_ports.h>.                                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  5) Init_Serial_Port_One() and/or Init_Serial_Port_Two()                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  must be called from the User_Initialization() function                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  located in the user_routines.c source file.                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  6) The interrupt handler(s) must be installed in the                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  InterruptHandlerLow() function located in the                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  user_routines_fast.c source file. See the accompanying                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  copy of user_routines_fast.c to see how this is done.                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  7) Decide what functionality you need and comment out the                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  #define ENABLE_SERIAL_PORT_xxx_yy entries in serial_ports.h               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  as necessary. As an example, if you only need to send data                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  using serial port one and would like to reclaim the resources             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  used by serial port two and serial port one's receiver                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  source code, the top of the serial_ports.h file would look                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  like this:                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  // comment out the next line to disable all serial port one               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  // receive functionality                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  // #define ENABLE_SERIAL_PORT_ONE_RX                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  // comment out the next line to disable all serial port one               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  // transmit functionality                                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  #define ENABLE_SERIAL_PORT_ONE_TX                                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  // comment out the next line to disable all serial port two               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  // receive functionality                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  // #define ENABLE_SERIAL_PORT_TWO_RX                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  // comment out the next line to disable all serial port two               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  // transmit functionality                                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  // #define ENABLE_SERIAL_PORT_TWO_TX                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  By default, both serial ports and their respective receive                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  and transmit sections are enabled.                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  8) As the default output device for C18's output stream                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  functions is the null device, you'll presumably want to                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  change the value of stdout_serial_port to "SERIAL_PORT_ONE"               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  or "SERIAL_PORT_TWO" if you want to see printf()'s output.                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  User_Initialization() is a good place to do this.                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  9) To support terminal emulation software, \r\n should                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  be used instead of just \n in the printf() format string.                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				This serial port driver can send output stream data to either               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				of the serial ports by setting the value of the global variable             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				stdout_serial_port before calling output stream	functions like              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				printf(). Setting the value	to "SERIAL_PORT_ONE" will send the              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				output to serial port one. Likewise, setting the value to                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				"SERIAL_PORT_TWO" will send the output to serial port two.                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				Setting the value to "NUL" will send the output to the null                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				device, meaning that the output is sent	nowhere. These values               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				are #define'd in serial_ports.h. As an example,                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  stdout_serial_port = SERIAL_PORT_ONE;                                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  printf("Kernighan");                                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  stdout_serial_port = NUL;                                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  printf("and");                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  stdout_serial_port = SERIAL_PORT_TWO;                                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				  printf("Ritchie");                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				will send the text "Kernighan" to the peripheral device attached            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				to serial port one, the text "Ritchie" to the device attached to            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				serial port two and the text "and" won't be sent anywhere.                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				By default, output is sent to the null device, which is the only            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				output device guaranteed to be present.                                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				You are free to use this source code for any non-commercial                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				use. Please do not make copies of this source code, modified                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				or un-modified, publicly available on the internet or                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				elsewhere without permission. Thanks.                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *				Copyright ©2004-2007 R. Kevin Watson. All rights are reserved.              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *		                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           ******************************************************************************** C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	CHANGE LOG:                                                                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	22-Dec-2004  0.1  RKW - Original code.                                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	28-Dec-2004  0.2  RKW - Using preprocessor directives, added the ability       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	                  to enable/disable individual serial port receive and         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	                  transmit code. Updated documentation.                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	05-Feb-2005  0.3  RKW - Added _user_putc() interface to C18's new output       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	                  stream capabilities. Updated documentation.                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	05-Jan-2006  0.4  RKW - Partial port to 18F8722. Updated documentation.        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	10-Jan-2006  0.4  RKW - Modified the #pragma interruptlow line to also         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	                  save the .tmpdata section.                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #include <p18f8722.h>                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #include <stdio.h>                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #include "serial_ports.h"                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           // by default stdout stream output is sent to the null device,                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           // which is the only device guaranteed to be present.                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           unsigned char stdout_serial_port = NUL;                                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           //                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           // Serial Port 1 Receive Variables:                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           //                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char Rx_1_Queue[RX_1_QUEUE_SIZE];	// serial port 1's receive circular queue C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char Rx_1_Queue_Full = FALSE;		// flag that indicates that serial port 1's C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// receive circular queue is full and cannot                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// accept any more data                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           unsigned char Rx_1_Queue_Empty = TRUE;				// flag that indicates that there is no more  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// data present in serial port 1's receive                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           unsigned char Rx_1_Queue_Read_Index = 0;			// read index into serial port 1's receive C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char Rx_1_Queue_Write_Index = 0;	// write index into serial port 1's receive C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char Rx_1_Queue_Byte_Count = 0;	// number of bytes in serial port 1's receive C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char RX_1_Overrun_Errors = 0;		// number of overrun errors that have occurred C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// in serial port 1's receive circuitry since                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// the last reset                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char RX_1_Framing_Errors = 0;		// number of framing errors that have occurred C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// in serial port 1's receive circuitry since                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// the last reset                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           //                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           // Serial Port 1 Transmit Variables:                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           //                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_TX                                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char Tx_1_Queue[TX_1_QUEUE_SIZE];	// serial port 1's transmit circular queue C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Full = FALSE;		// flag that indicates that serial port 1's C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// transmit circular queue is full and cannot                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// accept any more data                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Empty = TRUE;		// flag that indicates that there is no more  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// data to send in serial port 1's transmit                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Read_Index = 0;	// read index into serial port 1's transmit C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           unsigned char Tx_1_Queue_Write_Index = 0;			// write index into serial port 1's transmit C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Byte_Count = 0;	// number of bytes in serial port 1's transmit C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           //                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           // Serial Port 2 Receive Variables:                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           //                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char Rx_2_Queue[RX_2_QUEUE_SIZE];	// serial port 2's receive circular queue C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char Rx_2_Queue_Full = FALSE;		// flag that indicates that serial port 2's C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// receive circular queue is full and cannot                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// accept any more data                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           unsigned char Rx_2_Queue_Empty = TRUE;				// flag that indicates that there is no more  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// data present in serial port 2's receive                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           unsigned char Rx_2_Queue_Read_Index = 0;			// read index into serial port 2's receive C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char Rx_2_Queue_Write_Index = 0;	// write index into serial port 2's receive C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char Rx_2_Queue_Byte_Count = 0;	// number of bytes in serial port 2's receive C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char RX_2_Overrun_Errors = 0;		// number of overrun errors that have occurred C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// in serial port 2's receive circuitry since                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// the last reset                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char RX_2_Framing_Errors = 0;		// number of framing errors that have occurred C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// in serial port 2's receive circuitry since                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// the last reset                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           //                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           // Serial Port 2 Transmit Variables:                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           //                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_TX                                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char Tx_2_Queue[TX_2_QUEUE_SIZE];	// serial port 2's transmit circular queue C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Full = FALSE;		// flag that indicates that serial port 2's C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// transmit circular queue is full and cannot                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// accept any more data                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Empty = TRUE;		// flag that indicates that there is no more  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// data to send in serial port 2's transmit                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Read_Index = 0;	// read index into serial port 2's transmit C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           unsigned char Tx_2_Queue_Write_Index = 0;			// write index into serial port 2's transmit C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Byte_Count = 0;	// number of bytes in serial port 2's transmit C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	FUNCTION:		Init_Serial_Port_One()                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PURPOSE:		Initializes serial port one for asynchronous operation               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	COMMENTS:		This function must be called before you try to use serial           C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					port one.                                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					By default, this serial port is set to 115200 baud with                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					the transmitter and receiver enabled. This is the rate                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					IFI's terminal program expects.                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					The	serial port's baud rate is programmed by entering                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					a value into the SPBRG1 register and possibly changing                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					the value of the BRGH bit. Several example values are                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					included in the serial_ports.h file.                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					Numbers within brackets refer to the PIC18F8722	data                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					sheet page number where more information can be found.                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					This document can be found at microchip's website at                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					http://www.microchip.com or at the author's website at                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					http://www.kevin.org/frc                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX or ENABLE_SERIAL_PORT_ONE_TX                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					is #define'd in serial_ports.h                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           void Init_Serial_Port_One(void)                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// Start by initializing the serial port with code                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// common to receive and transmit functions                                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
0049f6   0e15     MOVLW     0x15           	SPBRG1 = BAUD_115200;	// baud rate generator register [251]                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
0049f8   6eaf     MOVWF     0xaf,0x0                                                                                        
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
0049fa   84ac     BSF       0xac,0x2,0x0   	TXSTA1bits.BRGH = 1;	// high baud rate select bit (asynchronous mode only) [248] C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: low speed                                                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: high speed                                                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
0049fc   9a9d     BCF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 0;		// receive interrupt enable bit [127]                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
0049fe   989d     BCF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 0;		// transmit interrupt enable bit [127]                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a00   98ac     BCF       0xac,0x4,0x0   	TXSTA1bits.SYNC = 0;	// USART mode select bit [248]                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: asynchronous mode                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: synchronous mode                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a02   9eac     BCF       0xac,0x7,0x0   	TXSTA1bits.CSRC = 0;	// clock source select bit (synchronous mode only) [248]   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: Slave mode (clock generated by external source)                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: Master mode (clock generated internally from BRG)                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// if receive functionality is to be included in the                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// software build, include code that is specific to                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// initializing the receiver                                                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_ONE_RX                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a04   8e94     BSF       0x94,0x7,0x0   	TRISCbits.TRISC7 = 1;	// make sure the RC7/RX1/DT1 pin is configured as an input [140] C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a06   9cab     BCF       0xab,0x6,0x0   	RCSTA1bits.RX9 = 0;		// 9-bit receive enable bit [249]                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: 8-bit reception mode                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: 9-bit reception mode                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a08   96ab     BCF       0xab,0x3,0x0   	RCSTA1bits.ADDEN = 0;	// address detect enable bit (9-bit asynchronous mode only) [249] C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: disables address detection                                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: enables address detection                                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a0a   8aab     BSF       0xab,0x5,0x0   	RCSTA1bits.SREN = 1;	// single receive enable bit (master synchronous mode only) [249] C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: disables single receive mode                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: enables single receive mode                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a0c   88ab     BSF       0xab,0x4,0x0   	RCSTA1bits.CREN = 1;	// continuous receive mode enable bit [249]                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							// asynchronous mode:                                                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: disables receiver                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: enable receiver                                                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							// synchronous mode:                                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: disables continuous receive                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: enables continuous receive until CREN is cleared                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a0e   9a9f     BCF       0x9f,0x5,0x0   	IPR1bits.RC1IP = 0;		// receive interrupt priority bit (must be 0 for IFI controllers) [130] C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: low-priority                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: high-priority                                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a10   8a9d     BSF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 1;		// receive interrupt enable bit [127]                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	#endif					//                                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// if transmit functionality is to be included in the                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// software build, include code that is specific to                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// initializing the serial port transmitter                                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_ONE_TX                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a12   0102     MOVLB     0x2            	stdout = _H_USER;		// use this driver for output stream functions               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a14   69dc     SETF      0xdc,0x1                                                                                        
004a16   69dd     SETF      0xdd,0x1                                                                                        
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a18   9c94     BCF       0x94,0x6,0x0   	TRISCbits.TRISC6 = 0;	// make sure the RC6/TX1/CK1 pin is configured as an output [140] C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a1a   9cac     BCF       0xac,0x6,0x0   	TXSTA1bits.TX9 = 0;		// 9-bit transmit enable bit [248]                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: 8-bit transmission mode                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: 9-bit transmission mode                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a1c   96ac     BCF       0xac,0x3,0x0   	TXSTA1bits.SENDB = 0;	// send break character bit [248]                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: Sync Break transmission completed                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: Send Sync Break on next transmission                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a1e   989f     BCF       0x9f,0x4,0x0   	IPR1bits.TX1IP = 0;		// transmit interrupt priority bit (must be 0 for IFI controllers) [130] C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: low-priority                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: high-priority                                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a20   889d     BSF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 1;		// transmit interrupt enable bit [127]                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a22   8aac     BSF       0xac,0x5,0x0   	TXSTA1bits.TXEN = 1;  	// Enable transmitter [248]                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: serial transmitter is disabled                                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: serial transmitter                                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	#endif					//                                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// finally, turn on the serial port                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a24   8eab     BSF       0xab,0x7,0x0   	RCSTA1bits.SPEN = 1;  	// Serial Port Enable [249]                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: serial port is disabled                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: serial port is enabled                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a26   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	FUNCTION:		Init_Serial_Port_Two()                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PURPOSE:		Initializes serial port two for asynchronous operation               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	COMMENTS:		This function must be called before you try to use serial           C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					port two.                                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					By default, this serial port is set to 9600 baud with                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					the transmitter and receiver enabled.                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					The	serial port's baud rate is programmed by entering                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					a value into the SPBRG2 register and possibly changing                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					the value of the BRGH bit. Several example values are                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					included in the serial_ports.h file.                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					Numbers within brackets refer to the PIC18F8722	data                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					sheet page number where more information can be found.                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					This document can be found at microchip's website at                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					http://www.microchip.com or at the author's website at                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					http://www.kevin.org/frc                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX or ENABLE_SERIAL_PORT_TWO_TX                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					is #define'd in serial_ports.h                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           void Init_Serial_Port_Two(void)                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// Start by initializing the serial port with code                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// common to receive and transmit functions                                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a28   0e15     MOVLW     0x15           	SPBRG2 = BAUD_115200;	// baud rate generator register [251]                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a2a   6e6f     MOVWF     0x6f,0x0                                                                                        
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a2c   846c     BSF       0x6c,0x2,0x0   	TXSTA2bits.BRGH = 1;	// high baud rate select bit (asynchronous mode only) [248] C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: low speed                                                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: high speed                                                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a2e   9aa3     BCF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 0;		// receive interrupt enable bit [129]                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a30   98a3     BCF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 0;		// transmit interrupt enable bit [129]                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a32   986c     BCF       0x6c,0x4,0x0   	TXSTA2bits.SYNC = 0;	// USART mode select bit [248]                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: asynchronous mode                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: synchronous mode                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a34   9e6c     BCF       0x6c,0x7,0x0   	TXSTA2bits.CSRC = 0;	// clock source select bit (synchronous mode only) [248]   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: Slave mode (clock generated by external source)                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: Master mode (clock generated internally from BRG)                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// if receive functionality is to be included in the                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// software build, include code that is specific to                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// initializing the receiver                                                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_TWO_RX                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a36   8498     BSF       0x98,0x2,0x0   	TRISGbits.TRISG2 = 1;	// make sure the RG2/RX2/DT2 pin is configured as an input [151] C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a38   9c6b     BCF       0x6b,0x6,0x0   	RCSTA2bits.RX9 = 0;		// 9-bit receive enable bit [249]                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: 8-bit reception mode                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: 9-bit reception mode                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a3a   966b     BCF       0x6b,0x3,0x0   	RCSTA2bits.ADDEN = 0;	// address detect enable bit (9-bit asynchronous mode only) [249] C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: disables address detection                                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: enables address detection                                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a3c   8a6b     BSF       0x6b,0x5,0x0   	RCSTA2bits.SREN = 1;	// single receive enable bit (master synchronous mode only) [249] C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: disables single receive mode                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: enables single receive mode                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a3e   886b     BSF       0x6b,0x4,0x0   	RCSTA2bits.CREN = 1;	// continuous receive mode enable bit [249]                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							// asynchronous mode:                                                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: disables receiver                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: enable receiver                                                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							// synchronous mode:                                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: disables continuous receive                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: enables continuous receive until CREN is cleared                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a40   9aa5     BCF       0xa5,0x5,0x0   	IPR3bits.RC2IP = 0;		// receive interrupt priority bit (must be 0 for IFI controllers) [132] C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: low-priority                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: high-priority                                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a42   8aa3     BSF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 1;		// receive interrupt enable bit [129]                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	#endif					//                                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// if transmit functionality is to be included in the                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// software build, include code that is specific to                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// initializing the serial port transmitter                                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_TWO_TX                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a44   0102     MOVLB     0x2            	stdout = _H_USER;		// use this driver for output stream functions               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a46   69dc     SETF      0xdc,0x1                                                                                        
004a48   69dd     SETF      0xdd,0x1                                                                                        
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a4a   9298     BCF       0x98,0x1,0x0   	TRISGbits.TRISG1 = 0;	// make sure the RG1/TX2/CK2 pin is configured as an output [151] C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a4c   9c6c     BCF       0x6c,0x6,0x0   	TXSTA2bits.TX9 = 0;		// 9-bit transmit enable bit [248]                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: 8-bit transmission mode                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: 9-bit transmission mode                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a4e   966c     BCF       0x6c,0x3,0x0   	TXSTA2bits.SENDB = 0;	// send break character bit [248]                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: Sync Break transmission completed                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: Send Sync Break on next transmission                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a50   98a5     BCF       0xa5,0x4,0x0   	IPR3bits.TX2IP = 0;		// transmit interrupt priority bit (must be 0 for IFI controllers) [132] C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: low-priority                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: high-priority                                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a52   88a3     BSF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 1;		// transmit interrupt enable bit [129]                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a54   8a6c     BSF       0x6c,0x5,0x0   	TXSTA2bits.TXEN = 1;  	// Enable transmitter [248]                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: serial transmitter is disabled                                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: serial transmitter                                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	#endif					//                                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// finally, turn on the serial port                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a56   8e6b     BSF       0x6b,0x7,0x0   	RCSTA2bits.SPEN = 1;  	// Serial Port Enable [249]                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  0: serial port is disabled                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           							//  1: serial port is enabled                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a58   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	FUNCTION:		Serial_Port_One_Byte_Count()                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PURPOSE:		Returns the number of bytes in serial port                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					ones's received data queue.		                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	COMMENTS:		This function must be called to determine how much data,            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					if any, is present in serial port one's received data                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					queue. If the returned number is greater than zero, then                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					a call to Read_Serial_Port_One() can be made to retrieve                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					the next byte.                                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX is #define'd in serial_ports.h                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a5a   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Serial_Port_One_Byte_Count(void)                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a5c   ffe6                                                                                                               
004a5e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004a60   ffd9                                                                                                               
004a62   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	unsigned char temp;                                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// since we're about to use the Rx_1_Queue_Byte_Count variable,                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// let's briefly disable the serial port interrupt to make sure                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// that Rx_1_Queue_Byte_Count doesn't get altered while we're                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// using it.                                                                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a64   9a9d     BCF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 0;                                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// now we can get a local copy of the byte count without fear                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// that we'll get corrupted data                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a66   c1d5     MOVFF     0x1d5,0xfdf    	temp = Rx_1_Queue_Byte_Count;                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a68   ffdf                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// okay, we have a local copy of the byte count, so turn the                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// serial port interrupt back on.                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a6a   8a9d     BSF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 1;                                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// return the byte count                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a6c   50df     MOVF      0xdf,0x0,0x0   	return(temp);                                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a6e   d000     BRA       0x4a70                                                                                          
004a70   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a72   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004a74   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004a76   ffd9                                                                                                               
004a78   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	FUNCTION:		Serial_Port_Two_Byte_Count()                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PURPOSE:		Returns the number of bytes in serial port                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					two's received data queue.		                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	COMMENTS:		This function must be called to determine how much data,            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					if any, is present in serial port two's received data                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					queue. If the returned number is greater than zero, then                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					a call to Read_Serial_Port_Two() can be made to retrieve                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					the next byte.                                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX is #define'd in serial_ports.h                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a7a   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Serial_Port_Two_Byte_Count(void)                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a7c   ffe6                                                                                                               
004a7e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004a80   ffd9                                                                                                               
004a82   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	unsigned char temp;                                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// since we're about to use the Rx_1_Queue_Byte_Count variable,                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// let's briefly disable the serial port interrupt to make sure                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// that Rx_1_Queue_Byte_Count doesn't get altered while we're                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// using it.                                                                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a84   9aa3     BCF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 0;                                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// now we can get a local copy of the byte count without fear                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// that we'll get corrupted data                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a86   c1e1     MOVFF     0x1e1,0xfdf    	temp = Rx_2_Queue_Byte_Count;                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a88   ffdf                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// okay, we have a local copy of the byte count, so turn the                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// serial port interrupt back on.                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a8a   8aa3     BSF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 1;                                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// return the byte count                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a8c   50df     MOVF      0xdf,0x0,0x0   	return(temp);                                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a8e   d000     BRA       0x4a90                                                                                          
004a90   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a92   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004a94   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004a96   ffd9                                                                                                               
004a98   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	FUNCTION:		Read_Serial_Port_One()                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PURPOSE:		                                                                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	COMMENTS:		This function will not be included in the build unless              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX is #define'd in serial_ports.h 		                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a9a   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Read_Serial_Port_One(void)                                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
004a9c   ffe6                                                                                                               
004a9e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004aa0   ffd9                                                                                                               
004aa2   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	unsigned char byte;                                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004aa4   0101     MOVLB     0x1            	if(Rx_1_Queue_Empty)                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004aa6   51d2     MOVF      0xd2,0x0,0x1                                                                                    
004aa8   e003     BZ        0x4ab0                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// error: no data to read                                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
004aaa   0e00     MOVLW     0x0            		return(0);                                                                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
004aac   d017     BRA       0x4adc                                                                                          
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004aae   d016     BRA       0x4adc         	else                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// get a byte from the circular queue and store it temporarily                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ab0   51d3     MOVF      0xd3,0x0,0x1   		byte = Rx_1_Queue[Rx_1_Queue_Read_Index];                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ab2   6aea     CLRF      0xea,0x0                                                                                        
004ab4   0f00     ADDLW     0x0                                                                                             
004ab6   6ee9     MOVWF     0xe9,0x0                                                                                        
004ab8   0e01     MOVLW     0x1                                                                                             
004aba   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004abc   cfef     MOVFF     0xfef,0xfdf                                                                                     
004abe   ffdf                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// decrement the queue byte count                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ac0   07d5     DECF      0xd5,0x1,0x1   		Rx_1_Queue_Byte_Count--;                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// increment the read pointer                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ac2   2bd3     INCF      0xd3,0x1,0x1   		Rx_1_Queue_Read_Index++;                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ac4   0e1f     MOVLW     0x1f           		Rx_1_Queue_Read_Index &= RX_1_QUEUE_INDEX_MASK;                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ac6   17d3     ANDWF     0xd3,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// since we're about to use the Rx_1_Queue_Write_Index variable, which can     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// also be modified in the interrupt service routine, let's briefly disable    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// the serial port interrupt to make sure that Rx_1_Queue_Write_Index doesn't  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// get altered while we're using it.                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ac8   9a9d     BCF       0x9d,0x5,0x0   		PIE1bits.RC1IE = 0;                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004aca   51d4     MOVF      0xd4,0x0,0x1   		if(Rx_1_Queue_Read_Index == Rx_1_Queue_Write_Index)                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004acc   5dd3     SUBWF     0xd3,0x0,0x1                                                                                    
004ace   e102     BNZ       0x4ad4                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ad0   0e01     MOVLW     0x1            			Rx_1_Queue_Empty = TRUE;                                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ad2   6fd2     MOVWF     0xd2,0x1                                                                                        
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// okay, we're done using Rx_1_Queue_Write_Index, so turn the serial port      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// interrupt back on.                                                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ad4   8a9d     BSF       0x9d,0x5,0x0   		PIE1bits.RC1IE = 1;                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                            		// Since we've just removed a byte to the queue, it can't possibly be full.   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ad6   6bd1     CLRF      0xd1,0x1       		Rx_1_Queue_Full = FALSE;                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// return the data                                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ad8   50df     MOVF      0xdf,0x0,0x0   		return(byte);                                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ada   d000     BRA       0x4adc                                                                                          
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004adc   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ade   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004ae0   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004ae2   ffd9                                                                                                               
004ae4   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	FUNCTION:		Read_Serial_Port_Two()                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PURPOSE:		                                                                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	COMMENTS:		This function will not be included in the build unless              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX is #define'd in serial_ports.h 		                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ae6   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Read_Serial_Port_Two(void)                                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ae8   ffe6                                                                                                               
004aea   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004aec   ffd9                                                                                                               
004aee   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	unsigned char byte;                                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004af0   0101     MOVLB     0x1            	if(Rx_2_Queue_Empty)                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004af2   51de     MOVF      0xde,0x0,0x1                                                                                    
004af4   e003     BZ        0x4afc                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// error: no data to read                                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
004af6   0e00     MOVLW     0x0            		return(0);                                                                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
004af8   d017     BRA       0x4b28                                                                                          
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004afa   d016     BRA       0x4b28         	else                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// get a byte from the circular queue and store it temporarily                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
004afc   51df     MOVF      0xdf,0x0,0x1   		byte = Rx_2_Queue[Rx_2_Queue_Read_Index];                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
004afe   6aea     CLRF      0xea,0x0                                                                                        
004b00   0f40     ADDLW     0x40                                                                                            
004b02   6ee9     MOVWF     0xe9,0x0                                                                                        
004b04   0e01     MOVLW     0x1                                                                                             
004b06   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004b08   cfef     MOVFF     0xfef,0xfdf                                                                                     
004b0a   ffdf                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// decrement the queue byte count                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b0c   07e1     DECF      0xe1,0x1,0x1   		Rx_2_Queue_Byte_Count--;                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// increment the read pointer                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b0e   2bdf     INCF      0xdf,0x1,0x1   		Rx_2_Queue_Read_Index++;                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b10   0e1f     MOVLW     0x1f           		Rx_2_Queue_Read_Index &= RX_2_QUEUE_INDEX_MASK;                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b12   17df     ANDWF     0xdf,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// since we're about to use the Rx_2_Queue_Write_Index variable, which can     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// also be modified in the interrupt service routine, let's briefly disable    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// the serial port interrupt to make sure that Rx_2_Queue_Write_Index doesn't  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// get altered while we're using it.                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b14   9aa3     BCF       0xa3,0x5,0x0   		PIE3bits.RC2IE = 0;                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b16   51e0     MOVF      0xe0,0x0,0x1   		if(Rx_2_Queue_Read_Index == Rx_2_Queue_Write_Index)                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b18   5ddf     SUBWF     0xdf,0x0,0x1                                                                                    
004b1a   e102     BNZ       0x4b20                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b1c   0e01     MOVLW     0x1            			Rx_2_Queue_Empty = TRUE;                                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b1e   6fde     MOVWF     0xde,0x1                                                                                        
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// okay, we're done using Rx_2_Queue_Write_Index, so turn the serial port      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// interrupt back on.                                                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b20   8aa3     BSF       0xa3,0x5,0x0   		PIE3bits.RC2IE = 1;                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                            		// Since we've just removed a byte to the queue, it can't possibly be full.   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b22   6bdd     CLRF      0xdd,0x1       		Rx_2_Queue_Full = FALSE;                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// return the data                                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b24   50df     MOVF      0xdf,0x0,0x0   		return(byte);                                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b26   d000     BRA       0x4b28                                                                                          
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b28   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b2a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004b2c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004b2e   ffd9                                                                                                               
004b30   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	FUNCTION:		Write_Serial_Port_One()                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PURPOSE:		Sends a byte of data using serial port one.                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PARAMETERS:		unsigned char                                                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	RETURNS:		nothing                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	COMMENTS:		If you don't initialize the serial port before calling              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					this function, the robot controller will stop functioning                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					and you'll get the much dreaded red-light-of-death. This                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					is because the while() statement below is waiting for the                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					transmit circuitry to send another byte, but if the serial                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					port hasn't been configured, nothing will be transmitted                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					and we'll be stuck in the while() loop.                                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_TX is #define'd in serial_ports.h                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_TX                                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b32   cfd9     MOVFF     0xfd9,0xfe6    void Write_Serial_Port_One(unsigned char byte)                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b34   ffe6                                                                                                               
004b36   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004b38   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// if the queue is full, wait here until space is available                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b3a   0101     MOVLB     0x1            	while(Tx_1_Queue_Full);                                                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b3c   51d8     MOVF      0xd8,0x0,0x1                                                                                    
004b3e   e001     BZ        0x4b42                                                                                          
004b40   d7fc     BRA       0x4b3a                                                                                          
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// put the byte on the circular queue                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b42   51db     MOVF      0xdb,0x0,0x1   	Tx_1_Queue[Tx_1_Queue_Write_Index] = byte;                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b44   6aea     CLRF      0xea,0x0                                                                                        
004b46   0f20     ADDLW     0x20                                                                                            
004b48   6ee9     MOVWF     0xe9,0x0                                                                                        
004b4a   0e01     MOVLW     0x1                                                                                             
004b4c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004b4e   0efe     MOVLW     0xfe                                                                                            
004b50   cfdb     MOVFF     0xfdb,0xfef                                                                                     
004b52   ffef                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// increment the queue byte count                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b54   2bdc     INCF      0xdc,0x1,0x1   	Tx_1_Queue_Byte_Count++;                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// increment the write pointer                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b56   2bdb     INCF      0xdb,0x1,0x1   	Tx_1_Queue_Write_Index++;                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// If the index pointer overflowed, cut-off the high-order bit. Doing this      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// every time is quicker than checking for overflow every time with an if()     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// statement and only then occasionally setting it back to zero. For this       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b58   0e1f     MOVLW     0x1f           	Tx_1_Queue_Write_Index &= TX_1_QUEUE_INDEX_MASK;                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b5a   17db     ANDWF     0xdb,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// since we're about to use the Tx_1_Queue_Write_Index variable, which can      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// also be modified in the interrupt service routine, let's briefly disable     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// the serial port interrupt to make sure that Tx_1_Queue_Write_Index doesn't   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// get altered while we're using it.                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b5c   989d     BCF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 0;                                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// is the circular queue now full?                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b5e   51db     MOVF      0xdb,0x0,0x1   	if(Tx_1_Queue_Read_Index == Tx_1_Queue_Write_Index)                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b60   5dda     SUBWF     0xda,0x0,0x1                                                                                    
004b62   e102     BNZ       0x4b68                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b64   0e01     MOVLW     0x1            		Tx_1_Queue_Full = TRUE;                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b66   6fd8     MOVWF     0xd8,0x1                                                                                        
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// okay, we're done using Tx_Queue_Write_Index, so turn the serial port         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// interrupt back on.                                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b68   889d     BSF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 1;                                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// Since we've just added a byte to the queue, it can't possibly be empty.      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// Again, this is quicker than using an if() statement every time               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b6a   6bd9     CLRF      0xd9,0x1       	Tx_1_Queue_Empty = FALSE;                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b6c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b6e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004b70   ffd9                                                                                                               
004b72   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	FUNCTION:		Write_Serial_Port_Two()                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PURPOSE:		Sends a byte of data using serial port two.                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PARAMETERS:		unsigned char                                                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	RETURNS:		nothing                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	COMMENTS:		If you don't initialize the serial port before calling              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					this function, the robot controller will stop functioning                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					and you'll get the much dreaded red-light-of-death. This                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					is because the while() statement below is waiting for the                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					transmit circuitry to send another byte, but if the serial                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					port hasn't been configured, nothing will be transmitted                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					and we'll be stuck in the while() loop.                                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_TX is #define'd in serial_ports.h                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_TX                                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b74   cfd9     MOVFF     0xfd9,0xfe6    void Write_Serial_Port_Two(unsigned char byte)                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b76   ffe6                                                                                                               
004b78   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004b7a   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// if the queue is full, wait here until space is available                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b7c   0101     MOVLB     0x1            	while(Tx_2_Queue_Full);                                                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b7e   51e4     MOVF      0xe4,0x0,0x1                                                                                    
004b80   e001     BZ        0x4b84                                                                                          
004b82   d7fc     BRA       0x4b7c                                                                                          
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// put the byte on the circular queue                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b84   51e7     MOVF      0xe7,0x0,0x1   	Tx_2_Queue[Tx_2_Queue_Write_Index] = byte;                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b86   6aea     CLRF      0xea,0x0                                                                                        
004b88   0f60     ADDLW     0x60                                                                                            
004b8a   6ee9     MOVWF     0xe9,0x0                                                                                        
004b8c   0e01     MOVLW     0x1                                                                                             
004b8e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004b90   0efe     MOVLW     0xfe                                                                                            
004b92   cfdb     MOVFF     0xfdb,0xfef                                                                                     
004b94   ffef                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// increment the queue byte count                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b96   2be8     INCF      0xe8,0x1,0x1   	Tx_2_Queue_Byte_Count++;                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// increment the write pointer                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b98   2be7     INCF      0xe7,0x1,0x1   	Tx_2_Queue_Write_Index++;                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// If the index pointer overflowed, cut-off the high-order bit. Doing this      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// every time is quicker than checking for overflow every time with an if()     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// statement and only then occasionally setting it back to zero. For this       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b9a   0e1f     MOVLW     0x1f           	Tx_2_Queue_Write_Index &= TX_2_QUEUE_INDEX_MASK;                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b9c   17e7     ANDWF     0xe7,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// since we're about to use the Tx_2_Queue_Write_Index variable, which can      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// also be modified in the interrupt service routine, let's briefly disable     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// the serial port interrupt to make sure that Tx_2_Queue_Write_Index doesn't   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// get altered while we're using it.                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004b9e   98a3     BCF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 0;                                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// is the circular queue now full?                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ba0   51e7     MOVF      0xe7,0x0,0x1   	if(Tx_2_Queue_Read_Index == Tx_2_Queue_Write_Index)                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ba2   5de6     SUBWF     0xe6,0x0,0x1                                                                                    
004ba4   e102     BNZ       0x4baa                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ba6   0e01     MOVLW     0x1            		Tx_2_Queue_Full = TRUE;                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ba8   6fe4     MOVWF     0xe4,0x1                                                                                        
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// okay, we're done using Tx_2_Queue_Write_Index, so turn the serial port       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// interrupt back on.                                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
004baa   88a3     BSF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 1;                                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// Since we've just added a byte to the queue, it can't possibly be empty.      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	// Again, this is quicker than using an if() statement every time               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bac   6be5     CLRF      0xe5,0x1       	Tx_2_Queue_Empty = FALSE;                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bae   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bb0   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004bb2   ffd9                                                                                                               
004bb4   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	FUNCTION:		Rx_1_Int_Handler()                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PURPOSE:		Serial port one new data interrupt handler.                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					function will be called every time a new byte of data                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					is received by serial port one.                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX is #define'd in serial_ports.h		                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           void Rx_1_Int_Handler(void)                                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bb6   0101     MOVLB     0x1            	if(Rx_1_Queue_Full)                                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bb8   51d1     MOVF      0xd1,0x0,0x1                                                                                    
004bba   e002     BZ        0x4bc0                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// just turn off the serial port interrupt if we can't store any more data.    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// the interrupt will be re-enabled within the Receive_Byte() function when    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// more data is read.                                                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bbc   9a9d     BCF       0x9d,0x5,0x0   		PIE1bits.RC1IE = 0;                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bbe   d019     BRA       0x4bf2         	else                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// put the byte on the circular queue                                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bc0   51d4     MOVF      0xd4,0x0,0x1   		Rx_1_Queue[Rx_1_Queue_Write_Index] = RCREG1;                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bc2   6aea     CLRF      0xea,0x0                                                                                        
004bc4   0f00     ADDLW     0x0                                                                                             
004bc6   6ee9     MOVWF     0xe9,0x0                                                                                        
004bc8   0e01     MOVLW     0x1                                                                                             
004bca   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004bcc   cfae     MOVFF     0xfae,0xfef                                                                                     
004bce   ffef                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// if the interrupt handler was disabled while data was being received,        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// data may have backed-up in the receiver circuitry, causing an overrun       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// condition. So let's check the OERR bit to see if this has happened          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// and if it has, we'll need to reset the serial port receiver circuitry       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// to get data flowing again.                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bd0   a2ab     BTFSS     0xab,0x1,0x0   		if(RCSTA1bits.OERR)                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bd2   d003     BRA       0x4bda                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           			// reset by turning off the receiver circuitry, then...                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bd4   98ab     BCF       0xab,0x4,0x0   			RCSTA1bits.CREN = 0;                                                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           			                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           			// ...turn it back on                                                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bd6   88ab     BSF       0xab,0x4,0x0   			RCSTA1bits.CREN = 1;                                                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           			// indicate that we've had an error                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bd8   2bd6     INCF      0xd6,0x1,0x1   			RX_1_Overrun_Errors++;                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// if incoming data gets misaligned and the receiver doesn't receive a         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// stop bit where it expects to detect it, the receiver circuitry will         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// set the FERR bit to indicate that it's received corrupted data. The         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// likely reason for this is an incorrectly set baud rate on either the        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// receiver or transmitter end.                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bda   b4ab     BTFSC     0xab,0x2,0x0   		if(RCSTA1bits.FERR)                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bdc   2bd7     INCF      0xd7,0x1,0x1   			RX_1_Framing_Errors++;                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// increment the queue byte count                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bde   2bd5     INCF      0xd5,0x1,0x1   		Rx_1_Queue_Byte_Count++;                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// increment the write pointer                                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
004be0   2bd4     INCF      0xd4,0x1,0x1   		Rx_1_Queue_Write_Index++;                                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\code\2008\Fresh Copy - 2008\serial_ports.c
004be2   0e1f     MOVLW     0x1f           		Rx_1_Queue_Write_Index &= RX_1_QUEUE_INDEX_MASK;                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004be4   17d4     ANDWF     0xd4,0x1,0x1                                                                                    
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// is the circular queue now full?                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
004be6   51d4     MOVF      0xd4,0x0,0x1   		if(Rx_1_Queue_Read_Index == Rx_1_Queue_Write_Index)                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004be8   5dd3     SUBWF     0xd3,0x0,0x1                                                                                    
004bea   e102     BNZ       0x4bf0                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bec   0e01     MOVLW     0x1            			Rx_1_Queue_Full = TRUE;                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bee   6fd1     MOVWF     0xd1,0x1                                                                                        
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// Since we've just added a byte to the queue, it can't possibly be empty.     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bf0   6bd2     CLRF      0xd2,0x1       		Rx_1_Queue_Empty = FALSE;                                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bf2   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	FUNCTION:		Rx_2_Int_Handler()                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PURPOSE:		Serial port two new data interrupt handler.		                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					function will be called every time a new byte of data                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					is received by serial port two.                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX is #define'd in serial_ports.h 		                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           void Rx_2_Int_Handler(void)                                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bf4   0101     MOVLB     0x1            	if(Rx_2_Queue_Full)                                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bf6   51dd     MOVF      0xdd,0x0,0x1                                                                                    
004bf8   e002     BZ        0x4bfe                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// just turn off the serial port interrupt if we can't store any more data.    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// the interrupt will be re-enabled within the Receive_Byte() function when    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// more data is read.                                                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bfa   9aa3     BCF       0xa3,0x5,0x0   		PIE3bits.RC2IE = 0;                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bfc   d019     BRA       0x4c30         	else                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// put the byte on the circular queue                                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
004bfe   51e0     MOVF      0xe0,0x0,0x1   		Rx_2_Queue[Rx_2_Queue_Write_Index] = RCREG2;                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c00   6aea     CLRF      0xea,0x0                                                                                        
004c02   0f40     ADDLW     0x40                                                                                            
004c04   6ee9     MOVWF     0xe9,0x0                                                                                        
004c06   0e01     MOVLW     0x1                                                                                             
004c08   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004c0a   cf6e     MOVFF     0xf6e,0xfef                                                                                     
004c0c   ffef                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// if the interrupt handler was disabled while data was being received,        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// data may have backed-up in the receiver circuitry, causing an overrun       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// condition. So let's check the OERR bit to see if this has happened          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// and if it has, we'll need to reset the serial port receiver circuitry       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// to get data flowing again.                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c0e   a26b     BTFSS     0x6b,0x1,0x0   		if(RCSTA2bits.OERR)                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c10   d003     BRA       0x4c18                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           			// reset by turning off the receiver circuitry, then...                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c12   986b     BCF       0x6b,0x4,0x0   			RCSTA2bits.CREN = 0;                                                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           			                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           			// ...turn it back on                                                         C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c14   886b     BSF       0x6b,0x4,0x0   			RCSTA2bits.CREN = 1;                                                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           			// indicate that we've had an error                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c16   2be2     INCF      0xe2,0x1,0x1   			RX_2_Overrun_Errors++;                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// if incoming data gets misaligned and the receiver doesn't receive a         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// stop bit where it expects to detect it, the receiver circuitry will         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// set the FERR bit to indicate that it's received corrupted data. The         C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// likely reason for this is an incorrectly set baud rate on either the        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// receiver or transmitter end.                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c18   b46b     BTFSC     0x6b,0x2,0x0   		if(RCSTA2bits.FERR)                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c1a   2be3     INCF      0xe3,0x1,0x1   			RX_2_Framing_Errors++;                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// increment the queue byte count                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c1c   2be1     INCF      0xe1,0x1,0x1   		Rx_2_Queue_Byte_Count++;                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// increment the write pointer                                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c1e   2be0     INCF      0xe0,0x1,0x1   		Rx_2_Queue_Write_Index++;                                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c20   0e1f     MOVLW     0x1f           		Rx_2_Queue_Write_Index &= RX_2_QUEUE_INDEX_MASK;                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c22   17e0     ANDWF     0xe0,0x1,0x1                                                                                    
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// is the circular queue now full?                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c24   51e0     MOVF      0xe0,0x0,0x1   		if(Rx_2_Queue_Read_Index == Rx_2_Queue_Write_Index)                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c26   5ddf     SUBWF     0xdf,0x0,0x1                                                                                    
004c28   e102     BNZ       0x4c2e                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c2a   0e01     MOVLW     0x1            			Rx_2_Queue_Full = TRUE;                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c2c   6fdd     MOVWF     0xdd,0x1                                                                                        
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// Since we've just added a byte to the queue, it can't possibly be empty.     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c2e   6bde     CLRF      0xde,0x1       		Rx_2_Queue_Empty = FALSE;                                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c30   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	FUNCTION:		Tx_1_Int_Handler()                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PURPOSE:		Serial port one empty transmit buffer interrupt handler.             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					function will be called every time serial port one is                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					ready to start sending a byte of data.                                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_TX is #define'd in serial_ports.h 		                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_TX                                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           void Tx_1_Int_Handler(void)                                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c32   0101     MOVLB     0x1            	if(Tx_1_Queue_Empty)                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c34   51d9     MOVF      0xd9,0x0,0x1                                                                                    
004c36   e002     BZ        0x4c3c                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// just turn off the serial port interrupt if we don't have data to send.      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// the interrupt will be re-enabled within the Send_Byte() function when       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// more data is sent.                                                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c38   989d     BCF       0x9d,0x4,0x0   		PIE1bits.TX1IE = 0;                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c3a   d012     BRA       0x4c60         	else                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// get a byte from the circular queue and send it to the USART                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c3c   51da     MOVF      0xda,0x0,0x1   		TXREG1 = Tx_1_Queue[Tx_1_Queue_Read_Index];                                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c3e   6aea     CLRF      0xea,0x0                                                                                        
004c40   0f20     ADDLW     0x20                                                                                            
004c42   6ee9     MOVWF     0xe9,0x0                                                                                        
004c44   0e01     MOVLW     0x1                                                                                             
004c46   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004c48   50ef     MOVF      0xef,0x0,0x0                                                                                    
004c4a   6ead     MOVWF     0xad,0x0                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// decrement the queue byte count                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c4c   07dc     DECF      0xdc,0x1,0x1   		Tx_1_Queue_Byte_Count--;                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// increment the read pointer                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c4e   2bda     INCF      0xda,0x1,0x1   		Tx_1_Queue_Read_Index++;                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c50   0e1f     MOVLW     0x1f           		Tx_1_Queue_Read_Index &= TX_1_QUEUE_INDEX_MASK;                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c52   17da     ANDWF     0xda,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c54   51db     MOVF      0xdb,0x0,0x1   		if(Tx_1_Queue_Read_Index == Tx_1_Queue_Write_Index)                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c56   5dda     SUBWF     0xda,0x0,0x1                                                                                    
004c58   e102     BNZ       0x4c5e                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c5a   0e01     MOVLW     0x1            			Tx_1_Queue_Empty = TRUE;                                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c5c   6fd9     MOVWF     0xd9,0x1                                                                                        
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                            		// Since we've just removed a byte from the queue, it can't possibly be full. C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c5e   6bd8     CLRF      0xd8,0x1       		Tx_1_Queue_Full = FALSE;                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c60   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	FUNCTION:		Tx_2_Int_Handler()                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PURPOSE:		Serial port two empty transmit buffer interrupt handler.		           C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					function will be called every time serial port two is                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					ready to start sending a byte of data.                                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_TX is #define'd in serial_ports.h 			               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_TX                                                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           void Tx_2_Int_Handler(void)                                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c62   0101     MOVLB     0x1            	if(Tx_2_Queue_Empty)                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c64   51e5     MOVF      0xe5,0x0,0x1                                                                                    
004c66   e002     BZ        0x4c6c                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// just turn off the serial port interrupt if we don't have data to send.      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// the interrupt will be re-enabled within the Send_Byte() function when       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// more data is sent.                                                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c68   98a3     BCF       0xa3,0x4,0x0   		PIE3bits.TX2IE = 0;                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c6a   d012     BRA       0x4c90         	else                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// get a byte from the circular queue and send it to the USART                 C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c6c   51e6     MOVF      0xe6,0x0,0x1   		TXREG2 = Tx_2_Queue[Tx_2_Queue_Read_Index];                                    C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c6e   6aea     CLRF      0xea,0x0                                                                                        
004c70   0f60     ADDLW     0x60                                                                                            
004c72   6ee9     MOVWF     0xe9,0x0                                                                                        
004c74   0e01     MOVLW     0x1                                                                                             
004c76   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004c78   50ef     MOVF      0xef,0x0,0x0                                                                                    
004c7a   6e6d     MOVWF     0x6d,0x0                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// decrement the queue byte count                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c7c   07e8     DECF      0xe8,0x1,0x1   		Tx_2_Queue_Byte_Count--;                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// increment the read pointer                                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c7e   2be6     INCF      0xe6,0x1,0x1   		Tx_2_Queue_Read_Index++;                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c80   0e1f     MOVLW     0x1f           		Tx_2_Queue_Read_Index &= TX_2_QUEUE_INDEX_MASK;                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c82   17e6     ANDWF     0xe6,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c84   51e7     MOVF      0xe7,0x0,0x1   		if(Tx_2_Queue_Read_Index == Tx_2_Queue_Write_Index)                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c86   5de6     SUBWF     0xe6,0x0,0x1                                                                                    
004c88   e102     BNZ       0x4c8e                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c8a   0e01     MOVLW     0x1            			Tx_2_Queue_Empty = TRUE;                                                      C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c8c   6fe5     MOVWF     0xe5,0x1                                                                                        
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                            		// Since we've just removed a byte from the queue, it can't possibly be full. C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c8e   6be4     CLRF      0xe4,0x1       		Tx_2_Queue_Full = FALSE;                                                       C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c90   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	FUNCTION:		_user_putc()                                                        C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PURPOSE:		putc() interface to C18 2.4 output stream functions		                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *	COMMENTS:			                                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c92   cfd9     MOVFF     0xfd9,0xfe6    void _user_putc(unsigned char byte)                                              C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c94   ffe6                                                                                                               
004c96   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004c98   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c9a   0101     MOVLB     0x1            	if(stdout_serial_port == NUL)                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
004c9c   51d0     MOVF      0xd0,0x0,0x1                                                                                    
004c9e   e101     BNZ       0x4ca2                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// send the data to the bit bucket                                             C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_ONE_TX                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ca0   d010     BRA       0x4cc2         	else if(stdout_serial_port == SERIAL_PORT_ONE)                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ca2   05d0     DECF      0xd0,0x0,0x1                                                                                    
004ca4   e106     BNZ       0x4cb2                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// send the data to serial port one                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ca6   0efe     MOVLW     0xfe           		Write_Serial_Port_One(byte);                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
004ca8   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004caa   ffe6                                                                                                               
004cac   df42     RCALL     0x4b32                                                                                          
004cae   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	#endif                                                                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_TWO_TX                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004cb0   d008     BRA       0x4cc2         	else if(stdout_serial_port == SERIAL_PORT_TWO)                                  C:\code\2008\Fresh Copy - 2008\serial_ports.c
004cb2   0e02     MOVLW     0x2                                                                                             
004cb4   5dd0     SUBWF     0xd0,0x0,0x1                                                                                    
004cb6   e105     BNZ       0x4cc2                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           		// send the data to serial port two                                            C:\code\2008\Fresh Copy - 2008\serial_ports.c
004cb8   0efe     MOVLW     0xfe           		Write_Serial_Port_Two(byte);                                                   C:\code\2008\Fresh Copy - 2008\serial_ports.c
004cba   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004cbc   ffe6                                                                                                               
004cbe   df5a     RCALL     0x4b74                                                                                          
004cc0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\serial_ports.c
                                           	#endif                                                                          C:\code\2008\Fresh Copy - 2008\serial_ports.c
004cc2   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\serial_ports.c
004cc4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004cc6   ffd9                                                                                                               
004cc8   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *	TITLE:		terminal.c                                                             C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *	VERSION:	0.2 (Beta)                                                            C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *	DATE:		21-Feb-2006                                                             C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *	COMMENTS:	You are free to use this source code for any non-commercial          C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *				use. Please do not make copies of this source code, modified                C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *				or un-modified, publicly available on the internet or elsewhere             C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *				without permission. Thanks.                                                 C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *				Copyright ©2005-2007 R. Kevin Watson. All rights are reserved.              C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\terminal.c
                                           ******************************************************************************** C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *	CHANGE LOG:                                                                    C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *	25-Nov-2005  0.1  RKW - Original code.                                         C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *	21-Feb-2006  0.2  RKW - Added "no camera data" diagnostic information.         C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\terminal.c
                                           #include <stdio.h>                                                               C:\code\2008\Fresh Copy - 2008\terminal.c
                                           #include "ifi_aliases.h"                                                         C:\code\2008\Fresh Copy - 2008\terminal.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Fresh Copy - 2008\terminal.c
                                           #include "camera.h"                                                              C:\code\2008\Fresh Copy - 2008\terminal.c
                                           #include "tracking.h"                                                            C:\code\2008\Fresh Copy - 2008\terminal.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\terminal.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *	FUNCTION:		Tracking_Info_Terminal()                                            C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *	PURPOSE:		This function is designed to send tracking information               C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *					to a terminal attached to your robot controller's                          C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *					programming port.                                                          C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *	CALLED FROM:	user_routines.c/Process_Data_From_Master_uP()                     C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *	PARAMETERS:		none                                                              C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *	RETURNS:		nothing                                                              C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *	COMMENTS:		This code assumes that the terminal serial port is                  C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *					properly set in camera.h                                                   C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\terminal.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\terminal.c
                                           void Tracking_Info_Terminal(void)                                                C:\code\2008\Fresh Copy - 2008\terminal.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\terminal.c
                                           	static unsigned char i = 0;                                                     C:\code\2008\Fresh Copy - 2008\terminal.c
                                           	static unsigned char j = 0;                                                     C:\code\2008\Fresh Copy - 2008\terminal.c
                                           	static unsigned int old_camera_t_packets = 0;                                   C:\code\2008\Fresh Copy - 2008\terminal.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\terminal.c
                                           	// has a new camera tracking packet arrived since we last checked?              C:\code\2008\Fresh Copy - 2008\terminal.c
004cca   0102     MOVLB     0x2            	if(camera_t_packets != old_camera_t_packets)                                    C:\code\2008\Fresh Copy - 2008\terminal.c
004ccc   51d2     MOVF      0xd2,0x0,0x1                                                                                    
004cce   0102     MOVLB     0x2                                                                                             
004cd0   19ae     XORWF     0xae,0x0,0x1                                                                                    
004cd2   e104     BNZ       0x4cdc                                                                                          
004cd4   0102     MOVLB     0x2                                                                                             
004cd6   51d3     MOVF      0xd3,0x0,0x1                                                                                    
004cd8   0102     MOVLB     0x2                                                                                             
004cda   19af     XORWF     0xaf,0x0,0x1                                                                                    
004cdc   e101     BNZ       0x4ce0                                                                                          
004cde   d0f8     BRA       0x4ed0                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\terminal.c
                                           		// increment the t-packet counter                                              C:\code\2008\Fresh Copy - 2008\terminal.c
004ce0   0102     MOVLB     0x2            		i++;                                                                           C:\code\2008\Fresh Copy - 2008\terminal.c
004ce2   2bd0     INCF      0xd0,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\terminal.c
                                           		// reset the "no camera data" loop counter                                     C:\code\2008\Fresh Copy - 2008\terminal.c
004ce4   6bd1     CLRF      0xd1,0x1       		j = 0;                                                                         C:\code\2008\Fresh Copy - 2008\terminal.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\terminal.c
                                           		// only show data on every twenty t-packets                                    C:\code\2008\Fresh Copy - 2008\terminal.c
004ce6   0e14     MOVLW     0x14           		if(i >= 20)                                                                    C:\code\2008\Fresh Copy - 2008\terminal.c
004ce8   5dd0     SUBWF     0xd0,0x0,0x1                                                                                    
004cea   e201     BC        0x4cee                                                                                          
004cec   d0f0     BRA       0x4ece                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\terminal.c
                                           			// reset the local t-packet counter                                           C:\code\2008\Fresh Copy - 2008\terminal.c
004cee   6bd0     CLRF      0xd0,0x1       			i = 0;                                                                        C:\code\2008\Fresh Copy - 2008\terminal.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\terminal.c
                                           			// does the camera have a tracking solution?                                  C:\code\2008\Fresh Copy - 2008\terminal.c
004cf0   ec17     CALL      0x362e,0x0     			if(Get_Tracking_State() == SEARCHING)                                         C:\code\2008\Fresh Copy - 2008\terminal.c
004cf2   f01b                                                                                                               
004cf4   0900     IORLW     0x0                                                                                             
004cf6   e111     BNZ       0x4d1a                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\terminal.c
004cf8   0ebd     MOVLW     0xbd           				printf("Searching...\r\n");                                                  C:\code\2008\Fresh Copy - 2008\terminal.c
004cfa   6e00     MOVWF     0x0,0x0                                                                                         
004cfc   0e4f     MOVLW     0x4f                                                                                            
004cfe   6e01     MOVWF     0x1,0x0                                                                                         
004d00   6a02     CLRF      0x2,0x0                                                                                         
004d02   c000     MOVFF     0x0,0xfe6                                                                                       
004d04   ffe6                                                                                                               
004d06   c001     MOVFF     0x1,0xfe6                                                                                       
004d08   ffe6                                                                                                               
004d0a   c002     MOVFF     0x2,0xfe6                                                                                       
004d0c   ffe6                                                                                                               
004d0e   ecb5     CALL      0x576a,0x0                                                                                      
004d10   f02b                                                                                                               
004d12   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004d14   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004d16   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\terminal.c
004d18   d0da     BRA       0x4ece         			else                                                                          C:\code\2008\Fresh Copy - 2008\terminal.c
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\terminal.c
004d1a   0eba     MOVLW     0xba           				printf("\r\n");                                                              C:\code\2008\Fresh Copy - 2008\terminal.c
004d1c   6e00     MOVWF     0x0,0x0                                                                                         
004d1e   0e4f     MOVLW     0x4f                                                                                            
004d20   6e01     MOVWF     0x1,0x0                                                                                         
004d22   6a02     CLRF      0x2,0x0                                                                                         
004d24   c000     MOVFF     0x0,0xfe6                                                                                       
004d26   ffe6                                                                                                               
004d28   c001     MOVFF     0x1,0xfe6                                                                                       
004d2a   ffe6                                                                                                               
004d2c   c002     MOVFF     0x2,0xfe6                                                                                       
004d2e   ffe6                                                                                                               
004d30   ecb5     CALL      0x576a,0x0                                                                                      
004d32   f02b                                                                                                               
004d34   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004d36   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004d38   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\terminal.c
                                           				// pan angle = ((current pan PWM) - (pan center PWM)) * degrees/pan PWM step C:\code\2008\Fresh Copy - 2008\terminal.c
004d3a   0102     MOVLB     0x2            				printf(" Pan Angle (degrees) = %d\r\n", (((int)PAN_SERVO - 124) * 65)/124);  C:\code\2008\Fresh Copy - 2008\terminal.c
004d3c   5104     MOVF      0x4,0x0,0x1                                                                                     
004d3e   6e00     MOVWF     0x0,0x0                                                                                         
004d40   6a01     CLRF      0x1,0x0                                                                                         
004d42   0e7c     MOVLW     0x7c                                                                                            
004d44   5e00     SUBWF     0x0,0x1,0x0                                                                                     
004d46   0e00     MOVLW     0x0                                                                                             
004d48   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
004d4a   0e41     MOVLW     0x41                                                                                            
004d4c   0201     MULWF     0x1,0x0                                                                                         
004d4e   cff3     MOVFF     0xff3,0x1                                                                                       
004d50   f001                                                                                                               
004d52   0200     MULWF     0x0,0x0                                                                                         
004d54   cff3     MOVFF     0xff3,0x0                                                                                       
004d56   f000                                                                                                               
004d58   50f4     MOVF      0xf4,0x0,0x0                                                                                    
004d5a   2601     ADDWF     0x1,0x1,0x0                                                                                     
004d5c   0e7c     MOVLW     0x7c                                                                                            
004d5e   6e46     MOVWF     0x46,0x0                                                                                        
004d60   6a47     CLRF      0x47,0x0                                                                                        
004d62   c000     MOVFF     0x0,0x41                                                                                        
004d64   f041                                                                                                               
004d66   c001     MOVFF     0x1,0x42                                                                                        
004d68   f042                                                                                                               
004d6a   ec5c     CALL      0x54b8,0x0                                                                                      
004d6c   f02a                                                                                                               
004d6e   c041     MOVFF     0x41,0x0                                                                                        
004d70   f000                                                                                                               
004d72   c042     MOVFF     0x42,0x1                                                                                        
004d74   f001                                                                                                               
004d76   c000     MOVFF     0x0,0xfe6                                                                                       
004d78   ffe6                                                                                                               
004d7a   c001     MOVFF     0x1,0xfe6                                                                                       
004d7c   ffe6                                                                                                               
004d7e   0e9e     MOVLW     0x9e                                                                                            
004d80   6e02     MOVWF     0x2,0x0                                                                                         
004d82   0e4f     MOVLW     0x4f                                                                                            
004d84   6e03     MOVWF     0x3,0x0                                                                                         
004d86   6a04     CLRF      0x4,0x0                                                                                         
004d88   c002     MOVFF     0x2,0xfe6                                                                                       
004d8a   ffe6                                                                                                               
004d8c   c003     MOVFF     0x3,0xfe6                                                                                       
004d8e   ffe6                                                                                                               
004d90   c004     MOVFF     0x4,0xfe6                                                                                       
004d92   ffe6                                                                                                               
004d94   ecb5     CALL      0x576a,0x0                                                                                      
004d96   f02b                                                                                                               
004d98   6ef5     MOVWF     0xf5,0x0                                                                                        
004d9a   0e05     MOVLW     0x5                                                                                             
004d9c   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
004d9e   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\terminal.c
                                           				// tilt angle = ((current tilt PWM) - (tilt center PWM)) * degrees/tilt PWM step C:\code\2008\Fresh Copy - 2008\terminal.c
004da0   0102     MOVLB     0x2            				printf("Tilt Angle (degrees) = %d\r\n", (((int)TILT_SERVO - 144) * 25)/50);  C:\code\2008\Fresh Copy - 2008\terminal.c
004da2   5105     MOVF      0x5,0x0,0x1                                                                                     
004da4   6e00     MOVWF     0x0,0x0                                                                                         
004da6   6a01     CLRF      0x1,0x0                                                                                         
004da8   0e90     MOVLW     0x90                                                                                            
004daa   5e00     SUBWF     0x0,0x1,0x0                                                                                     
004dac   0e00     MOVLW     0x0                                                                                             
004dae   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
004db0   0e19     MOVLW     0x19                                                                                            
004db2   0201     MULWF     0x1,0x0                                                                                         
004db4   cff3     MOVFF     0xff3,0x1                                                                                       
004db6   f001                                                                                                               
004db8   0200     MULWF     0x0,0x0                                                                                         
004dba   cff3     MOVFF     0xff3,0x0                                                                                       
004dbc   f000                                                                                                               
004dbe   50f4     MOVF      0xf4,0x0,0x0                                                                                    
004dc0   2601     ADDWF     0x1,0x1,0x0                                                                                     
004dc2   0e32     MOVLW     0x32                                                                                            
004dc4   6e46     MOVWF     0x46,0x0                                                                                        
004dc6   6a47     CLRF      0x47,0x0                                                                                        
004dc8   c000     MOVFF     0x0,0x41                                                                                        
004dca   f041                                                                                                               
004dcc   c001     MOVFF     0x1,0x42                                                                                        
004dce   f042                                                                                                               
004dd0   ec5c     CALL      0x54b8,0x0                                                                                      
004dd2   f02a                                                                                                               
004dd4   c041     MOVFF     0x41,0x0                                                                                        
004dd6   f000                                                                                                               
004dd8   c042     MOVFF     0x42,0x1                                                                                        
004dda   f001                                                                                                               
004ddc   c000     MOVFF     0x0,0xfe6                                                                                       
004dde   ffe6                                                                                                               
004de0   c001     MOVFF     0x1,0xfe6                                                                                       
004de2   ffe6                                                                                                               
004de4   0e82     MOVLW     0x82                                                                                            
004de6   6e02     MOVWF     0x2,0x0                                                                                         
004de8   0e4f     MOVLW     0x4f                                                                                            
004dea   6e03     MOVWF     0x3,0x0                                                                                         
004dec   6a04     CLRF      0x4,0x0                                                                                         
004dee   c002     MOVFF     0x2,0xfe6                                                                                       
004df0   ffe6                                                                                                               
004df2   c003     MOVFF     0x3,0xfe6                                                                                       
004df4   ffe6                                                                                                               
004df6   c004     MOVFF     0x4,0xfe6                                                                                       
004df8   ffe6                                                                                                               
004dfa   ecb5     CALL      0x576a,0x0                                                                                      
004dfc   f02b                                                                                                               
004dfe   6ef5     MOVWF     0xf5,0x0                                                                                        
004e00   0e05     MOVLW     0x5                                                                                             
004e02   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
004e04   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\terminal.c
004e06   0102     MOVLB     0x2            				printf(" Pan Error (Pixels)  = %d\r\n", (int)T_Packet_Data.mx - PAN_TARGET_PIXEL_DEFAULT); C:\code\2008\Fresh Copy - 2008\terminal.c
004e08   5141     MOVF      0x41,0x0,0x1                                                                                    
004e0a   6e00     MOVWF     0x0,0x0                                                                                         
004e0c   6a01     CLRF      0x1,0x0                                                                                         
004e0e   0e4f     MOVLW     0x4f                                                                                            
004e10   5e00     SUBWF     0x0,0x1,0x0                                                                                     
004e12   0e00     MOVLW     0x0                                                                                             
004e14   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
004e16   c000     MOVFF     0x0,0xfe6                                                                                       
004e18   ffe6                                                                                                               
004e1a   c001     MOVFF     0x1,0xfe6                                                                                       
004e1c   ffe6                                                                                                               
004e1e   0e66     MOVLW     0x66                                                                                            
004e20   6e02     MOVWF     0x2,0x0                                                                                         
004e22   0e4f     MOVLW     0x4f                                                                                            
004e24   6e03     MOVWF     0x3,0x0                                                                                         
004e26   6a04     CLRF      0x4,0x0                                                                                         
004e28   c002     MOVFF     0x2,0xfe6                                                                                       
004e2a   ffe6                                                                                                               
004e2c   c003     MOVFF     0x3,0xfe6                                                                                       
004e2e   ffe6                                                                                                               
004e30   c004     MOVFF     0x4,0xfe6                                                                                       
004e32   ffe6                                                                                                               
004e34   ecb5     CALL      0x576a,0x0                                                                                      
004e36   f02b                                                                                                               
004e38   6ef5     MOVWF     0xf5,0x0                                                                                        
004e3a   0e05     MOVLW     0x5                                                                                             
004e3c   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
004e3e   50f5     MOVF      0xf5,0x0,0x0                                                                                    
004e40   0102     MOVLB     0x2            				printf("Tilt Error (Pixels)  = %d\r\n", (int)T_Packet_Data.my - TILT_TARGET_PIXEL_DEFAULT); C:\code\2008\Fresh Copy - 2008\terminal.c
004e42   5142     MOVF      0x42,0x0,0x1                                                                                    
004e44   6e00     MOVWF     0x0,0x0                                                                                         
004e46   6a01     CLRF      0x1,0x0                                                                                         
004e48   0e77     MOVLW     0x77                                                                                            
004e4a   5e00     SUBWF     0x0,0x1,0x0                                                                                     
004e4c   0e00     MOVLW     0x0                                                                                             
004e4e   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
004e50   c000     MOVFF     0x0,0xfe6                                                                                       
004e52   ffe6                                                                                                               
004e54   c001     MOVFF     0x1,0xfe6                                                                                       
004e56   ffe6                                                                                                               
004e58   0e4a     MOVLW     0x4a                                                                                            
004e5a   6e02     MOVWF     0x2,0x0                                                                                         
004e5c   0e4f     MOVLW     0x4f                                                                                            
004e5e   6e03     MOVWF     0x3,0x0                                                                                         
004e60   6a04     CLRF      0x4,0x0                                                                                         
004e62   c002     MOVFF     0x2,0xfe6                                                                                       
004e64   ffe6                                                                                                               
004e66   c003     MOVFF     0x3,0xfe6                                                                                       
004e68   ffe6                                                                                                               
004e6a   c004     MOVFF     0x4,0xfe6                                                                                       
004e6c   ffe6                                                                                                               
004e6e   ecb5     CALL      0x576a,0x0                                                                                      
004e70   f02b                                                                                                               
004e72   6ef5     MOVWF     0xf5,0x0                                                                                        
004e74   0e05     MOVLW     0x5                                                                                             
004e76   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
004e78   50f5     MOVF      0xf5,0x0,0x0                                                                                    
004e7a   0102     MOVLB     0x2            				printf(" Blob Size (Pixels)  = %u\r\n", (unsigned int)T_Packet_Data.pixels); C:\code\2008\Fresh Copy - 2008\terminal.c
004e7c   5147     MOVF      0x47,0x0,0x1                                                                                    
004e7e   6ee6     MOVWF     0xe6,0x0                                                                                        
004e80   6ae6     CLRF      0xe6,0x0                                                                                        
004e82   0e2e     MOVLW     0x2e                                                                                            
004e84   6e00     MOVWF     0x0,0x0                                                                                         
004e86   0e4f     MOVLW     0x4f                                                                                            
004e88   6e01     MOVWF     0x1,0x0                                                                                         
004e8a   6a02     CLRF      0x2,0x0                                                                                         
004e8c   c000     MOVFF     0x0,0xfe6                                                                                       
004e8e   ffe6                                                                                                               
004e90   c001     MOVFF     0x1,0xfe6                                                                                       
004e92   ffe6                                                                                                               
004e94   c002     MOVFF     0x2,0xfe6                                                                                       
004e96   ffe6                                                                                                               
004e98   ecb5     CALL      0x576a,0x0                                                                                      
004e9a   f02b                                                                                                               
004e9c   6ef5     MOVWF     0xf5,0x0                                                                                        
004e9e   0e05     MOVLW     0x5                                                                                             
004ea0   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
004ea2   50f5     MOVF      0xf5,0x0,0x0                                                                                    
004ea4   0102     MOVLB     0x2            				printf("Confidence (Pixels)  = %u\r\n", (unsigned int)T_Packet_Data.confidence); C:\code\2008\Fresh Copy - 2008\terminal.c
004ea6   5148     MOVF      0x48,0x0,0x1                                                                                    
004ea8   6ee6     MOVWF     0xe6,0x0                                                                                        
004eaa   6ae6     CLRF      0xe6,0x0                                                                                        
004eac   0e12     MOVLW     0x12                                                                                            
004eae   6e00     MOVWF     0x0,0x0                                                                                         
004eb0   0e4f     MOVLW     0x4f                                                                                            
004eb2   6e01     MOVWF     0x1,0x0                                                                                         
004eb4   6a02     CLRF      0x2,0x0                                                                                         
004eb6   c000     MOVFF     0x0,0xfe6                                                                                       
004eb8   ffe6                                                                                                               
004eba   c001     MOVFF     0x1,0xfe6                                                                                       
004ebc   ffe6                                                                                                               
004ebe   c002     MOVFF     0x2,0xfe6                                                                                       
004ec0   ffe6                                                                                                               
004ec2   ecb5     CALL      0x576a,0x0                                                                                      
004ec4   f02b                                                                                                               
004ec6   6ef5     MOVWF     0xf5,0x0                                                                                        
004ec8   0e05     MOVLW     0x5                                                                                             
004eca   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
004ecc   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\terminal.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\terminal.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\terminal.c
004ece   d016     BRA       0x4efc         	else                                                                            C:\code\2008\Fresh Copy - 2008\terminal.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\terminal.c
004ed0   0102     MOVLB     0x2            		j++;                                                                           C:\code\2008\Fresh Copy - 2008\terminal.c
004ed2   2bd1     INCF      0xd1,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\terminal.c
                                           		// display a "no camera data" warning if we haven't received                   C:\code\2008\Fresh Copy - 2008\terminal.c
                                           		// a t-packet in 26 loops, which is about 1 second                             C:\code\2008\Fresh Copy - 2008\terminal.c
004ed4   0e1a     MOVLW     0x1a           		if(j >= 26)                                                                    C:\code\2008\Fresh Copy - 2008\terminal.c
004ed6   5dd1     SUBWF     0xd1,0x0,0x1                                                                                    
004ed8   e311     BNC       0x4efc                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\terminal.c
                                           			// reset the "no camera data" loop counter                                    C:\code\2008\Fresh Copy - 2008\terminal.c
004eda   6bd1     CLRF      0xd1,0x1       			j = 0;                                                                        C:\code\2008\Fresh Copy - 2008\terminal.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\terminal.c
004edc   0efe     MOVLW     0xfe           			printf("No camera data...\r\n");                                              C:\code\2008\Fresh Copy - 2008\terminal.c
004ede   6e00     MOVWF     0x0,0x0                                                                                         
004ee0   0e4e     MOVLW     0x4e                                                                                            
004ee2   6e01     MOVWF     0x1,0x0                                                                                         
004ee4   6a02     CLRF      0x2,0x0                                                                                         
004ee6   c000     MOVFF     0x0,0xfe6                                                                                       
004ee8   ffe6                                                                                                               
004eea   c001     MOVFF     0x1,0xfe6                                                                                       
004eec   ffe6                                                                                                               
004eee   c002     MOVFF     0x2,0xfe6                                                                                       
004ef0   ffe6                                                                                                               
004ef2   ecb5     CALL      0x576a,0x0                                                                                      
004ef4   f02b                                                                                                               
004ef6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004ef8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004efa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\terminal.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\terminal.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\terminal.c
004efc   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\terminal.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	TITLE:		tracking.c                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	VERSION:	0.2 (Beta)                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	DATE:		21-Feb-2006                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	COMMENTS:	This is the "streamlined" version of tracking.c                      C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *				You are free to use this source code for any non-commercial                 C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *				use. Please do not make copies of this source code, modified                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *				or un-modified, publicly available on the internet or elsewhere             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *				without permission. Thanks.                                                 C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *				Copyright ©2005-2007 R. Kevin Watson. All rights are reserved.              C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           ******************************************************************************** C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	CHANGE LOG:                                                                    C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	01-Jan-2006  0.1  RKW - Original code.                                         C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	21-Feb-2006  0.2  RKW - Provided two new functions to set the pan and          C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	                  tilt servo position. This was done to provide a level        C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	                  of indirection so that the servos could be commanded         C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	                  from the robot controller or the CMUcam2.                    C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	                  RKW - Fixed bug in search initialization code where          C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	                  temp_pan_servo was initialized to zero instead of            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	                  Tracking_Config_Data.Pan_Min_PWM.                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	                  RKW - Altered tracking algorithm to use the t-packet         C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	                  confidence value to determine whether the code should        C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	                  track or search.                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	                  RKW - Added Get_Tracking_State() function, which can         C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	                  be used to determine if the camera is on target.             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\tracking.c
                                           #include <stdio.h>                                                               C:\code\2008\Fresh Copy - 2008\tracking.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Fresh Copy - 2008\tracking.c
                                           #include "ifi_aliases.h"                                                         C:\code\2008\Fresh Copy - 2008\tracking.c
                                           #include "camera.h"                                                              C:\code\2008\Fresh Copy - 2008\tracking.c
                                           #include "tracking.h"                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           // This variable is used to signal whether or not the camera                     C:\code\2008\Fresh Copy - 2008\tracking.c
                                           // is pointed at the target. See Get_Tracking_State(), below.                    C:\code\2008\Fresh Copy - 2008\tracking.c
                                           unsigned char Tracking_State = STATE_SEARCHING;                                  C:\code\2008\Fresh Copy - 2008\tracking.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	FUNCTION:		Servo_Track()                                                       C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	PURPOSE:		This function reads data placed in the T_Packet_Data                 C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *					structure by the Camera_Handler() function and if new                      C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *					tracking data is available, attempts to keep the center                    C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *					of the tracked object in the center of the camera's                        C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *					image using two servos that drive a pan/tilt platform.                     C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *					If the camera doesn't have the object within it's field                    C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *					of view, this function will execute a search algorithm                     C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *					in an attempt to find the object.		                                        C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	CALLED FROM:	user_routines.c/Process_Data_From_Master_uP()                     C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	COMMENTS:		This version of the tracking code uses a proportional               C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *					feedback controller to track the object.                                   C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\tracking.c
0031ce   cfd9     MOVFF     0xfd9,0xfe6    void Servo_Track(void)                                                           C:\code\2008\Fresh Copy - 2008\tracking.c
0031d0   ffe6                                                                                                               
0031d2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0031d4   ffd9                                                                                                               
0031d6   0e0a     MOVLW     0xa                                                                                             
0031d8   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           	static unsigned char Tracking_Initialized = 0;                                  C:\code\2008\Fresh Copy - 2008\tracking.c
                                           	static unsigned int old_camera_t_packets = 0;                                   C:\code\2008\Fresh Copy - 2008\tracking.c
                                           	static unsigned char new_search = 1;                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           	static unsigned char loop_count = 0;                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           	static unsigned char pan_servo_position;                                        C:\code\2008\Fresh Copy - 2008\tracking.c
                                           	static unsigned char tilt_servo_position;                                       C:\code\2008\Fresh Copy - 2008\tracking.c
                                           	int temp_pan_servo;                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           	int temp_tilt_servo;                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           	int servo_step;                                                                 C:\code\2008\Fresh Copy - 2008\tracking.c
                                           	int pan_error;                                                                  C:\code\2008\Fresh Copy - 2008\tracking.c
                                           	int tilt_error;                                                                 C:\code\2008\Fresh Copy - 2008\tracking.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           	// if needed, initialize the tracking code                                      C:\code\2008\Fresh Copy - 2008\tracking.c
0031da   0102     MOVLB     0x2            	if(Tracking_Initialized == 0)                                                   C:\code\2008\Fresh Copy - 2008\tracking.c
0031dc   51c1     MOVF      0xc1,0x0,0x1                                                                                    
0031de   e10f     BNZ       0x31fe                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\tracking.c
0031e0   0e01     MOVLW     0x1            		Tracking_Initialized = 1;                                                      C:\code\2008\Fresh Copy - 2008\tracking.c
0031e2   6fc1     MOVWF     0xc1,0x1                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           		// get center values for the servos                                            C:\code\2008\Fresh Copy - 2008\tracking.c
0031e4   0102     MOVLB     0x2            		pan_servo_position = PAN_CENTER_PWM_DEFAULT;                                   C:\code\2008\Fresh Copy - 2008\tracking.c
0031e6   0e7c     MOVLW     0x7c                                                                                            
0031e8   6fd8     MOVWF     0xd8,0x1                                                                                        
0031ea   0e90     MOVLW     0x90           		tilt_servo_position = TILT_CENTER_PWM_DEFAULT;                                 C:\code\2008\Fresh Copy - 2008\tracking.c
0031ec   6fd9     MOVWF     0xd9,0x1                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           		// command servos to center position                                           C:\code\2008\Fresh Copy - 2008\tracking.c
0031ee   c2d8     MOVFF     0x2d8,0xfe6    		Set_Pan_Servo_Position(pan_servo_position);                                    C:\code\2008\Fresh Copy - 2008\tracking.c
0031f0   ffe6                                                                                                               
0031f2   da39     RCALL     0x3666                                                                                          
0031f4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0031f6   c2d9     MOVFF     0x2d9,0xfe6    		Set_Tilt_Servo_Position(tilt_servo_position);                                  C:\code\2008\Fresh Copy - 2008\tracking.c
0031f8   ffe6                                                                                                               
0031fa   da40     RCALL     0x367c                                                                                          
0031fc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\tracking.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           	// Has a new camera t-packet arrived since we last checked?                     C:\code\2008\Fresh Copy - 2008\tracking.c
0031fe   0102     MOVLB     0x2            	if(camera_t_packets != old_camera_t_packets)                                    C:\code\2008\Fresh Copy - 2008\tracking.c
003200   51c2     MOVF      0xc2,0x0,0x1                                                                                    
003202   0102     MOVLB     0x2                                                                                             
003204   19ae     XORWF     0xae,0x0,0x1                                                                                    
003206   e104     BNZ       0x3210                                                                                          
003208   0102     MOVLB     0x2                                                                                             
00320a   51c3     MOVF      0xc3,0x0,0x1                                                                                    
00320c   0102     MOVLB     0x2                                                                                             
00320e   19af     XORWF     0xaf,0x0,0x1                                                                                    
003210   e101     BNZ       0x3214                                                                                          
003212   d207     BRA       0x3622                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\tracking.c
003214   c2ae     MOVFF     0x2ae,0x2c2    		old_camera_t_packets = camera_t_packets;                                       C:\code\2008\Fresh Copy - 2008\tracking.c
003216   f2c2                                                                                                               
003218   c2af     MOVFF     0x2af,0x2c3                                                                                     
00321a   f2c3                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           		// Reset the Tracking_State variable to indicate that                          C:\code\2008\Fresh Copy - 2008\tracking.c
                                           		// we're in the searching state. If it turns out the                           C:\code\2008\Fresh Copy - 2008\tracking.c
                                           		// target is in view, Tracking_State will be updated                           C:\code\2008\Fresh Copy - 2008\tracking.c
                                           		// to reflect this below.                                                      C:\code\2008\Fresh Copy - 2008\tracking.c
00321c   0102     MOVLB     0x2            		Tracking_State = SEARCHING;                                                    C:\code\2008\Fresh Copy - 2008\tracking.c
00321e   6bc0     CLRF      0xc0,0x1                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           		// Does the camera have a tracking solution? If so,                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           		// do we need to move the servos to keep the center                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           		// of the tracked object centered within the image?                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           		// If not, we need to drop down below to start or                              C:\code\2008\Fresh Copy - 2008\tracking.c
                                           		// continue a search.                                                          C:\code\2008\Fresh Copy - 2008\tracking.c
003220   0e14     MOVLW     0x14           		if(T_Packet_Data.confidence >= CONFIDENCE_THRESHOLD_DEFAULT)                   C:\code\2008\Fresh Copy - 2008\tracking.c
003222   0102     MOVLB     0x2                                                                                             
003224   5d48     SUBWF     0x48,0x0,0x1                                                                                    
003226   e201     BC        0x322a                                                                                          
003228   d176     BRA       0x3516                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// if we're tracking, reset the search                                        C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// algorithm so that a new search pattern                                     C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// will start should we lose tracking lock                                    C:\code\2008\Fresh Copy - 2008\tracking.c
00322a   0102     MOVLB     0x2            			new_search = 1;                                                               C:\code\2008\Fresh Copy - 2008\tracking.c
00322c   0e01     MOVLW     0x1                                                                                             
00322e   6fc4     MOVWF     0xc4,0x1                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// update Tracking_State to indicate that the target                          C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// is at least in view of the camera                                          C:\code\2008\Fresh Copy - 2008\tracking.c
003230   6fc0     MOVWF     0xc0,0x1       			Tracking_State = TARGET_IN_VIEW;                                              C:\code\2008\Fresh Copy - 2008\tracking.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			////////////////////////////////                                              C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			//                            //                                              C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			//	x-axis/pan tracking code  //                                               C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			//                            //                                              C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			////////////////////////////////                                              C:\code\2008\Fresh Copy - 2008\tracking.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// save the current pan servo PWM value into a local                          C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// integer variable so that we can detect and correct                         C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// underflow and overflow conditions before we update                         C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// the pan servo PWM value with a new value                                   C:\code\2008\Fresh Copy - 2008\tracking.c
003232   0102     MOVLB     0x2            			temp_pan_servo = (int)pan_servo_position;                                     C:\code\2008\Fresh Copy - 2008\tracking.c
003234   51d8     MOVF      0xd8,0x0,0x1                                                                                    
003236   6ede     MOVWF     0xde,0x0                                                                                        
003238   6add     CLRF      0xdd,0x0                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// calculate how many image pixels we're away from the                        C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// vertical center line.                                                      C:\code\2008\Fresh Copy - 2008\tracking.c
00323a   0102     MOVLB     0x2            			pan_error = (int)T_Packet_Data.mx - PAN_TARGET_PIXEL_DEFAULT;                 C:\code\2008\Fresh Copy - 2008\tracking.c
00323c   5141     MOVF      0x41,0x0,0x1                                                                                    
00323e   6e00     MOVWF     0x0,0x0                                                                                         
003240   6a01     CLRF      0x1,0x0                                                                                         
003242   0e4f     MOVLW     0x4f                                                                                            
003244   5e00     SUBWF     0x0,0x1,0x0                                                                                     
003246   0e00     MOVLW     0x0                                                                                             
003248   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
00324a   0e06     MOVLW     0x6                                                                                             
00324c   c000     MOVFF     0x0,0xfdb                                                                                       
00324e   ffdb                                                                                                               
003250   0e07     MOVLW     0x7                                                                                             
003252   c001     MOVFF     0x1,0xfdb                                                                                       
003254   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// Are we too far to the left or right of the vertical                        C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// center line? If so, calculate how far we should step                       C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// the pan servo to reduce the error.                                         C:\code\2008\Fresh Copy - 2008\tracking.c
003256   0e06     MOVLW     0x6            			if(pan_error > PAN_ALLOWABLE_ERROR_DEFAULT)                                   C:\code\2008\Fresh Copy - 2008\tracking.c
003258   cfdb     MOVFF     0xfdb,0x0                                                                                       
00325a   f000                                                                                                               
00325c   0e07     MOVLW     0x7                                                                                             
00325e   cfdb     MOVFF     0xfdb,0x1                                                                                       
003260   f001                                                                                                               
003262   3401     RLCF      0x1,0x0,0x0                                                                                     
003264   e204     BC        0x326e                                                                                          
003266   5000     MOVF      0x0,0x0,0x0                                                                                     
003268   0806     SUBLW     0x6                                                                                             
00326a   0e00     MOVLW     0x0                                                                                             
00326c   5401     SUBFWB    0x1,0x0,0x0                                                                                     
00326e   e225     BC        0x32ba                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// calculate how far we need to step the pan servo                           C:\code\2008\Fresh Copy - 2008\tracking.c
003270   0e03     MOVLW     0x3            				servo_step = pan_error / PAN_GAIN_DEFAULT;                                   C:\code\2008\Fresh Copy - 2008\tracking.c
003272   6e00     MOVWF     0x0,0x0                                                                                         
003274   6a01     CLRF      0x1,0x0                                                                                         
003276   0e06     MOVLW     0x6                                                                                             
003278   cfdb     MOVFF     0xfdb,0x41                                                                                      
00327a   f041                                                                                                               
00327c   0e07     MOVLW     0x7                                                                                             
00327e   cfdb     MOVFF     0xfdb,0x42                                                                                      
003280   f042                                                                                                               
003282   c000     MOVFF     0x0,0x46                                                                                        
003284   f046                                                                                                               
003286   c001     MOVFF     0x1,0x47                                                                                        
003288   f047                                                                                                               
00328a   ec5c     CALL      0x54b8,0x0                                                                                      
00328c   f02a                                                                                                               
00328e   0e04     MOVLW     0x4                                                                                             
003290   c041     MOVFF     0x41,0xfdb                                                                                      
003292   ffdb                                                                                                               
003294   0e05     MOVLW     0x5                                                                                             
003296   c042     MOVFF     0x42,0xfdb                                                                                      
003298   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// Due to rounding error in the division calculation above,                  C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// the step may be calculated as zero, which will make it                    C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// impossible to converge on the target when pan_error is                    C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// smaller than PAN_GAIN_DEFAULT. To get around this problem,                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// we just test for the zero case and set the step size to one.              C:\code\2008\Fresh Copy - 2008\tracking.c
00329a   50d9     MOVF      0xd9,0x0,0x0   				if(servo_step == 0)                                                          C:\code\2008\Fresh Copy - 2008\tracking.c
00329c   0f04     ADDLW     0x4                                                                                             
00329e   6ee9     MOVWF     0xe9,0x0                                                                                        
0032a0   cfda     MOVFF     0xfda,0xfea                                                                                     
0032a2   ffea                                                                                                               
0032a4   50ee     MOVF      0xee,0x0,0x0                                                                                    
0032a6   10ed     IORWF     0xed,0x0,0x0                                                                                    
0032a8   e107     BNZ       0x32b8                                                                                          
                                           				{                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
0032aa   0e01     MOVLW     0x1            					servo_step = 1;                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
0032ac   6ef3     MOVWF     0xf3,0x0                                                                                        
0032ae   0e04     MOVLW     0x4                                                                                             
0032b0   cff3     MOVFF     0xff3,0xfdb                                                                                     
0032b2   ffdb                                                                                                               
0032b4   0e05     MOVLW     0x5                                                                                             
0032b6   6adb     CLRF      0xdb,0x0                                                                                        
                                           				}                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
0032b8   d037     BRA       0x3328         			else if(pan_error < -1 * PAN_ALLOWABLE_ERROR_DEFAULT)                         C:\code\2008\Fresh Copy - 2008\tracking.c
0032ba   0e06     MOVLW     0x6                                                                                             
0032bc   cfdb     MOVFF     0xfdb,0x0                                                                                       
0032be   f000                                                                                                               
0032c0   0e07     MOVLW     0x7                                                                                             
0032c2   cfdb     MOVFF     0xfdb,0x1                                                                                       
0032c4   f001                                                                                                               
0032c6   80d8     BSF       0xd8,0x0,0x0                                                                                    
0032c8   5001     MOVF      0x1,0x0,0x0                                                                                     
0032ca   e704     BNN       0x32d4                                                                                          
0032cc   0efa     MOVLW     0xfa                                                                                            
0032ce   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0032d0   0eff     MOVLW     0xff                                                                                            
0032d2   5801     SUBWFB    0x1,0x0,0x0                                                                                     
0032d4   e222     BC        0x331a                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// calculate how far we need to step the pan servo                           C:\code\2008\Fresh Copy - 2008\tracking.c
0032d6   0e03     MOVLW     0x3            				servo_step = pan_error / PAN_GAIN_DEFAULT;                                   C:\code\2008\Fresh Copy - 2008\tracking.c
0032d8   6e00     MOVWF     0x0,0x0                                                                                         
0032da   6a01     CLRF      0x1,0x0                                                                                         
0032dc   0e06     MOVLW     0x6                                                                                             
0032de   cfdb     MOVFF     0xfdb,0x41                                                                                      
0032e0   f041                                                                                                               
0032e2   0e07     MOVLW     0x7                                                                                             
0032e4   cfdb     MOVFF     0xfdb,0x42                                                                                      
0032e6   f042                                                                                                               
0032e8   c000     MOVFF     0x0,0x46                                                                                        
0032ea   f046                                                                                                               
0032ec   c001     MOVFF     0x1,0x47                                                                                        
0032ee   f047                                                                                                               
0032f0   ec5c     CALL      0x54b8,0x0                                                                                      
0032f2   f02a                                                                                                               
0032f4   0e04     MOVLW     0x4                                                                                             
0032f6   c041     MOVFF     0x41,0xfdb                                                                                      
0032f8   ffdb                                                                                                               
0032fa   0e05     MOVLW     0x5                                                                                             
0032fc   c042     MOVFF     0x42,0xfdb                                                                                      
0032fe   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// Due to rounding error in the division calculation above,                  C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// the step may be calculated as zero, which will make it                    C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// impossible to converge on the target when pan_error is                    C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// smaller than PAN_GAIN_DEFAULT. To get around this problem,                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// we just test for the zero case and set the step size to one               C:\code\2008\Fresh Copy - 2008\tracking.c
003300   50d9     MOVF      0xd9,0x0,0x0   				if(servo_step == 0)                                                          C:\code\2008\Fresh Copy - 2008\tracking.c
003302   0f04     ADDLW     0x4                                                                                             
003304   6ee9     MOVWF     0xe9,0x0                                                                                        
003306   cfda     MOVFF     0xfda,0xfea                                                                                     
003308   ffea                                                                                                               
00330a   50ee     MOVF      0xee,0x0,0x0                                                                                    
00330c   10ed     IORWF     0xed,0x0,0x0                                                                                    
00330e   e104     BNZ       0x3318                                                                                          
                                           				{                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
003310   0e04     MOVLW     0x4            					servo_step = -1;                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
003312   68db     SETF      0xdb,0x0                                                                                        
003314   0e05     MOVLW     0x5                                                                                             
003316   68db     SETF      0xdb,0x0                                                                                        
                                           				}                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
003318   d007     BRA       0x3328         			else                                                                          C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// if we've fallen through to here, it means that we're                      C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// neither too far to the left or too far to the right                       C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// of the vertical center line of the image and don't                        C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// need to move the servo                                                    C:\code\2008\Fresh Copy - 2008\tracking.c
00331a   0e04     MOVLW     0x4            				servo_step = 0;                                                              C:\code\2008\Fresh Copy - 2008\tracking.c
00331c   6adb     CLRF      0xdb,0x0                                                                                        
00331e   0e05     MOVLW     0x5                                                                                             
003320   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// signal that the pan servo is on target                                    C:\code\2008\Fresh Copy - 2008\tracking.c
003322   0e02     MOVLW     0x2            				Tracking_State += STATE_PAN_ON_TARGET;                                       C:\code\2008\Fresh Copy - 2008\tracking.c
003324   0102     MOVLB     0x2                                                                                             
003326   27c0     ADDWF     0xc0,0x1,0x1                                                                                    
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// add the step to the current servo position, taking into                    C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// account the direction set by the user in tracking.h                        C:\code\2008\Fresh Copy - 2008\tracking.c
003328   6841     SETF      0x41,0x0       			temp_pan_servo += (PAN_ROTATION_SIGN_DEFAULT * servo_step);                   C:\code\2008\Fresh Copy - 2008\tracking.c
00332a   6842     SETF      0x42,0x0                                                                                        
00332c   0e04     MOVLW     0x4                                                                                             
00332e   cfdb     MOVFF     0xfdb,0x46                                                                                      
003330   f046                                                                                                               
003332   0e05     MOVLW     0x5                                                                                             
003334   cfdb     MOVFF     0xfdb,0x47                                                                                      
003336   f047                                                                                                               
003338   ecb6     CALL      0x556c,0x0                                                                                      
00333a   f02a                                                                                                               
00333c   c03f     MOVFF     0x3f,0x0                                                                                        
00333e   f000                                                                                                               
003340   c040     MOVFF     0x40,0x1                                                                                        
003342   f001                                                                                                               
003344   cfd9     MOVFF     0xfd9,0xfe9                                                                                     
003346   ffe9                                                                                                               
003348   cfda     MOVFF     0xfda,0xfea                                                                                     
00334a   ffea                                                                                                               
00334c   5000     MOVF      0x0,0x0,0x0                                                                                     
00334e   26ee     ADDWF     0xee,0x1,0x0                                                                                    
003350   5001     MOVF      0x1,0x0,0x0                                                                                     
003352   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// check the pan servo PWM value for under/overflow                           C:\code\2008\Fresh Copy - 2008\tracking.c
003354   cfde     MOVFF     0xfde,0x0      			if(temp_pan_servo < PAN_MIN_PWM_DEFAULT)                                      C:\code\2008\Fresh Copy - 2008\tracking.c
003356   f000                                                                                                               
003358   cfdd     MOVFF     0xfdd,0x1                                                                                       
00335a   f001                                                                                                               
00335c   0100     MOVLB     0x0                                                                                             
00335e   0e80     MOVLW     0x80                                                                                            
003360   1401     ANDWF     0x1,0x0,0x0                                                                                     
003362   e003     BZ        0x336a                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
003364   6ade     CLRF      0xde,0x0       				temp_pan_servo = PAN_MIN_PWM_DEFAULT;                                        C:\code\2008\Fresh Copy - 2008\tracking.c
003366   6add     CLRF      0xdd,0x0                                                                                        
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
003368   d00e     BRA       0x3386         			else if(temp_pan_servo > PAN_MAX_PWM_DEFAULT)                                 C:\code\2008\Fresh Copy - 2008\tracking.c
00336a   cfde     MOVFF     0xfde,0x0                                                                                       
00336c   f000                                                                                                               
00336e   cfdd     MOVFF     0xfdd,0x1                                                                                       
003370   f001                                                                                                               
003372   3401     RLCF      0x1,0x0,0x0                                                                                     
003374   e204     BC        0x337e                                                                                          
003376   5000     MOVF      0x0,0x0,0x0                                                                                     
003378   08f8     SUBLW     0xf8                                                                                            
00337a   0e00     MOVLW     0x0                                                                                             
00337c   5401     SUBFWB    0x1,0x0,0x0                                                                                     
00337e   e203     BC        0x3386                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
003380   0ef8     MOVLW     0xf8           				temp_pan_servo = PAN_MAX_PWM_DEFAULT;                                        C:\code\2008\Fresh Copy - 2008\tracking.c
003382   6ede     MOVWF     0xde,0x0                                                                                        
003384   6add     CLRF      0xdd,0x0                                                                                        
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
003386   cfdf     MOVFF     0xfdf,0x2d8    			pan_servo_position = (unsigned char)temp_pan_servo;                           C:\code\2008\Fresh Copy - 2008\tracking.c
003388   f2d8                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// update pan servo PWM value                                                 C:\code\2008\Fresh Copy - 2008\tracking.c
00338a   c2d8     MOVFF     0x2d8,0xfe6    			Set_Pan_Servo_Position(pan_servo_position);                                   C:\code\2008\Fresh Copy - 2008\tracking.c
00338c   ffe6                                                                                                               
00338e   d96b     RCALL     0x3666                                                                                          
003390   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			/////////////////////////////////                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			//                             //                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			//	y-axis/tilt tracking code  //                                              C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			//                             //                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			/////////////////////////////////                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// save the current tilt servo PWM value into a local                         C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// integer variable so that we can detect and correct                         C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// underflow and overflow conditions before we update                         C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// the tilt servo PWM value with a new value                                  C:\code\2008\Fresh Copy - 2008\tracking.c
003392   0102     MOVLB     0x2            			temp_tilt_servo = (int)tilt_servo_position;                                   C:\code\2008\Fresh Copy - 2008\tracking.c
003394   51d9     MOVF      0xd9,0x0,0x1                                                                                    
003396   6ee6     MOVWF     0xe6,0x0                                                                                        
003398   50d9     MOVF      0xd9,0x0,0x0                                                                                    
00339a   0f02     ADDLW     0x2                                                                                             
00339c   6ee9     MOVWF     0xe9,0x0                                                                                        
00339e   cfda     MOVFF     0xfda,0xfea                                                                                     
0033a0   ffea                                                                                                               
0033a2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0033a4   50e7     MOVF      0xe7,0x0,0x0                                                                                    
0033a6   6eee     MOVWF     0xee,0x0                                                                                        
0033a8   6aed     CLRF      0xed,0x0                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// calculate how many image pixels we're away from the                        C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// horizontal center line.                                                    C:\code\2008\Fresh Copy - 2008\tracking.c
0033aa   0102     MOVLB     0x2            			tilt_error = (int)T_Packet_Data.my - TILT_TARGET_PIXEL_DEFAULT;               C:\code\2008\Fresh Copy - 2008\tracking.c
0033ac   5142     MOVF      0x42,0x0,0x1                                                                                    
0033ae   6e00     MOVWF     0x0,0x0                                                                                         
0033b0   6a01     CLRF      0x1,0x0                                                                                         
0033b2   0e77     MOVLW     0x77                                                                                            
0033b4   5e00     SUBWF     0x0,0x1,0x0                                                                                     
0033b6   0e00     MOVLW     0x0                                                                                             
0033b8   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
0033ba   0e08     MOVLW     0x8                                                                                             
0033bc   c000     MOVFF     0x0,0xfdb                                                                                       
0033be   ffdb                                                                                                               
0033c0   0e09     MOVLW     0x9                                                                                             
0033c2   c001     MOVFF     0x1,0xfdb                                                                                       
0033c4   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// Are we too far above or below the horizontal center line?                  C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// If so, calculate how far we should step the tilt servo to                  C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// reduce the error.                                                          C:\code\2008\Fresh Copy - 2008\tracking.c
0033c6   0e08     MOVLW     0x8            			if(tilt_error > TILT_ALLOWABLE_ERROR_DEFAULT)                                 C:\code\2008\Fresh Copy - 2008\tracking.c
0033c8   cfdb     MOVFF     0xfdb,0x0                                                                                       
0033ca   f000                                                                                                               
0033cc   0e09     MOVLW     0x9                                                                                             
0033ce   cfdb     MOVFF     0xfdb,0x1                                                                                       
0033d0   f001                                                                                                               
0033d2   3401     RLCF      0x1,0x0,0x0                                                                                     
0033d4   e204     BC        0x33de                                                                                          
0033d6   5000     MOVF      0x0,0x0,0x0                                                                                     
0033d8   0806     SUBLW     0x6                                                                                             
0033da   0e00     MOVLW     0x0                                                                                             
0033dc   5401     SUBFWB    0x1,0x0,0x0                                                                                     
0033de   e224     BC        0x3428                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// calculate how far we need to step the tilt servo                          C:\code\2008\Fresh Copy - 2008\tracking.c
0033e0   0e08     MOVLW     0x8            				servo_step = tilt_error / TILT_GAIN_DEFAULT;                                 C:\code\2008\Fresh Copy - 2008\tracking.c
0033e2   6e00     MOVWF     0x0,0x0                                                                                         
0033e4   6a01     CLRF      0x1,0x0                                                                                         
0033e6   cfdb     MOVFF     0xfdb,0x41                                                                                      
0033e8   f041                                                                                                               
0033ea   0e09     MOVLW     0x9                                                                                             
0033ec   cfdb     MOVFF     0xfdb,0x42                                                                                      
0033ee   f042                                                                                                               
0033f0   c000     MOVFF     0x0,0x46                                                                                        
0033f2   f046                                                                                                               
0033f4   c001     MOVFF     0x1,0x47                                                                                        
0033f6   f047                                                                                                               
0033f8   ec5c     CALL      0x54b8,0x0                                                                                      
0033fa   f02a                                                                                                               
0033fc   0e04     MOVLW     0x4                                                                                             
0033fe   c041     MOVFF     0x41,0xfdb                                                                                      
003400   ffdb                                                                                                               
003402   0e05     MOVLW     0x5                                                                                             
003404   c042     MOVFF     0x42,0xfdb                                                                                      
003406   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// Due to rounding error in the division calculation above,                  C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// the step may be calculated as zero, which will make it                    C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// impossible to converge on the target when tilt_error is                   C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// smaller than TILT_GAIN_DEFAULT. To get around this problem,               C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// we just test for the zero case and set the step size to one.              C:\code\2008\Fresh Copy - 2008\tracking.c
003408   50d9     MOVF      0xd9,0x0,0x0   				if(servo_step == 0)                                                          C:\code\2008\Fresh Copy - 2008\tracking.c
00340a   0f04     ADDLW     0x4                                                                                             
00340c   6ee9     MOVWF     0xe9,0x0                                                                                        
00340e   cfda     MOVFF     0xfda,0xfea                                                                                     
003410   ffea                                                                                                               
003412   50ee     MOVF      0xee,0x0,0x0                                                                                    
003414   10ed     IORWF     0xed,0x0,0x0                                                                                    
003416   e107     BNZ       0x3426                                                                                          
                                           				{                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
003418   0e01     MOVLW     0x1            					servo_step = 1;                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
00341a   6ef3     MOVWF     0xf3,0x0                                                                                        
00341c   0e04     MOVLW     0x4                                                                                             
00341e   cff3     MOVFF     0xff3,0xfdb                                                                                     
003420   ffdb                                                                                                               
003422   0e05     MOVLW     0x5                                                                                             
003424   6adb     CLRF      0xdb,0x0                                                                                        
                                           				}                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
003426   d036     BRA       0x3494         			else if (tilt_error < -1 * TILT_ALLOWABLE_ERROR_DEFAULT)                      C:\code\2008\Fresh Copy - 2008\tracking.c
003428   0e08     MOVLW     0x8                                                                                             
00342a   cfdb     MOVFF     0xfdb,0x0                                                                                       
00342c   f000                                                                                                               
00342e   0e09     MOVLW     0x9                                                                                             
003430   cfdb     MOVFF     0xfdb,0x1                                                                                       
003432   f001                                                                                                               
003434   80d8     BSF       0xd8,0x0,0x0                                                                                    
003436   5001     MOVF      0x1,0x0,0x0                                                                                     
003438   e704     BNN       0x3442                                                                                          
00343a   0efa     MOVLW     0xfa                                                                                            
00343c   5c00     SUBWF     0x0,0x0,0x0                                                                                     
00343e   0eff     MOVLW     0xff                                                                                            
003440   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003442   e221     BC        0x3486                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// calculate how far we need to step the tilt servo                          C:\code\2008\Fresh Copy - 2008\tracking.c
003444   0e08     MOVLW     0x8            				servo_step = tilt_error / TILT_GAIN_DEFAULT;                                 C:\code\2008\Fresh Copy - 2008\tracking.c
003446   6e00     MOVWF     0x0,0x0                                                                                         
003448   6a01     CLRF      0x1,0x0                                                                                         
00344a   cfdb     MOVFF     0xfdb,0x41                                                                                      
00344c   f041                                                                                                               
00344e   0e09     MOVLW     0x9                                                                                             
003450   cfdb     MOVFF     0xfdb,0x42                                                                                      
003452   f042                                                                                                               
003454   c000     MOVFF     0x0,0x46                                                                                        
003456   f046                                                                                                               
003458   c001     MOVFF     0x1,0x47                                                                                        
00345a   f047                                                                                                               
00345c   ec5c     CALL      0x54b8,0x0                                                                                      
00345e   f02a                                                                                                               
003460   0e04     MOVLW     0x4                                                                                             
003462   c041     MOVFF     0x41,0xfdb                                                                                      
003464   ffdb                                                                                                               
003466   0e05     MOVLW     0x5                                                                                             
003468   c042     MOVFF     0x42,0xfdb                                                                                      
00346a   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// Due to rounding error in the division calculation above,                  C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// the step may be calculated as zero, which will make it                    C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// impossible to converge on the target when tilt_error is                   C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// smaller than TILT_GAIN_DEFAULT. To get around this problem,               C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// we just test for the zero case and set the step size to one.              C:\code\2008\Fresh Copy - 2008\tracking.c
00346c   50d9     MOVF      0xd9,0x0,0x0   				if(servo_step == 0)                                                          C:\code\2008\Fresh Copy - 2008\tracking.c
00346e   0f04     ADDLW     0x4                                                                                             
003470   6ee9     MOVWF     0xe9,0x0                                                                                        
003472   cfda     MOVFF     0xfda,0xfea                                                                                     
003474   ffea                                                                                                               
003476   50ee     MOVF      0xee,0x0,0x0                                                                                    
003478   10ed     IORWF     0xed,0x0,0x0                                                                                    
00347a   e104     BNZ       0x3484                                                                                          
                                           				{                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
00347c   0e04     MOVLW     0x4            					servo_step = -1;                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
00347e   68db     SETF      0xdb,0x0                                                                                        
003480   0e05     MOVLW     0x5                                                                                             
003482   68db     SETF      0xdb,0x0                                                                                        
                                           				}                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
003484   d007     BRA       0x3494         			else                                                                          C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// if we've fallen through to here, it means that we're                      C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// neither too far below or to far above the horizontal                      C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// center line of the image and don't need to move the                       C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// servo                                                                     C:\code\2008\Fresh Copy - 2008\tracking.c
003486   0e04     MOVLW     0x4            				servo_step = 0;                                                              C:\code\2008\Fresh Copy - 2008\tracking.c
003488   6adb     CLRF      0xdb,0x0                                                                                        
00348a   0e05     MOVLW     0x5                                                                                             
00348c   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// signal that the tilt servo is on target                                   C:\code\2008\Fresh Copy - 2008\tracking.c
00348e   0e04     MOVLW     0x4            				Tracking_State += STATE_TILT_ON_TARGET;                                      C:\code\2008\Fresh Copy - 2008\tracking.c
003490   0102     MOVLB     0x2                                                                                             
003492   27c0     ADDWF     0xc0,0x1,0x1                                                                                    
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// add the step to the current servo position, taking into                    C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// account the direction set by the user in tracking.h                        C:\code\2008\Fresh Copy - 2008\tracking.c
003494   0e04     MOVLW     0x4            			temp_tilt_servo += (TILT_ROTATION_SIGN_DEFAULT * servo_step);                 C:\code\2008\Fresh Copy - 2008\tracking.c
003496   cfdb     MOVFF     0xfdb,0x0                                                                                       
003498   f000                                                                                                               
00349a   0e05     MOVLW     0x5                                                                                             
00349c   cfdb     MOVFF     0xfdb,0x1                                                                                       
00349e   f001                                                                                                               
0034a0   50d9     MOVF      0xd9,0x0,0x0                                                                                    
0034a2   0f02     ADDLW     0x2                                                                                             
0034a4   6ee9     MOVWF     0xe9,0x0                                                                                        
0034a6   cfda     MOVFF     0xfda,0xfea                                                                                     
0034a8   ffea                                                                                                               
0034aa   5000     MOVF      0x0,0x0,0x0                                                                                     
0034ac   26ee     ADDWF     0xee,0x1,0x0                                                                                    
0034ae   5001     MOVF      0x1,0x0,0x0                                                                                     
0034b0   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// check the tilt PWM value for under/overflow                                C:\code\2008\Fresh Copy - 2008\tracking.c
0034b2   0e02     MOVLW     0x2            			if(temp_tilt_servo < TILT_MIN_PWM_DEFAULT)                                    C:\code\2008\Fresh Copy - 2008\tracking.c
0034b4   cfdb     MOVFF     0xfdb,0x0                                                                                       
0034b6   f000                                                                                                               
0034b8   0e03     MOVLW     0x3                                                                                             
0034ba   cfdb     MOVFF     0xfdb,0x1                                                                                       
0034bc   f001                                                                                                               
0034be   90d8     BCF       0xd8,0x0,0x0                                                                                    
0034c0   5001     MOVF      0x1,0x0,0x0                                                                                     
0034c2   e604     BN        0x34cc                                                                                          
0034c4   0e5e     MOVLW     0x5e                                                                                            
0034c6   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0034c8   0e00     MOVLW     0x0                                                                                             
0034ca   5801     SUBWFB    0x1,0x0,0x0                                                                                     
0034cc   e208     BC        0x34de                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
0034ce   0e5e     MOVLW     0x5e           				temp_tilt_servo = TILT_MIN_PWM_DEFAULT;                                      C:\code\2008\Fresh Copy - 2008\tracking.c
0034d0   6ef3     MOVWF     0xf3,0x0                                                                                        
0034d2   0e02     MOVLW     0x2                                                                                             
0034d4   cff3     MOVFF     0xff3,0xfdb                                                                                     
0034d6   ffdb                                                                                                               
0034d8   0e03     MOVLW     0x3                                                                                             
0034da   6adb     CLRF      0xdb,0x0                                                                                        
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
0034dc   d014     BRA       0x3506         			else if(temp_tilt_servo > TILT_MAX_PWM_DEFAULT)                               C:\code\2008\Fresh Copy - 2008\tracking.c
0034de   0e02     MOVLW     0x2                                                                                             
0034e0   cfdb     MOVFF     0xfdb,0x0                                                                                       
0034e2   f000                                                                                                               
0034e4   0e03     MOVLW     0x3                                                                                             
0034e6   cfdb     MOVFF     0xfdb,0x1                                                                                       
0034e8   f001                                                                                                               
0034ea   3401     RLCF      0x1,0x0,0x0                                                                                     
0034ec   e204     BC        0x34f6                                                                                          
0034ee   5000     MOVF      0x0,0x0,0x0                                                                                     
0034f0   08c2     SUBLW     0xc2                                                                                            
0034f2   0e00     MOVLW     0x0                                                                                             
0034f4   5401     SUBFWB    0x1,0x0,0x0                                                                                     
0034f6   e207     BC        0x3506                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
0034f8   0ec2     MOVLW     0xc2           				temp_tilt_servo = TILT_MAX_PWM_DEFAULT;                                      C:\code\2008\Fresh Copy - 2008\tracking.c
0034fa   6ef3     MOVWF     0xf3,0x0                                                                                        
0034fc   0e02     MOVLW     0x2                                                                                             
0034fe   cff3     MOVFF     0xff3,0xfdb                                                                                     
003500   ffdb                                                                                                               
003502   0e03     MOVLW     0x3                                                                                             
003504   6adb     CLRF      0xdb,0x0                                                                                        
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
003506   0e02     MOVLW     0x2            			tilt_servo_position = (unsigned char)temp_tilt_servo;                         C:\code\2008\Fresh Copy - 2008\tracking.c
003508   cfdb     MOVFF     0xfdb,0x2d9                                                                                     
00350a   f2d9                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// update tilt servo PWM value                                                C:\code\2008\Fresh Copy - 2008\tracking.c
00350c   c2d9     MOVFF     0x2d9,0xfe6    			Set_Tilt_Servo_Position(tilt_servo_position);                                 C:\code\2008\Fresh Copy - 2008\tracking.c
00350e   ffe6                                                                                                               
003510   d8b5     RCALL     0x367c                                                                                          
003512   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\tracking.c
003514   d086     BRA       0x3622         		else // matching else to if(T_Packet_Data.confidence >= CONFIDENCE_THRESHOLD_DEFAULT) above C:\code\2008\Fresh Copy - 2008\tracking.c
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			///////////////////                                                           C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			//               //                                                           C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			//  search code  //                                                           C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			//               //                                                           C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			///////////////////                                                           C:\code\2008\Fresh Copy - 2008\tracking.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// To provide a delay for the camera to lock onto the                         C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// target between position changes, we only step the camera                   C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// to a new position every SEARCH_DELAY times while we're                     C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// in search mode. SEARCH_DELAY_DEFAULT is #define'd in                       C:\code\2008\Fresh Copy - 2008\tracking.c
                                           			// tracking.h                                                                 C:\code\2008\Fresh Copy - 2008\tracking.c
003516   0102     MOVLB     0x2            			loop_count++;                                                                 C:\code\2008\Fresh Copy - 2008\tracking.c
003518   2bc5     INCF      0xc5,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
00351a   51c5     MOVF      0xc5,0x0,0x1   			if(loop_count > SEARCH_DELAY_DEFAULT)                                         C:\code\2008\Fresh Copy - 2008\tracking.c
00351c   0806     SUBLW     0x6                                                                                             
00351e   e301     BNC       0x3522                                                                                          
003520   d080     BRA       0x3622                                                                                          
                                           			{                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// reset the loop counter                                                    C:\code\2008\Fresh Copy - 2008\tracking.c
003522   6bc5     CLRF      0xc5,0x1       				loop_count = 0;                                                              C:\code\2008\Fresh Copy - 2008\tracking.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// If we're starting a new search, initialize the pan                        C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// and tilt servos to the search starting point.                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// Otherwise, just continue the search pattern from                          C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// where we left off. The variable new_search is reset                       C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// to one each time the tracking code (above) executes.                      C:\code\2008\Fresh Copy - 2008\tracking.c
003524   05c4     DECF      0xc4,0x0,0x1   				if(new_search == 1)                                                          C:\code\2008\Fresh Copy - 2008\tracking.c
003526   e10b     BNZ       0x353e                                                                                          
                                           				{                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
003528   6bc4     CLRF      0xc4,0x1       					new_search = 0;                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
00352a   6ade     CLRF      0xde,0x0       					temp_pan_servo = PAN_MIN_PWM_DEFAULT;                                       C:\code\2008\Fresh Copy - 2008\tracking.c
00352c   6add     CLRF      0xdd,0x0                                                                                        
00352e   0e90     MOVLW     0x90           					temp_tilt_servo = TILT_CENTER_PWM_DEFAULT;                                  C:\code\2008\Fresh Copy - 2008\tracking.c
003530   6ef3     MOVWF     0xf3,0x0                                                                                        
003532   0e02     MOVLW     0x2                                                                                             
003534   cff3     MOVFF     0xff3,0xfdb                                                                                     
003536   ffdb                                                                                                               
003538   0e03     MOVLW     0x3                                                                                             
00353a   6adb     CLRF      0xdb,0x0                                                                                        
                                           										                                                                       C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				}                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
00353c   d065     BRA       0x3608         				else                                                                         C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				{                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           					// calculate new servo position(s) based upon our                           C:\code\2008\Fresh Copy - 2008\tracking.c
                                           					// current servo position(s)                                                C:\code\2008\Fresh Copy - 2008\tracking.c
00353e   0102     MOVLB     0x2            					temp_pan_servo = (int)pan_servo_position;                                   C:\code\2008\Fresh Copy - 2008\tracking.c
003540   51d8     MOVF      0xd8,0x0,0x1                                                                                    
003542   6ede     MOVWF     0xde,0x0                                                                                        
003544   6add     CLRF      0xdd,0x0                                                                                        
003546   51d9     MOVF      0xd9,0x0,0x1   					temp_tilt_servo = (int)tilt_servo_position;                                 C:\code\2008\Fresh Copy - 2008\tracking.c
003548   6ee6     MOVWF     0xe6,0x0                                                                                        
00354a   50d9     MOVF      0xd9,0x0,0x0                                                                                    
00354c   0f02     ADDLW     0x2                                                                                             
00354e   6ee9     MOVWF     0xe9,0x0                                                                                        
003550   cfda     MOVFF     0xfda,0xfea                                                                                     
003552   ffea                                                                                                               
003554   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003556   50e7     MOVF      0xe7,0x0,0x0                                                                                    
003558   6eee     MOVWF     0xee,0x0                                                                                        
00355a   6aed     CLRF      0xed,0x0                                                                                        
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           					// if the pan servo is at the end of its travel,                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           					// send it back to the start and step the tilt                              C:\code\2008\Fresh Copy - 2008\tracking.c
                                           					// servo to its next position                                               C:\code\2008\Fresh Copy - 2008\tracking.c
00355c   cfde     MOVFF     0xfde,0x0      					if(temp_pan_servo >= PAN_MAX_PWM_DEFAULT)                                   C:\code\2008\Fresh Copy - 2008\tracking.c
00355e   f000                                                                                                               
003560   cfdd     MOVFF     0xfdd,0x1                                                                                       
003562   f001                                                                                                               
003564   90d8     BCF       0xd8,0x0,0x0                                                                                    
003566   5001     MOVF      0x1,0x0,0x0                                                                                     
003568   e604     BN        0x3572                                                                                          
00356a   0ef8     MOVLW     0xf8                                                                                            
00356c   5c00     SUBWF     0x0,0x0,0x0                                                                                     
00356e   0e00     MOVLW     0x0                                                                                             
003570   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003572   e337     BNC       0x35e2                                                                                          
                                           					{                                                                           C:\code\2008\Fresh Copy - 2008\tracking.c
003574   6ade     CLRF      0xde,0x0       						temp_pan_servo = PAN_MIN_PWM_DEFAULT;                                      C:\code\2008\Fresh Copy - 2008\tracking.c
003576   6add     CLRF      0xdd,0x0                                                                                        
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\tracking.c
                                           						// if the tilt servo is at the end of its                                  C:\code\2008\Fresh Copy - 2008\tracking.c
                                           						// travel, send it back to the start                                       C:\code\2008\Fresh Copy - 2008\tracking.c
003578   0e02     MOVLW     0x2            						if(temp_tilt_servo >= TILT_MAX_PWM_DEFAULT)                                C:\code\2008\Fresh Copy - 2008\tracking.c
00357a   cfdb     MOVFF     0xfdb,0x0                                                                                       
00357c   f000                                                                                                               
00357e   0e03     MOVLW     0x3                                                                                             
003580   cfdb     MOVFF     0xfdb,0x1                                                                                       
003582   f001                                                                                                               
003584   90d8     BCF       0xd8,0x0,0x0                                                                                    
003586   5001     MOVF      0x1,0x0,0x0                                                                                     
003588   e604     BN        0x3592                                                                                          
00358a   0ec2     MOVLW     0xc2                                                                                            
00358c   5c00     SUBWF     0x0,0x0,0x0                                                                                     
00358e   0e00     MOVLW     0x0                                                                                             
003590   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003592   e308     BNC       0x35a4                                                                                          
                                           						{                                                                          C:\code\2008\Fresh Copy - 2008\tracking.c
003594   0e5e     MOVLW     0x5e           							temp_tilt_servo = TILT_MIN_PWM_DEFAULT;                                   C:\code\2008\Fresh Copy - 2008\tracking.c
003596   6ef3     MOVWF     0xf3,0x0                                                                                        
003598   0e02     MOVLW     0x2                                                                                             
00359a   cff3     MOVFF     0xff3,0xfdb                                                                                     
00359c   ffdb                                                                                                               
00359e   0e03     MOVLW     0x3                                                                                             
0035a0   6adb     CLRF      0xdb,0x0                                                                                        
                                           						}                                                                          C:\code\2008\Fresh Copy - 2008\tracking.c
0035a2   d01e     BRA       0x35e0         						else                                                                       C:\code\2008\Fresh Copy - 2008\tracking.c
                                           						{                                                                          C:\code\2008\Fresh Copy - 2008\tracking.c
                                           							// step the tilt servo to its next destination                            C:\code\2008\Fresh Copy - 2008\tracking.c
0035a4   50d9     MOVF      0xd9,0x0,0x0   							temp_tilt_servo += TILT_SEARCH_STEP_SIZE_DEFAULT;                         C:\code\2008\Fresh Copy - 2008\tracking.c
0035a6   0f02     ADDLW     0x2                                                                                             
0035a8   6ee9     MOVWF     0xe9,0x0                                                                                        
0035aa   cfda     MOVFF     0xfda,0xfea                                                                                     
0035ac   ffea                                                                                                               
0035ae   0e32     MOVLW     0x32                                                                                            
0035b0   26ee     ADDWF     0xee,0x1,0x0                                                                                    
0035b2   0e00     MOVLW     0x0                                                                                             
0035b4   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
                                           			                                                                              C:\code\2008\Fresh Copy - 2008\tracking.c
                                           							// make sure its new position isn't beyond                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           							// the maximum value set in tracking.h                                    C:\code\2008\Fresh Copy - 2008\tracking.c
0035b6   0e02     MOVLW     0x2            							if(temp_tilt_servo >= TILT_MAX_PWM_DEFAULT)                               C:\code\2008\Fresh Copy - 2008\tracking.c
0035b8   cfdb     MOVFF     0xfdb,0x0                                                                                       
0035ba   f000                                                                                                               
0035bc   0e03     MOVLW     0x3                                                                                             
0035be   cfdb     MOVFF     0xfdb,0x1                                                                                       
0035c0   f001                                                                                                               
0035c2   90d8     BCF       0xd8,0x0,0x0                                                                                    
0035c4   5001     MOVF      0x1,0x0,0x0                                                                                     
0035c6   e604     BN        0x35d0                                                                                          
0035c8   0ec2     MOVLW     0xc2                                                                                            
0035ca   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0035cc   0e00     MOVLW     0x0                                                                                             
0035ce   5801     SUBWFB    0x1,0x0,0x0                                                                                     
0035d0   e307     BNC       0x35e0                                                                                          
                                           							{                                                                         C:\code\2008\Fresh Copy - 2008\tracking.c
0035d2   0ec2     MOVLW     0xc2           								temp_tilt_servo = TILT_MAX_PWM_DEFAULT;                                  C:\code\2008\Fresh Copy - 2008\tracking.c
0035d4   6ef3     MOVWF     0xf3,0x0                                                                                        
0035d6   0e02     MOVLW     0x2                                                                                             
0035d8   cff3     MOVFF     0xff3,0xfdb                                                                                     
0035da   ffdb                                                                                                               
0035dc   0e03     MOVLW     0x3                                                                                             
0035de   6adb     CLRF      0xdb,0x0                                                                                        
                                           							}                                                                         C:\code\2008\Fresh Copy - 2008\tracking.c
                                           						}                                                                          C:\code\2008\Fresh Copy - 2008\tracking.c
                                           					}                                                                           C:\code\2008\Fresh Copy - 2008\tracking.c
0035e0   d013     BRA       0x3608         					else                                                                        C:\code\2008\Fresh Copy - 2008\tracking.c
                                           					{                                                                           C:\code\2008\Fresh Copy - 2008\tracking.c
                                           						// step the pan servo to its next destination                              C:\code\2008\Fresh Copy - 2008\tracking.c
0035e2   0e3e     MOVLW     0x3e           						temp_pan_servo += PAN_SEARCH_STEP_SIZE_DEFAULT;                            C:\code\2008\Fresh Copy - 2008\tracking.c
0035e4   26de     ADDWF     0xde,0x1,0x0                                                                                    
0035e6   0e00     MOVLW     0x0                                                                                             
0035e8   22dd     ADDWFC    0xdd,0x1,0x0                                                                                    
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\tracking.c
                                           						// make sure its new position isn't beyond                                 C:\code\2008\Fresh Copy - 2008\tracking.c
                                           						// the maximum value set in tracking.h                                     C:\code\2008\Fresh Copy - 2008\tracking.c
0035ea   cfde     MOVFF     0xfde,0x0      						if(temp_pan_servo >= PAN_MAX_PWM_DEFAULT)                                  C:\code\2008\Fresh Copy - 2008\tracking.c
0035ec   f000                                                                                                               
0035ee   cfdd     MOVFF     0xfdd,0x1                                                                                       
0035f0   f001                                                                                                               
0035f2   90d8     BCF       0xd8,0x0,0x0                                                                                    
0035f4   5001     MOVF      0x1,0x0,0x0                                                                                     
0035f6   e604     BN        0x3600                                                                                          
0035f8   0ef8     MOVLW     0xf8                                                                                            
0035fa   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0035fc   0e00     MOVLW     0x0                                                                                             
0035fe   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003600   e303     BNC       0x3608                                                                                          
                                           						{                                                                          C:\code\2008\Fresh Copy - 2008\tracking.c
003602   0ef8     MOVLW     0xf8           							temp_pan_servo = PAN_MAX_PWM_DEFAULT;                                     C:\code\2008\Fresh Copy - 2008\tracking.c
003604   6ede     MOVWF     0xde,0x0                                                                                        
003606   6add     CLRF      0xdd,0x0                                                                                        
                                           						}                                                                          C:\code\2008\Fresh Copy - 2008\tracking.c
                                           					}                                                                           C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				}                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
003608   cfdf     MOVFF     0xfdf,0x2d8    				pan_servo_position = (int)temp_pan_servo;                                    C:\code\2008\Fresh Copy - 2008\tracking.c
00360a   f2d8                                                                                                               
00360c   0e02     MOVLW     0x2            				tilt_servo_position = (int)temp_tilt_servo;                                  C:\code\2008\Fresh Copy - 2008\tracking.c
00360e   cfdb     MOVFF     0xfdb,0x2d9                                                                                     
003610   f2d9                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           				// update the pan and tilt servo PWM value                                   C:\code\2008\Fresh Copy - 2008\tracking.c
003612   c2d8     MOVFF     0x2d8,0xfe6    				Set_Pan_Servo_Position((unsigned char)pan_servo_position);                   C:\code\2008\Fresh Copy - 2008\tracking.c
003614   ffe6                                                                                                               
003616   d827     RCALL     0x3666                                                                                          
003618   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00361a   c2d9     MOVFF     0x2d9,0xfe6    				Set_Tilt_Servo_Position((unsigned char)tilt_servo_position);                 C:\code\2008\Fresh Copy - 2008\tracking.c
00361c   ffe6                                                                                                               
00361e   d82e     RCALL     0x367c                                                                                          
003620   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           			}                                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\tracking.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\tracking.c
003622   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
003624   ffe1                                                                                                               
003626   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003628   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00362a   ffd9                                                                                                               
00362c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	FUNCTION:		Get_Tracking_State()                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	PURPOSE:		This function can be used to determine if both the pan               C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *					and tilt servos have the camera positioned such that the                   C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *					centroid (center) of the green light is located at the                     C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *					center of the camera's imager.                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	CALLED FROM:	User code.                                                        C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	RETURNS:		SEARCHING if in search mode.                                         C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *					TARGET_IN_VIEW if the target is in view of the camera                      C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *					but not locked on.                                                         C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *					CAMERA_ON_TARGET if the camera is locked onto the                          C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *					target                                                                     C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	COMMENTS:		The return values are defined in tracking.h.                        C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\tracking.c
00362e   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Get_Tracking_State(void)                                           C:\code\2008\Fresh Copy - 2008\tracking.c
003630   ffe6                                                                                                               
003632   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003634   ffd9                                                                                                               
003636   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           	unsigned char return_value;                                                     C:\code\2008\Fresh Copy - 2008\tracking.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
003638   0102     MOVLB     0x2            	if(Tracking_State == STATE_SEARCHING)                                           C:\code\2008\Fresh Copy - 2008\tracking.c
00363a   51c0     MOVF      0xc0,0x0,0x1                                                                                    
00363c   e102     BNZ       0x3642                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\tracking.c
00363e   6adf     CLRF      0xdf,0x0       		return_value = SEARCHING;                                                      C:\code\2008\Fresh Copy - 2008\tracking.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\tracking.c
003640   d00b     BRA       0x3658         	else if(Tracking_State < STATE_TARGET_IN_VIEW + STATE_PAN_ON_TARGET + STATE_TILT_ON_TARGET) C:\code\2008\Fresh Copy - 2008\tracking.c
003642   0e07     MOVLW     0x7                                                                                             
003644   5dc0     SUBWF     0xc0,0x0,0x1                                                                                    
003646   e203     BC        0x364e                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\tracking.c
003648   0e01     MOVLW     0x1            		return_value = TARGET_IN_VIEW;                                                 C:\code\2008\Fresh Copy - 2008\tracking.c
00364a   6edf     MOVWF     0xdf,0x0                                                                                        
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\tracking.c
00364c   d005     BRA       0x3658         	else if(Tracking_State == STATE_TARGET_IN_VIEW + STATE_PAN_ON_TARGET + STATE_TILT_ON_TARGET) C:\code\2008\Fresh Copy - 2008\tracking.c
00364e   0e07     MOVLW     0x7                                                                                             
003650   5dc0     SUBWF     0xc0,0x0,0x1                                                                                    
003652   e102     BNZ       0x3658                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\tracking.c
003654   0e02     MOVLW     0x2            		return_value = CAMERA_ON_TARGET;                                               C:\code\2008\Fresh Copy - 2008\tracking.c
003656   6edf     MOVWF     0xdf,0x0                                                                                        
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\tracking.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
003658   50df     MOVF      0xdf,0x0,0x0   	return(return_value);                                                           C:\code\2008\Fresh Copy - 2008\tracking.c
00365a   d000     BRA       0x365c                                                                                          
00365c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
00365e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003660   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003662   ffd9                                                                                                               
003664   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	FUNCTION:		Set_Pan_Servo_Position()                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	PURPOSE:		Commands the pan servo to a new position                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	CALLED FROM:	Servo_Track(), above.                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\tracking.c
003666   cfd9     MOVFF     0xfd9,0xfe6    void Set_Pan_Servo_Position(unsigned char new_pan_position)                      C:\code\2008\Fresh Copy - 2008\tracking.c
003668   ffe6                                                                                                               
00366a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00366c   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
00366e   0efe     MOVLW     0xfe           	PAN_SERVO = new_pan_position;                                                   C:\code\2008\Fresh Copy - 2008\tracking.c
003670   cfdb     MOVFF     0xfdb,0x204                                                                                     
003672   f204                                                                                                               
003674   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
003676   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003678   ffd9                                                                                                               
00367a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	FUNCTION:		Set_Tilt_Servo_Position()                                           C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	PURPOSE:		Commands the tilt servo to a new position                            C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	CALLED FROM:	Servo_Track(), above.                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *	COMMENTS:                                                                      C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\tracking.c
00367c   cfd9     MOVFF     0xfd9,0xfe6    void Set_Tilt_Servo_Position(unsigned char new_tilt_position)                    C:\code\2008\Fresh Copy - 2008\tracking.c
00367e   ffe6                                                                                                               
003680   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003682   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
003684   0efe     MOVLW     0xfe           	TILT_SERVO = new_tilt_position;                                                 C:\code\2008\Fresh Copy - 2008\tracking.c
003686   cfdb     MOVFF     0xfdb,0x205                                                                                     
003688   f205                                                                                                               
00368a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\tracking.c
00368c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00368e   ffd9                                                                                                               
003690   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           * FILE NAME: TRCfunctions.c                                                      C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           * AUTHOR: Paul Malmsten, 2008                                                    C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           * DESCRIPTION:                                                                   C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           *  This file contains all of the extra functions the Titan Robotics Club has     C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           *  added. Feel free to mess with it.                                             C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           #include <stdio.h>                                                               C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           #include "ifi_aliases.h"                                                         C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           #include "ifi_utilities.h"                                                       C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           #include "user_routines.h"                                                       C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           #include "serial_ports.h"                                                        C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           #include "encoder.h"                                                             C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           #include "adc.h"                                                                 C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           #include "gyro.h"                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           #include "TRCfunctions.h"                                                        C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           extern VelServo Left, Right;                                                     C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           extern long timerTicks;                                                          C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           //May need some serious testing before use                                       C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0008a4   cfd9     MOVFF     0xfd9,0xfe6    int doPid(PosServo *p, long pos, int motor_direction)                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0008a6   ffe6                                                                                                               
0008a8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0008aa   ffd9                                                                                                               
0008ac   0e04     MOVLW     0x4                                                                                             
0008ae   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           	int Error, Drive;                                                               C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0008b0   0efd     MOVLW     0xfd           	if(p->Psetpoint > p->posMaxLim)                                                 C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0008b2   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0008b4   ffe9                                                                                                               
0008b6   0efe     MOVLW     0xfe                                                                                            
0008b8   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0008ba   ffea                                                                                                               
0008bc   cfee     MOVFF     0xfee,0x0                                                                                       
0008be   f000                                                                                                               
0008c0   cfef     MOVFF     0xfef,0x1                                                                                       
0008c2   f001                                                                                                               
0008c4   0efd     MOVLW     0xfd                                                                                            
0008c6   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0008c8   ffe9                                                                                                               
0008ca   0efe     MOVLW     0xfe                                                                                            
0008cc   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0008ce   ffea                                                                                                               
0008d0   0e08     MOVLW     0x8                                                                                             
0008d2   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0008d4   0e00     MOVLW     0x0                                                                                             
0008d6   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0008d8   cfee     MOVFF     0xfee,0x2                                                                                       
0008da   f002                                                                                                               
0008dc   cfef     MOVFF     0xfef,0x3                                                                                       
0008de   f003                                                                                                               
0008e0   5003     MOVF      0x3,0x0,0x0                                                                                     
0008e2   1801     XORWF     0x1,0x0,0x0                                                                                     
0008e4   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
0008e6   d002     BRA       0x8ec                                                                                           
0008e8   3401     RLCF      0x1,0x0,0x0                                                                                     
0008ea   d004     BRA       0x8f4                                                                                           
0008ec   5000     MOVF      0x0,0x0,0x0                                                                                     
0008ee   5c02     SUBWF     0x2,0x0,0x0                                                                                     
0008f0   5001     MOVF      0x1,0x0,0x0                                                                                     
0008f2   5803     SUBWFB    0x3,0x0,0x0                                                                                     
0008f4   e218     BC        0x926                                                                                           
0008f6   0efd     MOVLW     0xfd           		p->Psetpoint = p->posMaxLim;                                                   C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0008f8   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0008fa   ffe9                                                                                                               
0008fc   0efe     MOVLW     0xfe                                                                                            
0008fe   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000900   ffea                                                                                                               
000902   0e08     MOVLW     0x8                                                                                             
000904   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000906   0e00     MOVLW     0x0                                                                                             
000908   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00090a   cfee     MOVFF     0xfee,0x0                                                                                       
00090c   f000                                                                                                               
00090e   cfef     MOVFF     0xfef,0x1                                                                                       
000910   f001                                                                                                               
000912   0efd     MOVLW     0xfd                                                                                            
000914   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000916   ffe9                                                                                                               
000918   0efe     MOVLW     0xfe                                                                                            
00091a   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00091c   ffea                                                                                                               
00091e   c000     MOVFF     0x0,0xfee                                                                                       
000920   ffee                                                                                                               
000922   c001     MOVFF     0x1,0xfed                                                                                       
000924   ffed                                                                                                               
000926   0efd     MOVLW     0xfd           	if(p->Psetpoint < p->posMinLim)                                                 C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000928   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00092a   ffe9                                                                                                               
00092c   0efe     MOVLW     0xfe                                                                                            
00092e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000930   ffea                                                                                                               
000932   cfee     MOVFF     0xfee,0x0                                                                                       
000934   f000                                                                                                               
000936   cfef     MOVFF     0xfef,0x1                                                                                       
000938   f001                                                                                                               
00093a   0efd     MOVLW     0xfd                                                                                            
00093c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00093e   ffe9                                                                                                               
000940   0efe     MOVLW     0xfe                                                                                            
000942   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000944   ffea                                                                                                               
000946   0e06     MOVLW     0x6                                                                                             
000948   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00094a   0e00     MOVLW     0x0                                                                                             
00094c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00094e   cfee     MOVFF     0xfee,0x2                                                                                       
000950   f002                                                                                                               
000952   cfef     MOVFF     0xfef,0x3                                                                                       
000954   f003                                                                                                               
000956   5001     MOVF      0x1,0x0,0x0                                                                                     
000958   1803     XORWF     0x3,0x0,0x0                                                                                     
00095a   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
00095c   d002     BRA       0x962                                                                                           
00095e   3403     RLCF      0x3,0x0,0x0                                                                                     
000960   d004     BRA       0x96a                                                                                           
000962   5002     MOVF      0x2,0x0,0x0                                                                                     
000964   5c00     SUBWF     0x0,0x0,0x0                                                                                     
000966   5003     MOVF      0x3,0x0,0x0                                                                                     
000968   5801     SUBWFB    0x1,0x0,0x0                                                                                     
00096a   e218     BC        0x99c                                                                                           
00096c   0efd     MOVLW     0xfd           		p->Psetpoint = p->posMinLim;                                                   C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00096e   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000970   ffe9                                                                                                               
000972   0efe     MOVLW     0xfe                                                                                            
000974   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000976   ffea                                                                                                               
000978   0e06     MOVLW     0x6                                                                                             
00097a   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00097c   0e00     MOVLW     0x0                                                                                             
00097e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000980   cfee     MOVFF     0xfee,0x0                                                                                       
000982   f000                                                                                                               
000984   cfef     MOVFF     0xfef,0x1                                                                                       
000986   f001                                                                                                               
000988   0efd     MOVLW     0xfd                                                                                            
00098a   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00098c   ffe9                                                                                                               
00098e   0efe     MOVLW     0xfe                                                                                            
000990   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000992   ffea                                                                                                               
000994   c000     MOVFF     0x0,0xfee                                                                                       
000996   ffee                                                                                                               
000998   c001     MOVFF     0x1,0xfed                                                                                       
00099a   ffed                                                                                                               
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00099c   0efd     MOVLW     0xfd           	Error = p->Psetpoint - pos;		//Compare against the requested velocity           C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00099e   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0009a0   ffe9                                                                                                               
0009a2   0efe     MOVLW     0xfe                                                                                            
0009a4   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0009a6   ffea                                                                                                               
0009a8   cfee     MOVFF     0xfee,0x4                                                                                       
0009aa   f004                                                                                                               
0009ac   cfef     MOVFF     0xfef,0x5                                                                                       
0009ae   f005                                                                                                               
0009b0   6a06     CLRF      0x6,0x0                                                                                         
0009b2   6a07     CLRF      0x7,0x0                                                                                         
0009b4   ae05     BTFSS     0x5,0x7,0x0                                                                                     
0009b6   d002     BRA       0x9bc                                                                                           
0009b8   6806     SETF      0x6,0x0                                                                                         
0009ba   6807     SETF      0x7,0x0                                                                                         
0009bc   50d9     MOVF      0xd9,0x0,0x0                                                                                    
0009be   0ff9     ADDLW     0xf9                                                                                            
0009c0   6ee9     MOVWF     0xe9,0x0                                                                                        
0009c2   0eff     MOVLW     0xff                                                                                            
0009c4   20da     ADDWFC    0xda,0x0,0x0                                                                                    
0009c6   6eea     MOVWF     0xea,0x0                                                                                        
0009c8   50ee     MOVF      0xee,0x0,0x0                                                                                    
0009ca   5c04     SUBWF     0x4,0x0,0x0                                                                                     
0009cc   6e00     MOVWF     0x0,0x0                                                                                         
0009ce   50ee     MOVF      0xee,0x0,0x0                                                                                    
0009d0   5805     SUBWFB    0x5,0x0,0x0                                                                                     
0009d2   6e01     MOVWF     0x1,0x0                                                                                         
0009d4   50ee     MOVF      0xee,0x0,0x0                                                                                    
0009d6   5806     SUBWFB    0x6,0x0,0x0                                                                                     
0009d8   6e02     MOVWF     0x2,0x0                                                                                         
0009da   50ee     MOVF      0xee,0x0,0x0                                                                                    
0009dc   5807     SUBWFB    0x7,0x0,0x0                                                                                     
0009de   6e03     MOVWF     0x3,0x0                                                                                         
0009e0   c000     MOVFF     0x0,0xfde                                                                                       
0009e2   ffde                                                                                                               
0009e4   c001     MOVFF     0x1,0xfdd                                                                                       
0009e6   ffdd                                                                                                               
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0009e8   0efd     MOVLW     0xfd           	Drive = (p->Kp*Error + p->Kd*(Error - p->PrevErr) + p->Ki*p->Ierror)/p->Ko;  //Yay! PID! Note: PrevErr is bigger than Error when approaching setpoint; Kd is okay being added C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0009ea   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0009ec   ffe9                                                                                                               
0009ee   0efe     MOVLW     0xfe                                                                                            
0009f0   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0009f2   ffea                                                                                                               
0009f4   0e10     MOVLW     0x10                                                                                            
0009f6   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0009f8   0e00     MOVLW     0x0                                                                                             
0009fa   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0009fc   cfee     MOVFF     0xfee,0x12                                                                                      
0009fe   f012                                                                                                               
000a00   cfef     MOVFF     0xfef,0x13                                                                                      
000a02   f013                                                                                                               
000a04   0efd     MOVLW     0xfd                                                                                            
000a06   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000a08   ffe9                                                                                                               
000a0a   0efe     MOVLW     0xfe                                                                                            
000a0c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000a0e   ffea                                                                                                               
000a10   0e0c     MOVLW     0xc                                                                                             
000a12   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000a14   0e00     MOVLW     0x0                                                                                             
000a16   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000a18   cfee     MOVFF     0xfee,0x8                                                                                       
000a1a   f008                                                                                                               
000a1c   cfef     MOVFF     0xfef,0x9                                                                                       
000a1e   f009                                                                                                               
000a20   cfde     MOVFF     0xfde,0xc                                                                                       
000a22   f00c                                                                                                               
000a24   cfdd     MOVFF     0xfdd,0xd                                                                                       
000a26   f00d                                                                                                               
000a28   0efd     MOVLW     0xfd                                                                                            
000a2a   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000a2c   ffe9                                                                                                               
000a2e   0efe     MOVLW     0xfe                                                                                            
000a30   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000a32   ffea                                                                                                               
000a34   0e02     MOVLW     0x2                                                                                             
000a36   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000a38   0e00     MOVLW     0x0                                                                                             
000a3a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000a3c   50ee     MOVF      0xee,0x0,0x0                                                                                    
000a3e   5c0c     SUBWF     0xc,0x0,0x0                                                                                     
000a40   6e0a     MOVWF     0xa,0x0                                                                                         
000a42   50ee     MOVF      0xee,0x0,0x0                                                                                    
000a44   580d     SUBWFB    0xd,0x0,0x0                                                                                     
000a46   6e0b     MOVWF     0xb,0x0                                                                                         
000a48   0100     MOVLB     0x0                                                                                             
000a4a   500a     MOVF      0xa,0x0,0x0                                                                                     
000a4c   0208     MULWF     0x8,0x0                                                                                         
000a4e   cff3     MOVFF     0xff3,0x6                                                                                       
000a50   f006                                                                                                               
000a52   cff4     MOVFF     0xff4,0x7                                                                                       
000a54   f007                                                                                                               
000a56   0209     MULWF     0x9,0x0                                                                                         
000a58   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000a5a   2607     ADDWF     0x7,0x1,0x0                                                                                     
000a5c   500b     MOVF      0xb,0x0,0x0                                                                                     
000a5e   0208     MULWF     0x8,0x0                                                                                         
000a60   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000a62   2607     ADDWF     0x7,0x1,0x0                                                                                     
000a64   0efd     MOVLW     0xfd                                                                                            
000a66   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000a68   ffe9                                                                                                               
000a6a   0efe     MOVLW     0xfe                                                                                            
000a6c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000a6e   ffea                                                                                                               
000a70   0e0a     MOVLW     0xa                                                                                             
000a72   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000a74   0e00     MOVLW     0x0                                                                                             
000a76   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000a78   cfee     MOVFF     0xfee,0x4                                                                                       
000a7a   f004                                                                                                               
000a7c   cfef     MOVFF     0xfef,0x5                                                                                       
000a7e   f005                                                                                                               
000a80   c004     MOVFF     0x4,0x41                                                                                        
000a82   f041                                                                                                               
000a84   c005     MOVFF     0x5,0x42                                                                                        
000a86   f042                                                                                                               
000a88   cfde     MOVFF     0xfde,0x46                                                                                      
000a8a   f046                                                                                                               
000a8c   cfdd     MOVFF     0xfdd,0x47                                                                                      
000a8e   f047                                                                                                               
000a90   ecb6     CALL      0x556c,0x0                                                                                      
000a92   f02a                                                                                                               
000a94   503f     MOVF      0x3f,0x0,0x0                                                                                    
000a96   2406     ADDWF     0x6,0x0,0x0                                                                                     
000a98   6e02     MOVWF     0x2,0x0                                                                                         
000a9a   5040     MOVF      0x40,0x0,0x0                                                                                    
000a9c   2007     ADDWFC    0x7,0x0,0x0                                                                                     
000a9e   6e03     MOVWF     0x3,0x0                                                                                         
000aa0   0efd     MOVLW     0xfd                                                                                            
000aa2   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000aa4   ffe9                                                                                                               
000aa6   0efe     MOVLW     0xfe                                                                                            
000aa8   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000aaa   ffea                                                                                                               
000aac   0e04     MOVLW     0x4                                                                                             
000aae   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000ab0   0e00     MOVLW     0x0                                                                                             
000ab2   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000ab4   cfee     MOVFF     0xfee,0x10                                                                                      
000ab6   f010                                                                                                               
000ab8   cfef     MOVFF     0xfef,0x11                                                                                      
000aba   f011                                                                                                               
000abc   0efd     MOVLW     0xfd                                                                                            
000abe   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000ac0   ffe9                                                                                                               
000ac2   0efe     MOVLW     0xfe                                                                                            
000ac4   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000ac6   ffea                                                                                                               
000ac8   0e0e     MOVLW     0xe                                                                                             
000aca   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000acc   0e00     MOVLW     0x0                                                                                             
000ace   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000ad0   cfee     MOVFF     0xfee,0xe                                                                                       
000ad2   f00e                                                                                                               
000ad4   cfef     MOVFF     0xfef,0xf                                                                                       
000ad6   f00f                                                                                                               
000ad8   c00e     MOVFF     0xe,0x41                                                                                        
000ada   f041                                                                                                               
000adc   c00f     MOVFF     0xf,0x42                                                                                        
000ade   f042                                                                                                               
000ae0   c010     MOVFF     0x10,0x46                                                                                       
000ae2   f046                                                                                                               
000ae4   c011     MOVFF     0x11,0x47                                                                                       
000ae6   f047                                                                                                               
000ae8   ecb6     CALL      0x556c,0x0                                                                                      
000aea   f02a                                                                                                               
000aec   5002     MOVF      0x2,0x0,0x0                                                                                     
000aee   243f     ADDWF     0x3f,0x0,0x0                                                                                    
000af0   6e00     MOVWF     0x0,0x0                                                                                         
000af2   5003     MOVF      0x3,0x0,0x0                                                                                     
000af4   2040     ADDWFC    0x40,0x0,0x0                                                                                    
000af6   6e01     MOVWF     0x1,0x0                                                                                         
000af8   c000     MOVFF     0x0,0x41                                                                                        
000afa   f041                                                                                                               
000afc   c001     MOVFF     0x1,0x42                                                                                        
000afe   f042                                                                                                               
000b00   c012     MOVFF     0x12,0x46                                                                                       
000b02   f046                                                                                                               
000b04   c013     MOVFF     0x13,0x47                                                                                       
000b06   f047                                                                                                               
000b08   ec5c     CALL      0x54b8,0x0                                                                                      
000b0a   f02a                                                                                                               
000b0c   0e02     MOVLW     0x2                                                                                             
000b0e   c041     MOVFF     0x41,0xfdb                                                                                      
000b10   ffdb                                                                                                               
000b12   0e03     MOVLW     0x3                                                                                             
000b14   c042     MOVFF     0x42,0xfdb                                                                                      
000b16   ffdb                                                                                                               
000b18   0efd     MOVLW     0xfd           	p->PrevErr = Error;				//Save this error for next time                          C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000b1a   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000b1c   ffe9                                                                                                               
000b1e   0efe     MOVLW     0xfe                                                                                            
000b20   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000b22   ffea                                                                                                               
000b24   0e02     MOVLW     0x2                                                                                             
000b26   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000b28   0e00     MOVLW     0x0                                                                                             
000b2a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000b2c   cfde     MOVFF     0xfde,0xfee                                                                                     
000b2e   ffee                                                                                                               
000b30   cfdd     MOVFF     0xfdd,0xfed                                                                                     
000b32   ffed                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000b34   0e02     MOVLW     0x2                if (Drive >= 127)				//Accumulate Integral error only if not saturated; Remember this is 0 based - 127 is added later C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000b36   cfdb     MOVFF     0xfdb,0x0                                                                                       
000b38   f000                                                                                                               
000b3a   0e03     MOVLW     0x3                                                                                             
000b3c   cfdb     MOVFF     0xfdb,0x1                                                                                       
000b3e   f001                                                                                                               
000b40   90d8     BCF       0xd8,0x0,0x0                                                                                    
000b42   5001     MOVF      0x1,0x0,0x0                                                                                     
000b44   e604     BN        0xb4e                                                                                           
000b46   0e7f     MOVLW     0x7f                                                                                            
000b48   5c00     SUBWF     0x0,0x0,0x0                                                                                     
000b4a   0e00     MOVLW     0x0                                                                                             
000b4c   5801     SUBWFB    0x1,0x0,0x0                                                                                     
000b4e   e308     BNC       0xb60                                                                                           
000b50   0e7f     MOVLW     0x7f                      Drive = 127;				//Forward Limit                                       C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000b52   6ef3     MOVWF     0xf3,0x0                                                                                        
000b54   0e02     MOVLW     0x2                                                                                             
000b56   cff3     MOVFF     0xff3,0xfdb                                                                                     
000b58   ffdb                                                                                                               
000b5a   0e03     MOVLW     0x3                                                                                             
000b5c   6adb     CLRF      0xdb,0x0                                                                                        
000b5e   d027     BRA       0xbae              else if (Drive <= -127)                                                      C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000b60   0e02     MOVLW     0x2                                                                                             
000b62   cfdb     MOVFF     0xfdb,0x0                                                                                       
000b64   f000                                                                                                               
000b66   0e03     MOVLW     0x3                                                                                             
000b68   cfdb     MOVFF     0xfdb,0x1                                                                                       
000b6a   f001                                                                                                               
000b6c   3401     RLCF      0x1,0x0,0x0                                                                                     
000b6e   e304     BNC       0xb78                                                                                           
000b70   5000     MOVF      0x0,0x0,0x0                                                                                     
000b72   0881     SUBLW     0x81                                                                                            
000b74   0eff     MOVLW     0xff                                                                                            
000b76   5401     SUBFWB    0x1,0x0,0x0                                                                                     
000b78   e308     BNC       0xb8a                                                                                           
000b7a   0e81     MOVLW     0x81                   Drive = -127;				//Reverse Limit                                         C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000b7c   6ef3     MOVWF     0xf3,0x0                                                                                        
000b7e   0e02     MOVLW     0x2                                                                                             
000b80   cff3     MOVFF     0xff3,0xfdb                                                                                     
000b82   ffdb                                                                                                               
000b84   0e03     MOVLW     0x3                                                                                             
000b86   68db     SETF      0xdb,0x0                                                                                        
000b88   d012     BRA       0xbae              else                                                                         C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000b8a   cfde     MOVFF     0xfde,0x0      		p->Ierror += Error;			//Accumulate Error                                       C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000b8c   f000                                                                                                               
000b8e   cfdd     MOVFF     0xfdd,0x1                                                                                       
000b90   f001                                                                                                               
000b92   0efd     MOVLW     0xfd                                                                                            
000b94   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000b96   ffe9                                                                                                               
000b98   0efe     MOVLW     0xfe                                                                                            
000b9a   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000b9c   ffea                                                                                                               
000b9e   0e04     MOVLW     0x4                                                                                             
000ba0   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000ba2   0e00     MOVLW     0x0                                                                                             
000ba4   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000ba6   5000     MOVF      0x0,0x0,0x0                                                                                     
000ba8   26ee     ADDWF     0xee,0x1,0x0                                                                                    
000baa   5001     MOVF      0x1,0x0,0x0                                                                                     
000bac   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000bae   0e02     MOVLW     0x2            	return (p->Drive = (Drive*motor_direction)+127); //Adjust direction             C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000bb0   cfdb     MOVFF     0xfdb,0x41                                                                                      
000bb2   f041                                                                                                               
000bb4   0e03     MOVLW     0x3                                                                                             
000bb6   cfdb     MOVFF     0xfdb,0x42                                                                                      
000bb8   f042                                                                                                               
000bba   0ef7     MOVLW     0xf7                                                                                            
000bbc   cfdb     MOVFF     0xfdb,0x46                                                                                      
000bbe   f046                                                                                                               
000bc0   0ef8     MOVLW     0xf8                                                                                            
000bc2   cfdb     MOVFF     0xfdb,0x47                                                                                      
000bc4   f047                                                                                                               
000bc6   ecb6     CALL      0x556c,0x0                                                                                      
000bc8   f02a                                                                                                               
000bca   c03f     MOVFF     0x3f,0x0                                                                                        
000bcc   f000                                                                                                               
000bce   c040     MOVFF     0x40,0x1                                                                                        
000bd0   f001                                                                                                               
000bd2   0e7f     MOVLW     0x7f                                                                                            
000bd4   2600     ADDWF     0x0,0x1,0x0                                                                                     
000bd6   0e00     MOVLW     0x0                                                                                             
000bd8   2201     ADDWFC    0x1,0x1,0x0                                                                                     
000bda   0efd     MOVLW     0xfd                                                                                            
000bdc   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000bde   ffe9                                                                                                               
000be0   0efe     MOVLW     0xfe                                                                                            
000be2   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000be4   ffea                                                                                                               
000be6   0e12     MOVLW     0x12                                                                                            
000be8   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000bea   0e00     MOVLW     0x0                                                                                             
000bec   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000bee   c000     MOVFF     0x0,0xfee                                                                                       
000bf0   ffee                                                                                                               
000bf2   c001     MOVFF     0x1,0xfed                                                                                       
000bf4   ffed                                                                                                               
000bf6   c000     MOVFF     0x0,0xff3                                                                                       
000bf8   fff3                                                                                                               
000bfa   c001     MOVFF     0x1,0xff4                                                                                       
000bfc   fff4                                                                                                               
000bfe   d000     BRA       0xc00                                                                                           
000c00   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000c02   ffe1                                                                                                               
000c04   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000c06   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
000c08   ffd9                                                                                                               
000c0a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           //Served us well, but perhaps it could use a little review                       C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000c0c   cfd9     MOVFF     0xfd9,0xfe6    int doVelPid(VelServo *p, long encoder, int motor_direction)                     C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000c0e   ffe6                                                                                                               
000c10   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
000c12   ffd9                                                                                                               
000c14   0e08     MOVLW     0x8                                                                                             
000c16   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000c18   6ade     CLRF      0xde,0x0       	long encVel = 0;                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000c1a   6ade     CLRF      0xde,0x0                                                                                        
000c1c   6ade     CLRF      0xde,0x0                                                                                        
000c1e   6add     CLRF      0xdd,0x0                                                                                        
000c20   52dd     MOVF      0xdd,0x1,0x0                                                                                    
000c22   52dd     MOVF      0xdd,0x1,0x0                                                                                    
                                           	int velErr,Drive;                                                               C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000c24   0efd     MOVLW     0xfd           	if(p->Mode)                                                                     C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000c26   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000c28   ffe9                                                                                                               
000c2a   0efe     MOVLW     0xfe                                                                                            
000c2c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000c2e   ffea                                                                                                               
000c30   50ee     MOVF      0xee,0x0,0x0                                                                                    
000c32   10ed     IORWF     0xed,0x0,0x0                                                                                    
000c34   e101     BNZ       0xc38                                                                                           
000c36   d088     BRA       0xd48                                                                                           
000c38   0efd     MOVLW     0xfd           		p->Vsetpoint = ((p->Psetpoint - encoder)*p->Kp)/p->Ko;		//Position Ctrl Loop; sent to Velocity Ctrl Loop C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000c3a   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000c3c   ffe9                                                                                                               
000c3e   0efe     MOVLW     0xfe                                                                                            
000c40   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000c42   ffea                                                                                                               
000c44   0e1e     MOVLW     0x1e                                                                                            
000c46   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000c48   0e00     MOVLW     0x0                                                                                             
000c4a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000c4c   cfee     MOVFF     0xfee,0x12                                                                                      
000c4e   f012                                                                                                               
000c50   cfef     MOVFF     0xfef,0x13                                                                                      
000c52   f013                                                                                                               
000c54   6a14     CLRF      0x14,0x0                                                                                        
000c56   6a15     CLRF      0x15,0x0                                                                                        
000c58   ae13     BTFSS     0x13,0x7,0x0                                                                                    
000c5a   d002     BRA       0xc60                                                                                           
000c5c   6814     SETF      0x14,0x0                                                                                        
000c5e   6815     SETF      0x15,0x0                                                                                        
000c60   0efd     MOVLW     0xfd                                                                                            
000c62   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000c64   ffe9                                                                                                               
000c66   0efe     MOVLW     0xfe                                                                                            
000c68   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000c6a   ffea                                                                                                               
000c6c   0e18     MOVLW     0x18                                                                                            
000c6e   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000c70   0e00     MOVLW     0x0                                                                                             
000c72   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000c74   cfee     MOVFF     0xfee,0xe                                                                                       
000c76   f00e                                                                                                               
000c78   cfef     MOVFF     0xfef,0xf                                                                                       
000c7a   f00f                                                                                                               
000c7c   6a10     CLRF      0x10,0x0                                                                                        
000c7e   6a11     CLRF      0x11,0x0                                                                                        
000c80   ae0f     BTFSS     0xf,0x7,0x0                                                                                     
000c82   d002     BRA       0xc88                                                                                           
000c84   6810     SETF      0x10,0x0                                                                                        
000c86   6811     SETF      0x11,0x0                                                                                        
000c88   0ef9     MOVLW     0xf9                                                                                            
000c8a   cfdb     MOVFF     0xfdb,0xa                                                                                       
000c8c   f00a                                                                                                               
000c8e   0efa     MOVLW     0xfa                                                                                            
000c90   cfdb     MOVFF     0xfdb,0xb                                                                                       
000c92   f00b                                                                                                               
000c94   0efb     MOVLW     0xfb                                                                                            
000c96   cfdb     MOVFF     0xfdb,0xc                                                                                       
000c98   f00c                                                                                                               
000c9a   0efc     MOVLW     0xfc                                                                                            
000c9c   cfdb     MOVFF     0xfdb,0xd                                                                                       
000c9e   f00d                                                                                                               
000ca0   0efd     MOVLW     0xfd                                                                                            
000ca2   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000ca4   ffe9                                                                                                               
000ca6   0efe     MOVLW     0xfe                                                                                            
000ca8   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000caa   ffea                                                                                                               
000cac   0e02     MOVLW     0x2                                                                                             
000cae   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000cb0   0e00     MOVLW     0x0                                                                                             
000cb2   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000cb4   500a     MOVF      0xa,0x0,0x0                                                                                     
000cb6   5cee     SUBWF     0xee,0x0,0x0                                                                                    
000cb8   6e06     MOVWF     0x6,0x0                                                                                         
000cba   500b     MOVF      0xb,0x0,0x0                                                                                     
000cbc   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
000cbe   6e07     MOVWF     0x7,0x0                                                                                         
000cc0   500c     MOVF      0xc,0x0,0x0                                                                                     
000cc2   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
000cc4   6e08     MOVWF     0x8,0x0                                                                                         
000cc6   500d     MOVF      0xd,0x0,0x0                                                                                     
000cc8   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
000cca   6e09     MOVWF     0x9,0x0                                                                                         
000ccc   c006     MOVFF     0x6,0x3f                                                                                        
000cce   f03f                                                                                                               
000cd0   c007     MOVFF     0x7,0x40                                                                                        
000cd2   f040                                                                                                               
000cd4   c008     MOVFF     0x8,0x41                                                                                        
000cd6   f041                                                                                                               
000cd8   c009     MOVFF     0x9,0x42                                                                                        
000cda   f042                                                                                                               
000cdc   c00e     MOVFF     0xe,0x44                                                                                        
000cde   f044                                                                                                               
000ce0   c00f     MOVFF     0xf,0x45                                                                                        
000ce2   f045                                                                                                               
000ce4   c010     MOVFF     0x10,0x46                                                                                       
000ce6   f046                                                                                                               
000ce8   c011     MOVFF     0x11,0x47                                                                                       
000cea   f047                                                                                                               
000cec   ec41     CALL      0x5882,0x0                                                                                      
000cee   f02c                                                                                                               
000cf0   c03b     MOVFF     0x3b,0x2                                                                                        
000cf2   f002                                                                                                               
000cf4   c03c     MOVFF     0x3c,0x3                                                                                        
000cf6   f003                                                                                                               
000cf8   c03d     MOVFF     0x3d,0x4                                                                                        
000cfa   f004                                                                                                               
000cfc   c03e     MOVFF     0x3e,0x5                                                                                        
000cfe   f005                                                                                                               
000d00   c002     MOVFF     0x2,0x3f                                                                                        
000d02   f03f                                                                                                               
000d04   c003     MOVFF     0x3,0x40                                                                                        
000d06   f040                                                                                                               
000d08   c004     MOVFF     0x4,0x41                                                                                        
000d0a   f041                                                                                                               
000d0c   c005     MOVFF     0x5,0x42                                                                                        
000d0e   f042                                                                                                               
000d10   c012     MOVFF     0x12,0x44                                                                                       
000d12   f044                                                                                                               
000d14   c013     MOVFF     0x13,0x45                                                                                       
000d16   f045                                                                                                               
000d18   c014     MOVFF     0x14,0x46                                                                                       
000d1a   f046                                                                                                               
000d1c   c015     MOVFF     0x15,0x47                                                                                       
000d1e   f047                                                                                                               
000d20   ec82     CALL      0x5504,0x0                                                                                      
000d22   f02a                                                                                                               
000d24   c03f     MOVFF     0x3f,0x0                                                                                        
000d26   f000                                                                                                               
000d28   c040     MOVFF     0x40,0x1                                                                                        
000d2a   f001                                                                                                               
000d2c   0efd     MOVLW     0xfd                                                                                            
000d2e   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000d30   ffe9                                                                                                               
000d32   0efe     MOVLW     0xfe                                                                                            
000d34   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000d36   ffea                                                                                                               
000d38   0e06     MOVLW     0x6                                                                                             
000d3a   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000d3c   0e00     MOVLW     0x0                                                                                             
000d3e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000d40   c000     MOVFF     0x0,0xfee                                                                                       
000d42   ffee                                                                                                               
000d44   c001     MOVFF     0x1,0xfed                                                                                       
000d46   ffed                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000d48   0efd     MOVLW     0xfd           	if(p->Vsetpoint > p->velLim)									//Enforce Veloctiy Limit                   C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000d4a   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000d4c   ffe9                                                                                                               
000d4e   0efe     MOVLW     0xfe                                                                                            
000d50   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000d52   ffea                                                                                                               
000d54   0e06     MOVLW     0x6                                                                                             
000d56   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000d58   0e00     MOVLW     0x0                                                                                             
000d5a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000d5c   cfee     MOVFF     0xfee,0x0                                                                                       
000d5e   f000                                                                                                               
000d60   cfef     MOVFF     0xfef,0x1                                                                                       
000d62   f001                                                                                                               
000d64   0efd     MOVLW     0xfd                                                                                            
000d66   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000d68   ffe9                                                                                                               
000d6a   0efe     MOVLW     0xfe                                                                                            
000d6c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000d6e   ffea                                                                                                               
000d70   0e14     MOVLW     0x14                                                                                            
000d72   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000d74   0e00     MOVLW     0x0                                                                                             
000d76   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000d78   cfee     MOVFF     0xfee,0x2                                                                                       
000d7a   f002                                                                                                               
000d7c   cfef     MOVFF     0xfef,0x3                                                                                       
000d7e   f003                                                                                                               
000d80   5003     MOVF      0x3,0x0,0x0                                                                                     
000d82   1801     XORWF     0x1,0x0,0x0                                                                                     
000d84   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
000d86   d002     BRA       0xd8c                                                                                           
000d88   3401     RLCF      0x1,0x0,0x0                                                                                     
000d8a   d004     BRA       0xd94                                                                                           
000d8c   5000     MOVF      0x0,0x0,0x0                                                                                     
000d8e   5c02     SUBWF     0x2,0x0,0x0                                                                                     
000d90   5001     MOVF      0x1,0x0,0x0                                                                                     
000d92   5803     SUBWFB    0x3,0x0,0x0                                                                                     
000d94   e21d     BC        0xdd0                                                                                           
000d96   0efd     MOVLW     0xfd           		p->Vsetpoint = p->velLim;                                                      C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000d98   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000d9a   ffe9                                                                                                               
000d9c   0efe     MOVLW     0xfe                                                                                            
000d9e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000da0   ffea                                                                                                               
000da2   0e14     MOVLW     0x14                                                                                            
000da4   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000da6   0e00     MOVLW     0x0                                                                                             
000da8   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000daa   cfee     MOVFF     0xfee,0x0                                                                                       
000dac   f000                                                                                                               
000dae   cfef     MOVFF     0xfef,0x1                                                                                       
000db0   f001                                                                                                               
000db2   0efd     MOVLW     0xfd                                                                                            
000db4   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000db6   ffe9                                                                                                               
000db8   0efe     MOVLW     0xfe                                                                                            
000dba   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000dbc   ffea                                                                                                               
000dbe   0e06     MOVLW     0x6                                                                                             
000dc0   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000dc2   0e00     MOVLW     0x0                                                                                             
000dc4   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000dc6   c000     MOVFF     0x0,0xfee                                                                                       
000dc8   ffee                                                                                                               
000dca   c001     MOVFF     0x1,0xfed                                                                                       
000dcc   ffed                                                                                                               
000dce   d049     BRA       0xe62          	else if (p->Vsetpoint < -p->velLim)                                             C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000dd0   0efd     MOVLW     0xfd                                                                                            
000dd2   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000dd4   ffe9                                                                                                               
000dd6   0efe     MOVLW     0xfe                                                                                            
000dd8   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000dda   ffea                                                                                                               
000ddc   0e06     MOVLW     0x6                                                                                             
000dde   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000de0   0e00     MOVLW     0x0                                                                                             
000de2   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000de4   cfee     MOVFF     0xfee,0x0                                                                                       
000de6   f000                                                                                                               
000de8   cfef     MOVFF     0xfef,0x1                                                                                       
000dea   f001                                                                                                               
000dec   0efd     MOVLW     0xfd                                                                                            
000dee   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000df0   ffe9                                                                                                               
000df2   0efe     MOVLW     0xfe                                                                                            
000df4   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000df6   ffea                                                                                                               
000df8   0e14     MOVLW     0x14                                                                                            
000dfa   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000dfc   0e00     MOVLW     0x0                                                                                             
000dfe   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000e00   cfee     MOVFF     0xfee,0x2                                                                                       
000e02   f002                                                                                                               
000e04   cfef     MOVFF     0xfef,0x3                                                                                       
000e06   f003                                                                                                               
000e08   6c02     NEGF      0x2,0x0                                                                                         
000e0a   1e03     COMF      0x3,0x1,0x0                                                                                     
000e0c   2203     ADDWFC    0x3,0x1,0x0                                                                                     
000e0e   5001     MOVF      0x1,0x0,0x0                                                                                     
000e10   1803     XORWF     0x3,0x0,0x0                                                                                     
000e12   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
000e14   d002     BRA       0xe1a                                                                                           
000e16   3403     RLCF      0x3,0x0,0x0                                                                                     
000e18   d004     BRA       0xe22                                                                                           
000e1a   5002     MOVF      0x2,0x0,0x0                                                                                     
000e1c   5c00     SUBWF     0x0,0x0,0x0                                                                                     
000e1e   5003     MOVF      0x3,0x0,0x0                                                                                     
000e20   5801     SUBWFB    0x1,0x0,0x0                                                                                     
000e22   e21f     BC        0xe62                                                                                           
000e24   0efd     MOVLW     0xfd           		p->Vsetpoint = -p->velLim;                                                     C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000e26   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000e28   ffe9                                                                                                               
000e2a   0efe     MOVLW     0xfe                                                                                            
000e2c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000e2e   ffea                                                                                                               
000e30   0e14     MOVLW     0x14                                                                                            
000e32   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000e34   0e00     MOVLW     0x0                                                                                             
000e36   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000e38   cfee     MOVFF     0xfee,0x0                                                                                       
000e3a   f000                                                                                                               
000e3c   cfef     MOVFF     0xfef,0x1                                                                                       
000e3e   f001                                                                                                               
000e40   6c00     NEGF      0x0,0x0                                                                                         
000e42   1e01     COMF      0x1,0x1,0x0                                                                                     
000e44   2201     ADDWFC    0x1,0x1,0x0                                                                                     
000e46   0efd     MOVLW     0xfd                                                                                            
000e48   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000e4a   ffe9                                                                                                               
000e4c   0efe     MOVLW     0xfe                                                                                            
000e4e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000e50   ffea                                                                                                               
000e52   0e06     MOVLW     0x6                                                                                             
000e54   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000e56   0e00     MOVLW     0x0                                                                                             
000e58   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000e5a   c000     MOVFF     0x0,0xfee                                                                                       
000e5c   ffee                                                                                                               
000e5e   c001     MOVFF     0x1,0xfed                                                                                       
000e60   ffed                                                                                                               
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000e62   0ef9     MOVLW     0xf9           	p->vel = (encoder - p->PrevEnc);								//Update velocity property              C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000e64   cfdb     MOVFF     0xfdb,0x4                                                                                       
000e66   f004                                                                                                               
000e68   0efa     MOVLW     0xfa                                                                                            
000e6a   cfdb     MOVFF     0xfdb,0x5                                                                                       
000e6c   f005                                                                                                               
000e6e   0efb     MOVLW     0xfb                                                                                            
000e70   cfdb     MOVFF     0xfdb,0x6                                                                                       
000e72   f006                                                                                                               
000e74   0efc     MOVLW     0xfc                                                                                            
000e76   cfdb     MOVFF     0xfdb,0x7                                                                                       
000e78   f007                                                                                                               
000e7a   0efd     MOVLW     0xfd                                                                                            
000e7c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000e7e   ffe9                                                                                                               
000e80   0efe     MOVLW     0xfe                                                                                            
000e82   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000e84   ffea                                                                                                               
000e86   0e08     MOVLW     0x8                                                                                             
000e88   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000e8a   0e00     MOVLW     0x0                                                                                             
000e8c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000e8e   50ee     MOVF      0xee,0x0,0x0                                                                                    
000e90   5c04     SUBWF     0x4,0x0,0x0                                                                                     
000e92   6e00     MOVWF     0x0,0x0                                                                                         
000e94   50ee     MOVF      0xee,0x0,0x0                                                                                    
000e96   5805     SUBWFB    0x5,0x0,0x0                                                                                     
000e98   6e01     MOVWF     0x1,0x0                                                                                         
000e9a   50ee     MOVF      0xee,0x0,0x0                                                                                    
000e9c   5806     SUBWFB    0x6,0x0,0x0                                                                                     
000e9e   6e02     MOVWF     0x2,0x0                                                                                         
000ea0   50ee     MOVF      0xee,0x0,0x0                                                                                    
000ea2   5807     SUBWFB    0x7,0x0,0x0                                                                                     
000ea4   6e03     MOVWF     0x3,0x0                                                                                         
000ea6   0efd     MOVLW     0xfd                                                                                            
000ea8   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000eaa   ffe9                                                                                                               
000eac   0efe     MOVLW     0xfe                                                                                            
000eae   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000eb0   ffea                                                                                                               
000eb2   0e16     MOVLW     0x16                                                                                            
000eb4   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000eb6   0e00     MOVLW     0x0                                                                                             
000eb8   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000eba   c000     MOVFF     0x0,0xfee                                                                                       
000ebc   ffee                                                                                                               
000ebe   c001     MOVFF     0x1,0xfed                                                                                       
000ec0   ffed                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000ec2   0efd     MOVLW     0xfd           	velErr = p->Vsetpoint - p->vel;									//Velocity Error                        C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000ec4   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000ec6   ffe9                                                                                                               
000ec8   0efe     MOVLW     0xfe                                                                                            
000eca   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000ecc   ffea                                                                                                               
000ece   0e06     MOVLW     0x6                                                                                             
000ed0   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000ed2   0e00     MOVLW     0x0                                                                                             
000ed4   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000ed6   cfee     MOVFF     0xfee,0x2                                                                                       
000ed8   f002                                                                                                               
000eda   cfef     MOVFF     0xfef,0x3                                                                                       
000edc   f003                                                                                                               
000ede   0efd     MOVLW     0xfd                                                                                            
000ee0   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000ee2   ffe9                                                                                                               
000ee4   0efe     MOVLW     0xfe                                                                                            
000ee6   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000ee8   ffea                                                                                                               
000eea   0e16     MOVLW     0x16                                                                                            
000eec   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000eee   0e00     MOVLW     0x0                                                                                             
000ef0   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000ef2   50ee     MOVF      0xee,0x0,0x0                                                                                    
000ef4   5c02     SUBWF     0x2,0x0,0x0                                                                                     
000ef6   6e00     MOVWF     0x0,0x0                                                                                         
000ef8   50ee     MOVF      0xee,0x0,0x0                                                                                    
000efa   5803     SUBWFB    0x3,0x0,0x0                                                                                     
000efc   6e01     MOVWF     0x1,0x0                                                                                         
000efe   0e04     MOVLW     0x4                                                                                             
000f00   c000     MOVFF     0x0,0xfdb                                                                                       
000f02   ffdb                                                                                                               
000f04   0e05     MOVLW     0x5                                                                                             
000f06   c001     MOVFF     0x1,0xfdb                                                                                       
000f08   ffdb                                                                                                               
000f0a   0efd     MOVLW     0xfd           	Drive = ((velErr + (p->Kvi*p->Ierr)/p->Ko)*p->Kvp)/p->Ko;		//Velocity Ctrl Loop: ((velErr + (Iterm/Ko))*Kvp)/Ko C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
000f0c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000f0e   ffe9                                                                                                               
000f10   0efe     MOVLW     0xfe                                                                                            
000f12   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000f14   ffea                                                                                                               
000f16   0e1e     MOVLW     0x1e                                                                                            
000f18   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000f1a   0e00     MOVLW     0x0                                                                                             
000f1c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000f1e   cfee     MOVFF     0xfee,0x20                                                                                      
000f20   f020                                                                                                               
000f22   cfef     MOVFF     0xfef,0x21                                                                                      
000f24   f021                                                                                                               
000f26   6a22     CLRF      0x22,0x0                                                                                        
000f28   6a23     CLRF      0x23,0x0                                                                                        
000f2a   ae21     BTFSS     0x21,0x7,0x0                                                                                    
000f2c   d002     BRA       0xf32                                                                                           
000f2e   6822     SETF      0x22,0x0                                                                                        
000f30   6823     SETF      0x23,0x0                                                                                        
000f32   0efd     MOVLW     0xfd                                                                                            
000f34   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000f36   ffe9                                                                                                               
000f38   0efe     MOVLW     0xfe                                                                                            
000f3a   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000f3c   ffea                                                                                                               
000f3e   0e1a     MOVLW     0x1a                                                                                            
000f40   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000f42   0e00     MOVLW     0x0                                                                                             
000f44   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000f46   cfee     MOVFF     0xfee,0x1c                                                                                      
000f48   f01c                                                                                                               
000f4a   cfef     MOVFF     0xfef,0x1d                                                                                      
000f4c   f01d                                                                                                               
000f4e   6a1e     CLRF      0x1e,0x0                                                                                        
000f50   6a1f     CLRF      0x1f,0x0                                                                                        
000f52   ae1d     BTFSS     0x1d,0x7,0x0                                                                                    
000f54   d002     BRA       0xf5a                                                                                           
000f56   681e     SETF      0x1e,0x0                                                                                        
000f58   681f     SETF      0x1f,0x0                                                                                        
000f5a   0e04     MOVLW     0x4                                                                                             
000f5c   cfdb     MOVFF     0xfdb,0x8                                                                                       
000f5e   f008                                                                                                               
000f60   0e05     MOVLW     0x5                                                                                             
000f62   cfdb     MOVFF     0xfdb,0x9                                                                                       
000f64   f009                                                                                                               
000f66   6a0a     CLRF      0xa,0x0                                                                                         
000f68   6a0b     CLRF      0xb,0x0                                                                                         
000f6a   ae09     BTFSS     0x9,0x7,0x0                                                                                     
000f6c   d002     BRA       0xf72                                                                                           
000f6e   680a     SETF      0xa,0x0                                                                                         
000f70   680b     SETF      0xb,0x0                                                                                         
000f72   0efd     MOVLW     0xfd                                                                                            
000f74   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000f76   ffe9                                                                                                               
000f78   0efe     MOVLW     0xfe                                                                                            
000f7a   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000f7c   ffea                                                                                                               
000f7e   0e1e     MOVLW     0x1e                                                                                            
000f80   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000f82   0e00     MOVLW     0x0                                                                                             
000f84   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000f86   cfee     MOVFF     0xfee,0x18                                                                                      
000f88   f018                                                                                                               
000f8a   cfef     MOVFF     0xfef,0x19                                                                                      
000f8c   f019                                                                                                               
000f8e   6a1a     CLRF      0x1a,0x0                                                                                        
000f90   6a1b     CLRF      0x1b,0x0                                                                                        
000f92   ae19     BTFSS     0x19,0x7,0x0                                                                                    
000f94   d002     BRA       0xf9a                                                                                           
000f96   681a     SETF      0x1a,0x0                                                                                        
000f98   681b     SETF      0x1b,0x0                                                                                        
000f9a   0efd     MOVLW     0xfd                                                                                            
000f9c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000f9e   ffe9                                                                                                               
000fa0   0efe     MOVLW     0xfe                                                                                            
000fa2   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000fa4   ffea                                                                                                               
000fa6   0e0c     MOVLW     0xc                                                                                             
000fa8   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000faa   0e00     MOVLW     0x0                                                                                             
000fac   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000fae   cfee     MOVFF     0xfee,0x14                                                                                      
000fb0   f014                                                                                                               
000fb2   cfee     MOVFF     0xfee,0x15                                                                                      
000fb4   f015                                                                                                               
000fb6   cfee     MOVFF     0xfee,0x16                                                                                      
000fb8   f016                                                                                                               
000fba   cfef     MOVFF     0xfef,0x17                                                                                      
000fbc   f017                                                                                                               
000fbe   0efd     MOVLW     0xfd                                                                                            
000fc0   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000fc2   ffe9                                                                                                               
000fc4   0efe     MOVLW     0xfe                                                                                            
000fc6   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000fc8   ffea                                                                                                               
000fca   0e1c     MOVLW     0x1c                                                                                            
000fcc   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000fce   0e00     MOVLW     0x0                                                                                             
000fd0   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000fd2   cfee     MOVFF     0xfee,0x10                                                                                      
000fd4   f010                                                                                                               
000fd6   cfef     MOVFF     0xfef,0x11                                                                                      
000fd8   f011                                                                                                               
000fda   6a12     CLRF      0x12,0x0                                                                                        
000fdc   6a13     CLRF      0x13,0x0                                                                                        
000fde   ae11     BTFSS     0x11,0x7,0x0                                                                                    
000fe0   d002     BRA       0xfe6                                                                                           
000fe2   6812     SETF      0x12,0x0                                                                                        
000fe4   6813     SETF      0x13,0x0                                                                                        
000fe6   c010     MOVFF     0x10,0x3f                                                                                       
000fe8   f03f                                                                                                               
000fea   c011     MOVFF     0x11,0x40                                                                                       
000fec   f040                                                                                                               
000fee   c012     MOVFF     0x12,0x41                                                                                       
000ff0   f041                                                                                                               
000ff2   c013     MOVFF     0x13,0x42                                                                                       
000ff4   f042                                                                                                               
000ff6   c014     MOVFF     0x14,0x44                                                                                       
000ff8   f044                                                                                                               
000ffa   c015     MOVFF     0x15,0x45                                                                                       
000ffc   f045                                                                                                               
000ffe   c016     MOVFF     0x16,0x46                                                                                       
001000   f046                                                                                                               
001002   c017     MOVFF     0x17,0x47                                                                                       
001004   f047                                                                                                               
001006   ec41     CALL      0x5882,0x0                                                                                      
001008   f02c                                                                                                               
00100a   c03b     MOVFF     0x3b,0xc                                                                                        
00100c   f00c                                                                                                               
00100e   c03c     MOVFF     0x3c,0xd                                                                                        
001010   f00d                                                                                                               
001012   c03d     MOVFF     0x3d,0xe                                                                                        
001014   f00e                                                                                                               
001016   c03e     MOVFF     0x3e,0xf                                                                                        
001018   f00f                                                                                                               
00101a   c00c     MOVFF     0xc,0x3f                                                                                        
00101c   f03f                                                                                                               
00101e   c00d     MOVFF     0xd,0x40                                                                                        
001020   f040                                                                                                               
001022   c00e     MOVFF     0xe,0x41                                                                                        
001024   f041                                                                                                               
001026   c00f     MOVFF     0xf,0x42                                                                                        
001028   f042                                                                                                               
00102a   c018     MOVFF     0x18,0x44                                                                                       
00102c   f044                                                                                                               
00102e   c019     MOVFF     0x19,0x45                                                                                       
001030   f045                                                                                                               
001032   c01a     MOVFF     0x1a,0x46                                                                                       
001034   f046                                                                                                               
001036   c01b     MOVFF     0x1b,0x47                                                                                       
001038   f047                                                                                                               
00103a   ec82     CALL      0x5504,0x0                                                                                      
00103c   f02a                                                                                                               
00103e   5008     MOVF      0x8,0x0,0x0                                                                                     
001040   243f     ADDWF     0x3f,0x0,0x0                                                                                    
001042   6e04     MOVWF     0x4,0x0                                                                                         
001044   5009     MOVF      0x9,0x0,0x0                                                                                     
001046   2040     ADDWFC    0x40,0x0,0x0                                                                                    
001048   6e05     MOVWF     0x5,0x0                                                                                         
00104a   500a     MOVF      0xa,0x0,0x0                                                                                     
00104c   2041     ADDWFC    0x41,0x0,0x0                                                                                    
00104e   6e06     MOVWF     0x6,0x0                                                                                         
001050   500b     MOVF      0xb,0x0,0x0                                                                                     
001052   2042     ADDWFC    0x42,0x0,0x0                                                                                    
001054   6e07     MOVWF     0x7,0x0                                                                                         
001056   c004     MOVFF     0x4,0x3f                                                                                        
001058   f03f                                                                                                               
00105a   c005     MOVFF     0x5,0x40                                                                                        
00105c   f040                                                                                                               
00105e   c006     MOVFF     0x6,0x41                                                                                        
001060   f041                                                                                                               
001062   c007     MOVFF     0x7,0x42                                                                                        
001064   f042                                                                                                               
001066   c01c     MOVFF     0x1c,0x44                                                                                       
001068   f044                                                                                                               
00106a   c01d     MOVFF     0x1d,0x45                                                                                       
00106c   f045                                                                                                               
00106e   c01e     MOVFF     0x1e,0x46                                                                                       
001070   f046                                                                                                               
001072   c01f     MOVFF     0x1f,0x47                                                                                       
001074   f047                                                                                                               
001076   ec41     CALL      0x5882,0x0                                                                                      
001078   f02c                                                                                                               
00107a   c03b     MOVFF     0x3b,0x0                                                                                        
00107c   f000                                                                                                               
00107e   c03c     MOVFF     0x3c,0x1                                                                                        
001080   f001                                                                                                               
001082   c03d     MOVFF     0x3d,0x2                                                                                        
001084   f002                                                                                                               
001086   c03e     MOVFF     0x3e,0x3                                                                                        
001088   f003                                                                                                               
00108a   c000     MOVFF     0x0,0x3f                                                                                        
00108c   f03f                                                                                                               
00108e   c001     MOVFF     0x1,0x40                                                                                        
001090   f040                                                                                                               
001092   c002     MOVFF     0x2,0x41                                                                                        
001094   f041                                                                                                               
001096   c003     MOVFF     0x3,0x42                                                                                        
001098   f042                                                                                                               
00109a   c020     MOVFF     0x20,0x44                                                                                       
00109c   f044                                                                                                               
00109e   c021     MOVFF     0x21,0x45                                                                                       
0010a0   f045                                                                                                               
0010a2   c022     MOVFF     0x22,0x46                                                                                       
0010a4   f046                                                                                                               
0010a6   c023     MOVFF     0x23,0x47                                                                                       
0010a8   f047                                                                                                               
0010aa   ec82     CALL      0x5504,0x0                                                                                      
0010ac   f02a                                                                                                               
0010ae   0e06     MOVLW     0x6                                                                                             
0010b0   c03f     MOVFF     0x3f,0xfdb                                                                                      
0010b2   ffdb                                                                                                               
0010b4   0e07     MOVLW     0x7                                                                                             
0010b6   c040     MOVFF     0x40,0xfdb                                                                                      
0010b8   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0010ba   0efd     MOVLW     0xfd           	p->PrevEnc = encoder;                                                           C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0010bc   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0010be   ffe9                                                                                                               
0010c0   0efe     MOVLW     0xfe                                                                                            
0010c2   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0010c4   ffea                                                                                                               
0010c6   0e08     MOVLW     0x8                                                                                             
0010c8   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0010ca   0e00     MOVLW     0x0                                                                                             
0010cc   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0010ce   0ef9     MOVLW     0xf9                                                                                            
0010d0   cfdb     MOVFF     0xfdb,0xfee                                                                                     
0010d2   ffee                                                                                                               
0010d4   0efa     MOVLW     0xfa                                                                                            
0010d6   cfdb     MOVFF     0xfdb,0xfee                                                                                     
0010d8   ffee                                                                                                               
0010da   0efb     MOVLW     0xfb                                                                                            
0010dc   cfdb     MOVFF     0xfdb,0xfee                                                                                     
0010de   ffee                                                                                                               
0010e0   0efc     MOVLW     0xfc                                                                                            
0010e2   cfdb     MOVFF     0xfdb,0xfee                                                                                     
0010e4   ffee                                                                                                               
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0010e6   0e06     MOVLW     0x6            	if(Drive > 127)													//Limit drive output                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0010e8   cfdb     MOVFF     0xfdb,0x0                                                                                       
0010ea   f000                                                                                                               
0010ec   0e07     MOVLW     0x7                                                                                             
0010ee   cfdb     MOVFF     0xfdb,0x1                                                                                       
0010f0   f001                                                                                                               
0010f2   3401     RLCF      0x1,0x0,0x0                                                                                     
0010f4   e204     BC        0x10fe                                                                                          
0010f6   5000     MOVF      0x0,0x0,0x0                                                                                     
0010f8   087f     SUBLW     0x7f                                                                                            
0010fa   0e00     MOVLW     0x0                                                                                             
0010fc   5401     SUBFWB    0x1,0x0,0x0                                                                                     
0010fe   e208     BC        0x1110                                                                                          
001100   0e7f     MOVLW     0x7f           		Drive = 127;                                                                   C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001102   6ef3     MOVWF     0xf3,0x0                                                                                        
001104   0e06     MOVLW     0x6                                                                                             
001106   cff3     MOVFF     0xff3,0xfdb                                                                                     
001108   ffdb                                                                                                               
00110a   0e07     MOVLW     0x7                                                                                             
00110c   6adb     CLRF      0xdb,0x0                                                                                        
00110e   d034     BRA       0x1178         	else if (Drive < -127)                                                          C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001110   0e06     MOVLW     0x6                                                                                             
001112   cfdb     MOVFF     0xfdb,0x0                                                                                       
001114   f000                                                                                                               
001116   0e07     MOVLW     0x7                                                                                             
001118   cfdb     MOVFF     0xfdb,0x1                                                                                       
00111a   f001                                                                                                               
00111c   80d8     BSF       0xd8,0x0,0x0                                                                                    
00111e   5001     MOVF      0x1,0x0,0x0                                                                                     
001120   e704     BNN       0x112a                                                                                          
001122   0e81     MOVLW     0x81                                                                                            
001124   5c00     SUBWF     0x0,0x0,0x0                                                                                     
001126   0eff     MOVLW     0xff                                                                                            
001128   5801     SUBWFB    0x1,0x0,0x0                                                                                     
00112a   e208     BC        0x113c                                                                                          
00112c   0e81     MOVLW     0x81           		Drive = -127;                                                                  C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00112e   6ef3     MOVWF     0xf3,0x0                                                                                        
001130   0e06     MOVLW     0x6                                                                                             
001132   cff3     MOVFF     0xff3,0xfdb                                                                                     
001134   ffdb                                                                                                               
001136   0e07     MOVLW     0x7                                                                                             
001138   68db     SETF      0xdb,0x0                                                                                        
00113a   d01e     BRA       0x1178         	else                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00113c   0e04     MOVLW     0x4            		p->Ierr += velErr;                                                             C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00113e   cfdb     MOVFF     0xfdb,0x0                                                                                       
001140   f000                                                                                                               
001142   0e05     MOVLW     0x5                                                                                             
001144   cfdb     MOVFF     0xfdb,0x1                                                                                       
001146   f001                                                                                                               
001148   6a02     CLRF      0x2,0x0                                                                                         
00114a   6a03     CLRF      0x3,0x0                                                                                         
00114c   ae01     BTFSS     0x1,0x7,0x0                                                                                     
00114e   d002     BRA       0x1154                                                                                          
001150   6802     SETF      0x2,0x0                                                                                         
001152   6803     SETF      0x3,0x0                                                                                         
001154   0efd     MOVLW     0xfd                                                                                            
001156   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001158   ffe9                                                                                                               
00115a   0efe     MOVLW     0xfe                                                                                            
00115c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00115e   ffea                                                                                                               
001160   0e0c     MOVLW     0xc                                                                                             
001162   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
001164   0e00     MOVLW     0x0                                                                                             
001166   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001168   5000     MOVF      0x0,0x0,0x0                                                                                     
00116a   26ee     ADDWF     0xee,0x1,0x0                                                                                    
00116c   5001     MOVF      0x1,0x0,0x0                                                                                     
00116e   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
001170   5002     MOVF      0x2,0x0,0x0                                                                                     
001172   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
001174   5003     MOVF      0x3,0x0,0x0                                                                                     
001176   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001178   0ef9     MOVLW     0xf9           	if(abs(p->Psetpoint - encoder) > 10)							//Report back when we're close enough to the requested position C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00117a   cfdb     MOVFF     0xfdb,0x6                                                                                       
00117c   f006                                                                                                               
00117e   0efa     MOVLW     0xfa                                                                                            
001180   cfdb     MOVFF     0xfdb,0x7                                                                                       
001182   f007                                                                                                               
001184   0efb     MOVLW     0xfb                                                                                            
001186   cfdb     MOVFF     0xfdb,0x8                                                                                       
001188   f008                                                                                                               
00118a   0efc     MOVLW     0xfc                                                                                            
00118c   cfdb     MOVFF     0xfdb,0x9                                                                                       
00118e   f009                                                                                                               
001190   0efd     MOVLW     0xfd                                                                                            
001192   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001194   ffe9                                                                                                               
001196   0efe     MOVLW     0xfe                                                                                            
001198   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00119a   ffea                                                                                                               
00119c   0e02     MOVLW     0x2                                                                                             
00119e   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0011a0   0e00     MOVLW     0x0                                                                                             
0011a2   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0011a4   5006     MOVF      0x6,0x0,0x0                                                                                     
0011a6   5cee     SUBWF     0xee,0x0,0x0                                                                                    
0011a8   6e02     MOVWF     0x2,0x0                                                                                         
0011aa   5007     MOVF      0x7,0x0,0x0                                                                                     
0011ac   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
0011ae   6e03     MOVWF     0x3,0x0                                                                                         
0011b0   5008     MOVF      0x8,0x0,0x0                                                                                     
0011b2   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
0011b4   6e04     MOVWF     0x4,0x0                                                                                         
0011b6   5009     MOVF      0x9,0x0,0x0                                                                                     
0011b8   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
0011ba   6e05     MOVWF     0x5,0x0                                                                                         
0011bc   c002     MOVFF     0x2,0xfe6                                                                                       
0011be   ffe6                                                                                                               
0011c0   c003     MOVFF     0x3,0xfe6                                                                                       
0011c2   ffe6                                                                                                               
0011c4   d8be     RCALL     0x1342                                                                                          
0011c6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0011c8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0011ca   cff3     MOVFF     0xff3,0x0                                                                                       
0011cc   f000                                                                                                               
0011ce   cff4     MOVFF     0xff4,0x1                                                                                       
0011d0   f001                                                                                                               
0011d2   3401     RLCF      0x1,0x0,0x0                                                                                     
0011d4   e204     BC        0x11de                                                                                          
0011d6   5000     MOVF      0x0,0x0,0x0                                                                                     
0011d8   080a     SUBLW     0xa                                                                                             
0011da   0e00     MOVLW     0x0                                                                                             
0011dc   5401     SUBFWB    0x1,0x0,0x0                                                                                     
0011de   e20f     BC        0x11fe                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0011e0   0efd     MOVLW     0xfd           		p->PosOnTarget = 0;                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0011e2   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0011e4   ffe9                                                                                                               
0011e6   0efe     MOVLW     0xfe                                                                                            
0011e8   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0011ea   ffea                                                                                                               
0011ec   0e10     MOVLW     0x10                                                                                            
0011ee   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0011f0   0e00     MOVLW     0x0                                                                                             
0011f2   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0011f4   6aee     CLRF      0xee,0x0                                                                                        
0011f6   6aee     CLRF      0xee,0x0                                                                                        
0011f8   6aee     CLRF      0xee,0x0                                                                                        
0011fa   6aee     CLRF      0xee,0x0                                                                                        
0011fc   d00f     BRA       0x121c         	} else {                                                                        C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0011fe   0efd     MOVLW     0xfd           		p->PosOnTarget = 1;                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001200   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001202   ffe9                                                                                                               
001204   0efe     MOVLW     0xfe                                                                                            
001206   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001208   ffea                                                                                                               
00120a   0e10     MOVLW     0x10                                                                                            
00120c   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00120e   0e00     MOVLW     0x0                                                                                             
001210   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001212   0e01     MOVLW     0x1                                                                                             
001214   6eee     MOVWF     0xee,0x0                                                                                        
001216   6aee     CLRF      0xee,0x0                                                                                        
001218   6aee     CLRF      0xee,0x0                                                                                        
00121a   6aee     CLRF      0xee,0x0                                                                                        
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           #ifdef DRIVE_DEBUG                                                               C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           	printf("PSet:%ld VSet:%d velErr:%d Enc:%ld Drive:%d Perr:%ld\r\n", p->Psetpoint, p->Vsetpoint, velErr, encoder, Drive*motor_direction, (p->Psetpoint - encoder)); C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00121c   0e06     MOVLW     0x6            	return (p->Drive = (Drive*motor_direction)+127);                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00121e   cfdb     MOVFF     0xfdb,0x41                                                                                      
001220   f041                                                                                                               
001222   0e07     MOVLW     0x7                                                                                             
001224   cfdb     MOVFF     0xfdb,0x42                                                                                      
001226   f042                                                                                                               
001228   0ef7     MOVLW     0xf7                                                                                            
00122a   cfdb     MOVFF     0xfdb,0x46                                                                                      
00122c   f046                                                                                                               
00122e   0ef8     MOVLW     0xf8                                                                                            
001230   cfdb     MOVFF     0xfdb,0x47                                                                                      
001232   f047                                                                                                               
001234   ecb6     CALL      0x556c,0x0                                                                                      
001236   f02a                                                                                                               
001238   c03f     MOVFF     0x3f,0x0                                                                                        
00123a   f000                                                                                                               
00123c   c040     MOVFF     0x40,0x1                                                                                        
00123e   f001                                                                                                               
001240   0e7f     MOVLW     0x7f                                                                                            
001242   2600     ADDWF     0x0,0x1,0x0                                                                                     
001244   0e00     MOVLW     0x0                                                                                             
001246   2201     ADDWFC    0x1,0x1,0x0                                                                                     
001248   0efd     MOVLW     0xfd                                                                                            
00124a   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00124c   ffe9                                                                                                               
00124e   0efe     MOVLW     0xfe                                                                                            
001250   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001252   ffea                                                                                                               
001254   0e20     MOVLW     0x20                                                                                            
001256   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
001258   0e00     MOVLW     0x0                                                                                             
00125a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00125c   c000     MOVFF     0x0,0xfee                                                                                       
00125e   ffee                                                                                                               
001260   c001     MOVFF     0x1,0xfed                                                                                       
001262   ffed                                                                                                               
001264   c000     MOVFF     0x0,0xff3                                                                                       
001266   fff3                                                                                                               
001268   c001     MOVFF     0x1,0xff4                                                                                       
00126a   fff4                                                                                                               
00126c   d000     BRA       0x126e                                                                                          
00126e   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001270   ffe1                                                                                                               
001272   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001274   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001276   ffd9                                                                                                               
001278   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00127a   cfd9     MOVFF     0xfd9,0xfe6    int deadBandInput(int in, int deadBand)                                          C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00127c   ffe6                                                                                                               
00127e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001280   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001282   0efd     MOVLW     0xfd           	if(abs(in - 127) <= deadBand)                                                   C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001284   cfdb     MOVFF     0xfdb,0x2                                                                                       
001286   f002                                                                                                               
001288   0efe     MOVLW     0xfe                                                                                            
00128a   cfdb     MOVFF     0xfdb,0x3                                                                                       
00128c   f003                                                                                                               
00128e   0e7f     MOVLW     0x7f                                                                                            
001290   5e02     SUBWF     0x2,0x1,0x0                                                                                     
001292   0e00     MOVLW     0x0                                                                                             
001294   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
001296   c002     MOVFF     0x2,0xfe6                                                                                       
001298   ffe6                                                                                                               
00129a   c003     MOVFF     0x3,0xfe6                                                                                       
00129c   ffe6                                                                                                               
00129e   d851     RCALL     0x1342                                                                                          
0012a0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0012a2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0012a4   cff3     MOVFF     0xff3,0x0                                                                                       
0012a6   f000                                                                                                               
0012a8   cff4     MOVFF     0xff4,0x1                                                                                       
0012aa   f001                                                                                                               
0012ac   0efb     MOVLW     0xfb                                                                                            
0012ae   cfdb     MOVFF     0xfdb,0x4                                                                                       
0012b0   f004                                                                                                               
0012b2   0efc     MOVLW     0xfc                                                                                            
0012b4   cfdb     MOVFF     0xfdb,0x5                                                                                       
0012b6   f005                                                                                                               
0012b8   5005     MOVF      0x5,0x0,0x0                                                                                     
0012ba   1801     XORWF     0x1,0x0,0x0                                                                                     
0012bc   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
0012be   d002     BRA       0x12c4                                                                                          
0012c0   3401     RLCF      0x1,0x0,0x0                                                                                     
0012c2   d004     BRA       0x12cc                                                                                          
0012c4   5000     MOVF      0x0,0x0,0x0                                                                                     
0012c6   5c04     SUBWF     0x4,0x0,0x0                                                                                     
0012c8   5001     MOVF      0x1,0x0,0x0                                                                                     
0012ca   5805     SUBWFB    0x5,0x0,0x0                                                                                     
0012cc   e304     BNC       0x12d6                                                                                          
0012ce   6af3     CLRF      0xf3,0x0       		return 0;                                                                      C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0012d0   6af4     CLRF      0xf4,0x0                                                                                        
0012d2   d033     BRA       0x133a                                                                                          
0012d4   d023     BRA       0x131c         	else                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0012d6   0efd     MOVLW     0xfd           		if((in - 127) > 125)                                                           C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0012d8   cfdb     MOVFF     0xfdb,0x0                                                                                       
0012da   f000                                                                                                               
0012dc   0efe     MOVLW     0xfe                                                                                            
0012de   cfdb     MOVFF     0xfdb,0x1                                                                                       
0012e0   f001                                                                                                               
0012e2   0e7f     MOVLW     0x7f                                                                                            
0012e4   5e00     SUBWF     0x0,0x1,0x0                                                                                     
0012e6   0e00     MOVLW     0x0                                                                                             
0012e8   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
0012ea   3401     RLCF      0x1,0x0,0x0                                                                                     
0012ec   e204     BC        0x12f6                                                                                          
0012ee   5000     MOVF      0x0,0x0,0x0                                                                                     
0012f0   087d     SUBLW     0x7d                                                                                            
0012f2   0e00     MOVLW     0x0                                                                                             
0012f4   5401     SUBFWB    0x1,0x0,0x0                                                                                     
0012f6   e212     BC        0x131c                                                                                          
0012f8   0efd     MOVLW     0xfd           			return -(in - 127); //Joysticks want to flip direction when > 125             C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0012fa   cfdb     MOVFF     0xfdb,0x0                                                                                       
0012fc   f000                                                                                                               
0012fe   0efe     MOVLW     0xfe                                                                                            
001300   cfdb     MOVFF     0xfdb,0x1                                                                                       
001302   f001                                                                                                               
001304   0e7f     MOVLW     0x7f                                                                                            
001306   5e00     SUBWF     0x0,0x1,0x0                                                                                     
001308   0e00     MOVLW     0x0                                                                                             
00130a   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
00130c   6c00     NEGF      0x0,0x0                                                                                         
00130e   1e01     COMF      0x1,0x1,0x0                                                                                     
001310   2201     ADDWFC    0x1,0x1,0x0                                                                                     
001312   c000     MOVFF     0x0,0xff3                                                                                       
001314   fff3                                                                                                               
001316   c001     MOVFF     0x1,0xff4                                                                                       
001318   fff4                                                                                                               
00131a   d00f     BRA       0x133a                                                                                          
00131c   0efd     MOVLW     0xfd           		return in - 127;                                                               C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00131e   cfdb     MOVFF     0xfdb,0x0                                                                                       
001320   f000                                                                                                               
001322   0efe     MOVLW     0xfe                                                                                            
001324   cfdb     MOVFF     0xfdb,0x1                                                                                       
001326   f001                                                                                                               
001328   0e7f     MOVLW     0x7f                                                                                            
00132a   5e00     SUBWF     0x0,0x1,0x0                                                                                     
00132c   0e00     MOVLW     0x0                                                                                             
00132e   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
001330   c000     MOVFF     0x0,0xff3                                                                                       
001332   fff3                                                                                                               
001334   c001     MOVFF     0x1,0xff4                                                                                       
001336   fff4                                                                                                               
001338   d000     BRA       0x133a                                                                                          
00133a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00133c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00133e   ffd9                                                                                                               
001340   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001342   cfd9     MOVFF     0xfd9,0xfe6    int abs(int val)                                                                 C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001344   ffe6                                                                                                               
001346   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001348   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00134a   0efd     MOVLW     0xfd           	return (val >= 0)?val:-val;                                                     C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00134c   cfdb     MOVFF     0xfdb,0x2                                                                                       
00134e   f002                                                                                                               
001350   0efe     MOVLW     0xfe                                                                                            
001352   cfdb     MOVFF     0xfdb,0x3                                                                                       
001354   f003                                                                                                               
001356   0100     MOVLB     0x0                                                                                             
001358   0e80     MOVLW     0x80                                                                                            
00135a   1403     ANDWF     0x3,0x0,0x0                                                                                     
00135c   e107     BNZ       0x136c                                                                                          
00135e   0efd     MOVLW     0xfd                                                                                            
001360   cfdb     MOVFF     0xfdb,0x0                                                                                       
001362   f000                                                                                                               
001364   0efe     MOVLW     0xfe                                                                                            
001366   cfdb     MOVFF     0xfdb,0x1                                                                                       
001368   f001                                                                                                               
00136a   d00a     BRA       0x1380                                                                                          
00136c   0efd     MOVLW     0xfd                                                                                            
00136e   cfdb     MOVFF     0xfdb,0x0                                                                                       
001370   f000                                                                                                               
001372   0efe     MOVLW     0xfe                                                                                            
001374   cfdb     MOVFF     0xfdb,0x1                                                                                       
001376   f001                                                                                                               
001378   6c00     NEGF      0x0,0x0                                                                                         
00137a   1e01     COMF      0x1,0x1,0x0                                                                                     
00137c   0e00     MOVLW     0x0                                                                                             
00137e   2201     ADDWFC    0x1,0x1,0x0                                                                                     
001380   c000     MOVFF     0x0,0xff3                                                                                       
001382   fff3                                                                                                               
001384   c001     MOVFF     0x1,0xff4                                                                                       
001386   fff4                                                                                                               
001388   d000     BRA       0x138a                                                                                          
00138a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00138c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00138e   ffd9                                                                                                               
001390   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           //Needs to be rewritten; I want _exact_ turns                                    C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           int turn()                                                                       C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           	static int state = 0;                                                           C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           	static int targetDeg = -1800;                                                   C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           	static int errDeg;                                                              C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001392   0e01     MOVLW     0x1            	switch(state)                                                                   C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001394   0102     MOVLB     0x2                                                                                             
001396   19c6     XORWF     0xc6,0x0,0x1                                                                                    
001398   e101     BNZ       0x139c                                                                                          
00139a   51c7     MOVF      0xc7,0x0,0x1                                                                                    
00139c   e024     BZ        0x13e6                                                                                          
00139e   51c6     MOVF      0xc6,0x0,0x1                                                                                    
0013a0   e101     BNZ       0x13a4                                                                                          
0013a2   51c7     MOVF      0xc7,0x0,0x1                                                                                    
0013a4   e001     BZ        0x13a8                                                                                          
0013a6   d039     BRA       0x141a                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           		case 0:                                                                        C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0013a8   0e42     MOVLW     0x42           			Left.Vsetpoint = (Right.Vsetpoint * 66) / 100;                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0013aa   6e41     MOVWF     0x41,0x0                                                                                        
0013ac   6a42     CLRF      0x42,0x0                                                                                        
0013ae   c1a8     MOVFF     0x1a8,0x46                                                                                      
0013b0   f046                                                                                                               
0013b2   c1a9     MOVFF     0x1a9,0x47                                                                                      
0013b4   f047                                                                                                               
0013b6   ecb6     CALL      0x556c,0x0                                                                                      
0013b8   f02a                                                                                                               
0013ba   c03f     MOVFF     0x3f,0x186                                                                                      
0013bc   f186                                                                                                               
0013be   c040     MOVFF     0x40,0x187                                                                                      
0013c0   f187                                                                                                               
0013c2   0e64     MOVLW     0x64                                                                                            
0013c4   6e46     MOVWF     0x46,0x0                                                                                        
0013c6   6a47     CLRF      0x47,0x0                                                                                        
0013c8   c186     MOVFF     0x186,0x41                                                                                      
0013ca   f041                                                                                                               
0013cc   c187     MOVFF     0x187,0x42                                                                                      
0013ce   f042                                                                                                               
0013d0   ec5c     CALL      0x54b8,0x0                                                                                      
0013d2   f02a                                                                                                               
0013d4   c041     MOVFF     0x41,0x186                                                                                      
0013d6   f186                                                                                                               
0013d8   c042     MOVFF     0x42,0x187                                                                                      
0013da   f187                                                                                                               
0013dc   0102     MOVLB     0x2            			state++;                                                                      C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0013de   2bc6     INCF      0xc6,0x1,0x1                                                                                    
0013e0   0e00     MOVLW     0x0                                                                                             
0013e2   23c7     ADDWFC    0xc7,0x1,0x1                                                                                    
0013e4   d01a     BRA       0x141a         		break;                                                                         C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           		#ifndef SMART_TURN                                                             C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           				case 1:                                                                      C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0013e6   ece4     CALL      0x47c8,0x0     					if(Get_Gyro_Angle() < -1500)		//Arbitrary value; seems to get us to about 180 degrees on average C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0013e8   f023                                                                                                               
0013ea   5042     MOVF      0x42,0x0,0x0                                                                                    
0013ec   0aff     XORLW     0xff                                                                                            
0013ee   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
0013f0   d002     BRA       0x13f6                                                                                          
0013f2   80d8     BSF       0xd8,0x0,0x0                                                                                    
0013f4   d008     BRA       0x1406                                                                                          
0013f6   0e24     MOVLW     0x24                                                                                            
0013f8   5c3f     SUBWF     0x3f,0x0,0x0                                                                                    
0013fa   0efa     MOVLW     0xfa                                                                                            
0013fc   5840     SUBWFB    0x40,0x0,0x0                                                                                    
0013fe   0eff     MOVLW     0xff                                                                                            
001400   5841     SUBWFB    0x41,0x0,0x0                                                                                    
001402   0eff     MOVLW     0xff                                                                                            
001404   5842     SUBWFB    0x42,0x0,0x0                                                                                    
001406   e208     BC        0x1418                                                                                          
                                           					{                                                                           C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001408   c1a8     MOVFF     0x1a8,0x186    						Left.Vsetpoint = Right.Vsetpoint;                                          C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00140a   f186                                                                                                               
00140c   c1a9     MOVFF     0x1a9,0x187                                                                                     
00140e   f187                                                                                                               
001410   0e01     MOVLW     0x1            						return 1;                                                                  C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001412   6ef3     MOVWF     0xf3,0x0                                                                                        
001414   6af4     CLRF      0xf4,0x0                                                                                        
001416   d004     BRA       0x1420                                                                                          
                                           					}                                                                           C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001418   d000     BRA       0x141a         				break;                                                                       C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           		#endif                                                                         C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           	}		                                                                             C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00141a   6af3     CLRF      0xf3,0x0       	return 0;				//Default response; not done turning                               C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00141c   6af4     CLRF      0xf4,0x0                                                                                        
00141e   d000     BRA       0x1420                                                                                          
001420   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           //Needs to be rewritten; could be quite a bit prettier                           C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001422   cfd9     MOVFF     0xfd9,0xfe6    void configTerminal(void)                                                        C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001424   ffe6                                                                                                               
001426   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001428   ffd9                                                                                                               
00142a   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           	unsigned char character;                                                        C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           	static char debugMode = 0;                                                      C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           	static char debugChar = 'c';                                                    C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00142c   ec2d     CALL      0x4a5a,0x0     	while(Serial_Port_One_Byte_Count() > 0)                                         C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00142e   f025                                                                                                               
001430   0800     SUBLW     0x0                                                                                             
001432   e301     BNC       0x1436                                                                                          
001434   d0eb     BRA       0x160c                                                                                          
00160a   d710     BRA       0x142c                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001436   ec4d     CALL      0x4a9a,0x0     		character = Read_Serial_Port_One();                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001438   f025                                                                                                               
00143a   6edf     MOVWF     0xdf,0x0                                                                                        
00143c   50df     MOVF      0xdf,0x0,0x0   		switch(character)                                                              C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00143e   0a63     XORLW     0x63                                                                                            
001440   e101     BNZ       0x1444                                                                                          
001442   d0d3     BRA       0x15ea                                                                                          
001444   0a0f     XORLW     0xf                                                                                             
001446   e101     BNZ       0x144a                                                                                          
001448   d0b2     BRA       0x15ae                                                                                          
00144a   0a19     XORLW     0x19                                                                                            
00144c   e101     BNZ       0x1450                                                                                          
00144e   d080     BRA       0x1550                                                                                          
001450   0a1c     XORLW     0x1c                                                                                            
001452   e04f     BZ        0x14f2                                                                                          
001454   0a06     XORLW     0x6                                                                                             
001456   e028     BZ        0x14a8                                                                                          
001458   0a1f     XORLW     0x1f                                                                                            
00145a   e001     BZ        0x145e                                                                                          
00145c   d0ce     BRA       0x15fa                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           			case 'p':                                                                     C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00145e   0101     MOVLB     0x1            				++Left.Kvp;                                                                  C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001460   2b9a     INCF      0x9a,0x1,0x1                                                                                    
001462   0e00     MOVLW     0x0                                                                                             
001464   239b     ADDWFC    0x9b,0x1,0x1                                                                                    
001466   0101     MOVLB     0x1            				++Right.Kvp;                                                                 C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001468   2bbc     INCF      0xbc,0x1,0x1                                                                                    
00146a   23bd     ADDWFC    0xbd,0x1,0x1                                                                                    
00146c   c19e     MOVFF     0x19e,0xfe6    				printf("Kvp:%d Kvi:%d Ko:%d\r\n", Left.Kvp, Left.Kvi, Left.Ko);              C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00146e   ffe6                                                                                                               
001470   c19f     MOVFF     0x19f,0xfe6                                                                                     
001472   ffe6                                                                                                               
001474   c19c     MOVFF     0x19c,0xfe6                                                                                     
001476   ffe6                                                                                                               
001478   c19d     MOVFF     0x19d,0xfe6                                                                                     
00147a   ffe6                                                                                                               
00147c   c19a     MOVFF     0x19a,0xfe6                                                                                     
00147e   ffe6                                                                                                               
001480   c19b     MOVFF     0x19b,0xfe6                                                                                     
001482   ffe6                                                                                                               
001484   0eb1     MOVLW     0xb1                                                                                            
001486   6e00     MOVWF     0x0,0x0                                                                                         
001488   0e50     MOVLW     0x50                                                                                            
00148a   6e01     MOVWF     0x1,0x0                                                                                         
00148c   6a02     CLRF      0x2,0x0                                                                                         
00148e   c000     MOVFF     0x0,0xfe6                                                                                       
001490   ffe6                                                                                                               
001492   c001     MOVFF     0x1,0xfe6                                                                                       
001494   ffe6                                                                                                               
001496   c002     MOVFF     0x2,0xfe6                                                                                       
001498   ffe6                                                                                                               
00149a   ecb5     CALL      0x576a,0x0                                                                                      
00149c   f02b                                                                                                               
00149e   6ef5     MOVWF     0xf5,0x0                                                                                        
0014a0   0e09     MOVLW     0x9                                                                                             
0014a2   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0014a4   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0014a6   d0a9     BRA       0x15fa         			break;                                                                        C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           			case 'o':                                                                     C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0014a8   0101     MOVLB     0x1            				--Left.Kvp;                                                                  C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0014aa   079a     DECF      0x9a,0x1,0x1                                                                                    
0014ac   0e00     MOVLW     0x0                                                                                             
0014ae   5b9b     SUBWFB    0x9b,0x1,0x1                                                                                    
0014b0   0101     MOVLB     0x1            				--Right.Kvp;                                                                 C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0014b2   07bc     DECF      0xbc,0x1,0x1                                                                                    
0014b4   5bbd     SUBWFB    0xbd,0x1,0x1                                                                                    
0014b6   c19e     MOVFF     0x19e,0xfe6    				printf("Kvp:%d Kvi:%d Ko:%d\r\n", Left.Kvp, Left.Kvi, Left.Ko);              C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0014b8   ffe6                                                                                                               
0014ba   c19f     MOVFF     0x19f,0xfe6                                                                                     
0014bc   ffe6                                                                                                               
0014be   c19c     MOVFF     0x19c,0xfe6                                                                                     
0014c0   ffe6                                                                                                               
0014c2   c19d     MOVFF     0x19d,0xfe6                                                                                     
0014c4   ffe6                                                                                                               
0014c6   c19a     MOVFF     0x19a,0xfe6                                                                                     
0014c8   ffe6                                                                                                               
0014ca   c19b     MOVFF     0x19b,0xfe6                                                                                     
0014cc   ffe6                                                                                                               
0014ce   0eb1     MOVLW     0xb1                                                                                            
0014d0   6e00     MOVWF     0x0,0x0                                                                                         
0014d2   0e50     MOVLW     0x50                                                                                            
0014d4   6e01     MOVWF     0x1,0x0                                                                                         
0014d6   6a02     CLRF      0x2,0x0                                                                                         
0014d8   c000     MOVFF     0x0,0xfe6                                                                                       
0014da   ffe6                                                                                                               
0014dc   c001     MOVFF     0x1,0xfe6                                                                                       
0014de   ffe6                                                                                                               
0014e0   c002     MOVFF     0x2,0xfe6                                                                                       
0014e2   ffe6                                                                                                               
0014e4   ecb5     CALL      0x576a,0x0                                                                                      
0014e6   f02b                                                                                                               
0014e8   6ef5     MOVWF     0xf5,0x0                                                                                        
0014ea   0e09     MOVLW     0x9                                                                                             
0014ec   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0014ee   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0014f0   d084     BRA       0x15fa         			break;                                                                        C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           			case 'i':                                                                     C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0014f2   0101     MOVLB     0x1            				++Left.Kvi;                                                                  C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0014f4   2b9c     INCF      0x9c,0x1,0x1                                                                                    
0014f6   0e00     MOVLW     0x0                                                                                             
0014f8   239d     ADDWFC    0x9d,0x1,0x1                                                                                    
0014fa   0101     MOVLB     0x1            				++Right.Kvi;                                                                 C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0014fc   2bbe     INCF      0xbe,0x1,0x1                                                                                    
0014fe   23bf     ADDWFC    0xbf,0x1,0x1                                                                                    
001500   0101     MOVLB     0x1            				Left.Ierr = 0;                                                               C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001502   6b8c     CLRF      0x8c,0x1                                                                                        
001504   6b8d     CLRF      0x8d,0x1                                                                                        
001506   6b8e     CLRF      0x8e,0x1                                                                                        
001508   6b8f     CLRF      0x8f,0x1                                                                                        
00150a   0101     MOVLB     0x1            				Right.Ierr = 0;                                                              C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00150c   6bae     CLRF      0xae,0x1                                                                                        
00150e   6baf     CLRF      0xaf,0x1                                                                                        
001510   6bb0     CLRF      0xb0,0x1                                                                                        
001512   6bb1     CLRF      0xb1,0x1                                                                                        
001514   c19e     MOVFF     0x19e,0xfe6    				printf("Kvp:%d Kvi:%d Ko:%d\r\n", Left.Kvp, Left.Kvi, Left.Ko);              C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001516   ffe6                                                                                                               
001518   c19f     MOVFF     0x19f,0xfe6                                                                                     
00151a   ffe6                                                                                                               
00151c   c19c     MOVFF     0x19c,0xfe6                                                                                     
00151e   ffe6                                                                                                               
001520   c19d     MOVFF     0x19d,0xfe6                                                                                     
001522   ffe6                                                                                                               
001524   c19a     MOVFF     0x19a,0xfe6                                                                                     
001526   ffe6                                                                                                               
001528   c19b     MOVFF     0x19b,0xfe6                                                                                     
00152a   ffe6                                                                                                               
00152c   0eb1     MOVLW     0xb1                                                                                            
00152e   6e00     MOVWF     0x0,0x0                                                                                         
001530   0e50     MOVLW     0x50                                                                                            
001532   6e01     MOVWF     0x1,0x0                                                                                         
001534   6a02     CLRF      0x2,0x0                                                                                         
001536   c000     MOVFF     0x0,0xfe6                                                                                       
001538   ffe6                                                                                                               
00153a   c001     MOVFF     0x1,0xfe6                                                                                       
00153c   ffe6                                                                                                               
00153e   c002     MOVFF     0x2,0xfe6                                                                                       
001540   ffe6                                                                                                               
001542   ecb5     CALL      0x576a,0x0                                                                                      
001544   f02b                                                                                                               
001546   6ef5     MOVWF     0xf5,0x0                                                                                        
001548   0e09     MOVLW     0x9                                                                                             
00154a   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
00154c   50f5     MOVF      0xf5,0x0,0x0                                                                                    
00154e   d055     BRA       0x15fa         			break;                                                                        C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           			case 'u':                                                                     C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001550   0101     MOVLB     0x1            				--Left.Kvi;                                                                  C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001552   079c     DECF      0x9c,0x1,0x1                                                                                    
001554   0e00     MOVLW     0x0                                                                                             
001556   5b9d     SUBWFB    0x9d,0x1,0x1                                                                                    
001558   0101     MOVLB     0x1            				--Right.Kvi;                                                                 C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00155a   07be     DECF      0xbe,0x1,0x1                                                                                    
00155c   5bbf     SUBWFB    0xbf,0x1,0x1                                                                                    
00155e   0101     MOVLB     0x1            				Left.Ierr = 0;                                                               C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001560   6b8c     CLRF      0x8c,0x1                                                                                        
001562   6b8d     CLRF      0x8d,0x1                                                                                        
001564   6b8e     CLRF      0x8e,0x1                                                                                        
001566   6b8f     CLRF      0x8f,0x1                                                                                        
001568   0101     MOVLB     0x1            				Right.Ierr = 0;                                                              C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00156a   6bae     CLRF      0xae,0x1                                                                                        
00156c   6baf     CLRF      0xaf,0x1                                                                                        
00156e   6bb0     CLRF      0xb0,0x1                                                                                        
001570   6bb1     CLRF      0xb1,0x1                                                                                        
001572   c19e     MOVFF     0x19e,0xfe6    				printf("Kvp:%d Kvi:%d Ko:%d\r\n", Left.Kvp, Left.Kvi, Left.Ko);              C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001574   ffe6                                                                                                               
001576   c19f     MOVFF     0x19f,0xfe6                                                                                     
001578   ffe6                                                                                                               
00157a   c19c     MOVFF     0x19c,0xfe6                                                                                     
00157c   ffe6                                                                                                               
00157e   c19d     MOVFF     0x19d,0xfe6                                                                                     
001580   ffe6                                                                                                               
001582   c19a     MOVFF     0x19a,0xfe6                                                                                     
001584   ffe6                                                                                                               
001586   c19b     MOVFF     0x19b,0xfe6                                                                                     
001588   ffe6                                                                                                               
00158a   0eb1     MOVLW     0xb1                                                                                            
00158c   6e00     MOVWF     0x0,0x0                                                                                         
00158e   0e50     MOVLW     0x50                                                                                            
001590   6e01     MOVWF     0x1,0x0                                                                                         
001592   6a02     CLRF      0x2,0x0                                                                                         
001594   c000     MOVFF     0x0,0xfe6                                                                                       
001596   ffe6                                                                                                               
001598   c001     MOVFF     0x1,0xfe6                                                                                       
00159a   ffe6                                                                                                               
00159c   c002     MOVFF     0x2,0xfe6                                                                                       
00159e   ffe6                                                                                                               
0015a0   ecb5     CALL      0x576a,0x0                                                                                      
0015a2   f02b                                                                                                               
0015a4   6ef5     MOVWF     0xf5,0x0                                                                                        
0015a6   0e09     MOVLW     0x9                                                                                             
0015a8   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0015aa   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0015ac   d026     BRA       0x15fa         			break;                                                                        C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           			case 'l':                                                                     C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0015ae   c19e     MOVFF     0x19e,0xfe6    				printf("Kvp:%d Kvi:%d Ko:%d\r\n", Left.Kvp, Left.Kvi, Left.Ko);              C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0015b0   ffe6                                                                                                               
0015b2   c19f     MOVFF     0x19f,0xfe6                                                                                     
0015b4   ffe6                                                                                                               
0015b6   c19c     MOVFF     0x19c,0xfe6                                                                                     
0015b8   ffe6                                                                                                               
0015ba   c19d     MOVFF     0x19d,0xfe6                                                                                     
0015bc   ffe6                                                                                                               
0015be   c19a     MOVFF     0x19a,0xfe6                                                                                     
0015c0   ffe6                                                                                                               
0015c2   c19b     MOVFF     0x19b,0xfe6                                                                                     
0015c4   ffe6                                                                                                               
0015c6   0eb1     MOVLW     0xb1                                                                                            
0015c8   6e00     MOVWF     0x0,0x0                                                                                         
0015ca   0e50     MOVLW     0x50                                                                                            
0015cc   6e01     MOVWF     0x1,0x0                                                                                         
0015ce   6a02     CLRF      0x2,0x0                                                                                         
0015d0   c000     MOVFF     0x0,0xfe6                                                                                       
0015d2   ffe6                                                                                                               
0015d4   c001     MOVFF     0x1,0xfe6                                                                                       
0015d6   ffe6                                                                                                               
0015d8   c002     MOVFF     0x2,0xfe6                                                                                       
0015da   ffe6                                                                                                               
0015dc   ecb5     CALL      0x576a,0x0                                                                                      
0015de   f02b                                                                                                               
0015e0   6ef5     MOVWF     0xf5,0x0                                                                                        
0015e2   0e09     MOVLW     0x9                                                                                             
0015e4   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0015e6   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0015e8   d008     BRA       0x15fa         			break;                                                                        C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           			case 'c':                                                                     C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0015ea   0102     MOVLB     0x2            				if(debugMode)                                                                C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0015ec   51ca     MOVF      0xca,0x0,0x1                                                                                    
0015ee   e002     BZ        0x15f4                                                                                          
0015f0   6bca     CLRF      0xca,0x1       					debugMode = 0;                                                              C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0015f2   d002     BRA       0x15f8         				else                                                                         C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0015f4   0e01     MOVLW     0x1            					debugMode = 1;                                                              C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0015f6   6fca     MOVWF     0xca,0x1                                                                                        
0015f8   d000     BRA       0x15fa         			break;                                                                        C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0015fa   0e0d     MOVLW     0xd            		if(character != '\r\n' && character != 'c')                                    C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0015fc   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0015fe   e005     BZ        0x160a                                                                                          
001600   0e63     MOVLW     0x63                                                                                            
001602   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001604   e002     BZ        0x160a                                                                                          
001606   cfdf     MOVFF     0xfdf,0x2cb    			debugChar = character;                                                        C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001608   f2cb                                                                                                               
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00160c   0102     MOVLB     0x2            	if(debugMode)                                                                   C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00160e   51ca     MOVF      0xca,0x0,0x1                                                                                    
001610   e101     BNZ       0x1614                                                                                          
001612   d0ea     BRA       0x17e8                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001614   51cb     MOVF      0xcb,0x0,0x1   		switch(debugChar)                                                              C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001616   0a77     XORLW     0x77                                                                                            
001618   e101     BNZ       0x161c                                                                                          
00161a   d0af     BRA       0x177a                                                                                          
00161c   0a06     XORLW     0x6                                                                                             
00161e   e101     BNZ       0x1622                                                                                          
001620   d081     BRA       0x1724                                                                                          
001622   0a1b     XORLW     0x1b                                                                                            
001624   e05a     BZ        0x16da                                                                                          
001626   0a07     XORLW     0x7                                                                                             
001628   e013     BZ        0x1650                                                                                          
                                           		{	                                                                             C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           			case 'm':                                                                     C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001650   0102     MOVLB     0x2            				printf("Enc1:%ld Enc2:%ld LVSet:%d RVSet:%d LDr:%d RDr:%d\r\n", Get_Encoder_1_Count(), Get_Encoder_2_Count(), Left.Vsetpoint, Right.Vsetpoint, pwm15, pwm13); C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001652   5110     MOVF      0x10,0x0,0x1                                                                                    
001654   6ee6     MOVWF     0xe6,0x0                                                                                        
001656   6ae6     CLRF      0xe6,0x0                                                                                        
001658   5112     MOVF      0x12,0x0,0x1                                                                                    
00165a   6ee6     MOVWF     0xe6,0x0                                                                                        
00165c   6ae6     CLRF      0xe6,0x0                                                                                        
00165e   c1a8     MOVFF     0x1a8,0xfe6                                                                                     
001660   ffe6                                                                                                               
001662   c1a9     MOVFF     0x1a9,0xfe6                                                                                     
001664   ffe6                                                                                                               
001666   c186     MOVFF     0x186,0xfe6                                                                                     
001668   ffe6                                                                                                               
00166a   c187     MOVFF     0x187,0xfe6                                                                                     
00166c   ffe6                                                                                                               
00166e   ec2a     CALL      0x5654,0x0                                                                                      
001670   f02b                                                                                                               
001672   c03f     MOVFF     0x3f,0x0                                                                                        
001674   f000                                                                                                               
001676   c040     MOVFF     0x40,0x1                                                                                        
001678   f001                                                                                                               
00167a   c041     MOVFF     0x41,0x2                                                                                        
00167c   f002                                                                                                               
00167e   c042     MOVFF     0x42,0x3                                                                                        
001680   f003                                                                                                               
001682   c000     MOVFF     0x0,0xfe6                                                                                       
001684   ffe6                                                                                                               
001686   c001     MOVFF     0x1,0xfe6                                                                                       
001688   ffe6                                                                                                               
00168a   c002     MOVFF     0x2,0xfe6                                                                                       
00168c   ffe6                                                                                                               
00168e   c003     MOVFF     0x3,0xfe6                                                                                       
001690   ffe6                                                                                                               
001692   ecee     CALL      0x55dc,0x0                                                                                      
001694   f02a                                                                                                               
001696   c03f     MOVFF     0x3f,0x4                                                                                        
001698   f004                                                                                                               
00169a   c040     MOVFF     0x40,0x5                                                                                        
00169c   f005                                                                                                               
00169e   c041     MOVFF     0x41,0x6                                                                                        
0016a0   f006                                                                                                               
0016a2   c042     MOVFF     0x42,0x7                                                                                        
0016a4   f007                                                                                                               
0016a6   c004     MOVFF     0x4,0xfe6                                                                                       
0016a8   ffe6                                                                                                               
0016aa   c005     MOVFF     0x5,0xfe6                                                                                       
0016ac   ffe6                                                                                                               
0016ae   c006     MOVFF     0x6,0xfe6                                                                                       
0016b0   ffe6                                                                                                               
0016b2   c007     MOVFF     0x7,0xfe6                                                                                       
0016b4   ffe6                                                                                                               
0016b6   0e7d     MOVLW     0x7d                                                                                            
0016b8   6e08     MOVWF     0x8,0x0                                                                                         
0016ba   0e50     MOVLW     0x50                                                                                            
0016bc   6e09     MOVWF     0x9,0x0                                                                                         
0016be   6a0a     CLRF      0xa,0x0                                                                                         
0016c0   c008     MOVFF     0x8,0xfe6                                                                                       
0016c2   ffe6                                                                                                               
0016c4   c009     MOVFF     0x9,0xfe6                                                                                       
0016c6   ffe6                                                                                                               
0016c8   c00a     MOVFF     0xa,0xfe6                                                                                       
0016ca   ffe6                                                                                                               
0016cc   ecb5     CALL      0x576a,0x0                                                                                      
0016ce   f02b                                                                                                               
0016d0   6ef5     MOVWF     0xf5,0x0                                                                                        
0016d2   0e13     MOVLW     0x13                                                                                            
0016d4   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0016d6   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0016d8   d087     BRA       0x17e8         			break;                                                                        C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           			case 'j':                                                                     C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0016da   0102     MOVLB     0x2            				printf("p1x:%d p1y:%d p2x:%d p2y:%d p3x:%d p3y:%d\r\n", p1_x, p1_y, p2_x, p2_y, p3_x, p3_y); C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0016dc   5128     MOVF      0x28,0x0,0x1                                                                                    
0016de   6ee6     MOVWF     0xe6,0x0                                                                                        
0016e0   6ae6     CLRF      0xe6,0x0                                                                                        
0016e2   512c     MOVF      0x2c,0x0,0x1                                                                                    
0016e4   6ee6     MOVWF     0xe6,0x0                                                                                        
0016e6   6ae6     CLRF      0xe6,0x0                                                                                        
0016e8   5127     MOVF      0x27,0x0,0x1                                                                                    
0016ea   6ee6     MOVWF     0xe6,0x0                                                                                        
0016ec   6ae6     CLRF      0xe6,0x0                                                                                        
0016ee   512b     MOVF      0x2b,0x0,0x1                                                                                    
0016f0   6ee6     MOVWF     0xe6,0x0                                                                                        
0016f2   6ae6     CLRF      0xe6,0x0                                                                                        
0016f4   5126     MOVF      0x26,0x0,0x1                                                                                    
0016f6   6ee6     MOVWF     0xe6,0x0                                                                                        
0016f8   6ae6     CLRF      0xe6,0x0                                                                                        
0016fa   512a     MOVF      0x2a,0x0,0x1                                                                                    
0016fc   6ee6     MOVWF     0xe6,0x0                                                                                        
0016fe   6ae6     CLRF      0xe6,0x0                                                                                        
001700   0e51     MOVLW     0x51                                                                                            
001702   6e00     MOVWF     0x0,0x0                                                                                         
001704   0e50     MOVLW     0x50                                                                                            
001706   6e01     MOVWF     0x1,0x0                                                                                         
001708   6a02     CLRF      0x2,0x0                                                                                         
00170a   c000     MOVFF     0x0,0xfe6                                                                                       
00170c   ffe6                                                                                                               
00170e   c001     MOVFF     0x1,0xfe6                                                                                       
001710   ffe6                                                                                                               
001712   c002     MOVFF     0x2,0xfe6                                                                                       
001714   ffe6                                                                                                               
001716   ecb5     CALL      0x576a,0x0                                                                                      
001718   f02b                                                                                                               
00171a   6ef5     MOVWF     0xf5,0x0                                                                                        
00171c   0e0f     MOVLW     0xf                                                                                             
00171e   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
001720   50f5     MOVF      0xf5,0x0,0x0                                                                                    
001722   d062     BRA       0x17e8         			break;                                                                        C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           			case 'q':                                                                     C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001724   0102     MOVLB     0x2            				printf("trig:%d top:%d aux1:%d aux2:%d\r\n", p3_sw_trig, p3_sw_top, p3_sw_aux1, p3_sw_aux2); C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
001726   5122     MOVF      0x22,0x0,0x1                                                                                    
001728   0b80     ANDLW     0x80                                                                                            
00172a   e001     BZ        0x172e                                                                                          
00172c   0e01     MOVLW     0x1                                                                                             
00172e   6ee6     MOVWF     0xe6,0x0                                                                                        
001730   6ae6     CLRF      0xe6,0x0                                                                                        
001732   5122     MOVF      0x22,0x0,0x1                                                                                    
001734   0b40     ANDLW     0x40                                                                                            
001736   e001     BZ        0x173a                                                                                          
001738   0e01     MOVLW     0x1                                                                                             
00173a   6ee6     MOVWF     0xe6,0x0                                                                                        
00173c   6ae6     CLRF      0xe6,0x0                                                                                        
00173e   5122     MOVF      0x22,0x0,0x1                                                                                    
001740   0b20     ANDLW     0x20                                                                                            
001742   e001     BZ        0x1746                                                                                          
001744   0e01     MOVLW     0x1                                                                                             
001746   6ee6     MOVWF     0xe6,0x0                                                                                        
001748   6ae6     CLRF      0xe6,0x0                                                                                        
00174a   5122     MOVF      0x22,0x0,0x1                                                                                    
00174c   0b10     ANDLW     0x10                                                                                            
00174e   e001     BZ        0x1752                                                                                          
001750   0e01     MOVLW     0x1                                                                                             
001752   6ee6     MOVWF     0xe6,0x0                                                                                        
001754   6ae6     CLRF      0xe6,0x0                                                                                        
001756   0e30     MOVLW     0x30                                                                                            
001758   6e00     MOVWF     0x0,0x0                                                                                         
00175a   0e50     MOVLW     0x50                                                                                            
00175c   6e01     MOVWF     0x1,0x0                                                                                         
00175e   6a02     CLRF      0x2,0x0                                                                                         
001760   c000     MOVFF     0x0,0xfe6                                                                                       
001762   ffe6                                                                                                               
001764   c001     MOVFF     0x1,0xfe6                                                                                       
001766   ffe6                                                                                                               
001768   c002     MOVFF     0x2,0xfe6                                                                                       
00176a   ffe6                                                                                                               
00176c   ecb5     CALL      0x576a,0x0                                                                                      
00176e   f02b                                                                                                               
001770   6ef5     MOVWF     0xf5,0x0                                                                                        
001772   0e0b     MOVLW     0xb                                                                                             
001774   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
001776   50f5     MOVF      0xf5,0x0,0x0                                                                                    
001778   d037     BRA       0x17e8         			break;                                                                        C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           			case 'w':                                                                     C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00177a   0102     MOVLB     0x2            				printf("Relay2Fwd:%d Relay2Rev:%d Relay3Fwd:%d Relay3Rev:%d p3_sw_trig:%d p3_sw_top:%d\r\n", relay2_fwd, relay2_rev, relay3_fwd, relay3_rev, p3_sw_trig, p3_sw_top); C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00177c   5122     MOVF      0x22,0x0,0x1                                                                                    
00177e   0b20     ANDLW     0x20                                                                                            
001780   e001     BZ        0x1784                                                                                          
001782   0e01     MOVLW     0x1                                                                                             
001784   6ee6     MOVWF     0xe6,0x0                                                                                        
001786   6ae6     CLRF      0xe6,0x0                                                                                        
001788   5122     MOVF      0x22,0x0,0x1                                                                                    
00178a   0b10     ANDLW     0x10                                                                                            
00178c   e001     BZ        0x1790                                                                                          
00178e   0e01     MOVLW     0x1                                                                                             
001790   6ee6     MOVWF     0xe6,0x0                                                                                        
001792   6ae6     CLRF      0xe6,0x0                                                                                        
001794   508c     MOVF      0x8c,0x0,0x0                                                                                    
001796   0b04     ANDLW     0x4                                                                                             
001798   e001     BZ        0x179c                                                                                          
00179a   0e01     MOVLW     0x1                                                                                             
00179c   6ee6     MOVWF     0xe6,0x0                                                                                        
00179e   6ae6     CLRF      0xe6,0x0                                                                                        
0017a0   508d     MOVF      0x8d,0x0,0x0                                                                                    
0017a2   0b04     ANDLW     0x4                                                                                             
0017a4   e001     BZ        0x17a8                                                                                          
0017a6   0e01     MOVLW     0x1                                                                                             
0017a8   6ee6     MOVWF     0xe6,0x0                                                                                        
0017aa   6ae6     CLRF      0xe6,0x0                                                                                        
0017ac   508c     MOVF      0x8c,0x0,0x0                                                                                    
0017ae   0b02     ANDLW     0x2                                                                                             
0017b0   e001     BZ        0x17b4                                                                                          
0017b2   0e01     MOVLW     0x1                                                                                             
0017b4   6ee6     MOVWF     0xe6,0x0                                                                                        
0017b6   6ae6     CLRF      0xe6,0x0                                                                                        
0017b8   508d     MOVF      0x8d,0x0,0x0                                                                                    
0017ba   0b02     ANDLW     0x2                                                                                             
0017bc   e001     BZ        0x17c0                                                                                          
0017be   0e01     MOVLW     0x1                                                                                             
0017c0   6ee6     MOVWF     0xe6,0x0                                                                                        
0017c2   6ae6     CLRF      0xe6,0x0                                                                                        
0017c4   0edf     MOVLW     0xdf                                                                                            
0017c6   6e00     MOVWF     0x0,0x0                                                                                         
0017c8   0e4f     MOVLW     0x4f                                                                                            
0017ca   6e01     MOVWF     0x1,0x0                                                                                         
0017cc   6a02     CLRF      0x2,0x0                                                                                         
0017ce   c000     MOVFF     0x0,0xfe6                                                                                       
0017d0   ffe6                                                                                                               
0017d2   c001     MOVFF     0x1,0xfe6                                                                                       
0017d4   ffe6                                                                                                               
0017d6   c002     MOVFF     0x2,0xfe6                                                                                       
0017d8   ffe6                                                                                                               
0017da   ecb5     CALL      0x576a,0x0                                                                                      
0017dc   f02b                                                                                                               
0017de   6ef5     MOVWF     0xf5,0x0                                                                                        
0017e0   0e0f     MOVLW     0xf                                                                                             
0017e2   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0017e4   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0017e6   d000     BRA       0x17e8         			break;                                                                        C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           			default:                                                                      C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00162a   0ecc     MOVLW     0xcc           				printf("Nothing to print\r\n");                                              C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00162c   6e00     MOVWF     0x0,0x0                                                                                         
00162e   0e4f     MOVLW     0x4f                                                                                            
001630   6e01     MOVWF     0x1,0x0                                                                                         
001632   6a02     CLRF      0x2,0x0                                                                                         
001634   c000     MOVFF     0x0,0xfe6                                                                                       
001636   ffe6                                                                                                               
001638   c001     MOVFF     0x1,0xfe6                                                                                       
00163a   ffe6                                                                                                               
00163c   c002     MOVFF     0x2,0xfe6                                                                                       
00163e   ffe6                                                                                                               
001640   ecb5     CALL      0x576a,0x0                                                                                      
001642   f02b                                                                                                               
001644   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001646   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001648   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00164a   0102     MOVLB     0x2            				debugMode = 0;                                                               C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
00164c   6bca     CLRF      0xca,0x1                                                                                        
00164e   d0cc     BRA       0x17e8         			break;                                                                        C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0017e8   52e5     MOVF      0xe5,0x1,0x0   }			                                                                             C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
0017ea   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0017ec   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0017ee   ffd9                                                                                                               
0017f0   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\TRCfunctions.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * FILE NAME: user_routines.c <FRC VERSION>                                       C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * DESCRIPTION:                                                                   C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *  This file contains the default mappings of inputs                             C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *  (like switches, joysticks, and buttons) to outputs on the RC.                 C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * USAGE:                                                                         C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *  You can either modify this file to fit your needs, or remove it from your     C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *  project and replace it with a modified copy.                                  C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #include <stdio.h>                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #include "ifi_aliases.h"                                                         C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #include "ifi_utilities.h"                                                       C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #include "user_routines.h"                                                       C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #include "serial_ports.h"                                                        C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #include "pwm.h"                                                                 C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #include "camera.h"                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #include "tracking.h"                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #include "terminal.h"                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #include "adc.h"                                                                 C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #include "encoder.h"                                                             C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #include "gyro.h"                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #include "TRCfunctions.h"                                                        C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           extern unsigned char aBreakerWasTripped;                                         C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           extern unsigned long timerTicks;                                                 C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           /*** DEFINE USER VARIABLES AND INITIALIZE THEM HERE ***/                         C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           /* EXAMPLES: (see MPLAB C18 User's Guide, p.9 for all types)                     C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           unsigned char wheel_revolutions = 0; (can vary from 0 to 255)                    C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           unsigned int  delay_count = 7;       (can vary from 0 to 65,535)                 C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           int           angle_deviation = 142; (can vary from -32,768 to 32,767)           C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           unsigned long very_big_counter = 0;  (can vary from 0 to 4,294,967,295)          C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           */                                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           //		                                                                             C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           //			     Mode        velLim,vel(ro),Kp,Kvp, Ki, Ko				(ro) = read only          C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           VelServo Left  = {0, 0,0,0,0,0, 70,   0,    7, 130, 10, 100, 127};               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           VelServo Right = {0, 0,0,0,0,0, 70,   0,    7, 130, 10, 100, 127};               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * FUNCTION NAME: Limit_Switch_Max                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * PURPOSE:       Sets a PWM value to neutral (127) if it exceeds 127 and the     C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *                limit switch is on.                                             C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * CALLED FROM:   this file                                                       C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * ARGUMENTS:                                                                     C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *     Argument       Type             IO   Description                           C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *     --------       -------------    --   -----------                           C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *     switch_state   unsigned char    I    limit switch state                    C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *     *input_value   pointer           O   points to PWM byte value to be limited C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * RETURNS:       void                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\user_routines.c
003692   cfd9     MOVFF     0xfd9,0xfe6    void Limit_Switch_Max(unsigned char switch_state, unsigned char *input_value)    C:\code\2008\Fresh Copy - 2008\user_routines.c
003694   ffe6                                                                                                               
003696   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003698   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
00369a   0efe     MOVLW     0xfe             if (switch_state == CLOSED)                                                    C:\code\2008\Fresh Copy - 2008\user_routines.c
00369c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00369e   e111     BNZ       0x36c2                                                                                          
                                             {                                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
0036a0   0efc     MOVLW     0xfc               if(*input_value > 127)                                                       C:\code\2008\Fresh Copy - 2008\user_routines.c
0036a2   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0036a4   ffe9                                                                                                               
0036a6   0efd     MOVLW     0xfd                                                                                            
0036a8   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0036aa   ffea                                                                                                               
0036ac   50ef     MOVF      0xef,0x0,0x0                                                                                    
0036ae   087f     SUBLW     0x7f                                                                                            
0036b0   e208     BC        0x36c2                                                                                          
0036b2   0efc     MOVLW     0xfc                 *input_value = 127;                                                        C:\code\2008\Fresh Copy - 2008\user_routines.c
0036b4   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0036b6   ffe9                                                                                                               
0036b8   0efd     MOVLW     0xfd                                                                                            
0036ba   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0036bc   ffea                                                                                                               
0036be   0e7f     MOVLW     0x7f                                                                                            
0036c0   6eef     MOVWF     0xef,0x0                                                                                        
                                             }                                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
0036c2   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
0036c4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0036c6   ffd9                                                                                                               
0036c8   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * FUNCTION NAME: Limit_Switch_Min                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * PURPOSE:       Sets a PWM value to neutral (127) if it's less than 127 and the C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *                limit switch is on.                                             C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * CALLED FROM:   this file                                                       C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * ARGUMENTS:                                                                     C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *     Argument       Type             IO   Description                           C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *     --------       -------------    --   -----------                           C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *     switch_state   unsigned char    I    limit switch state                    C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *     *input_value   pointer           O   points to PWM byte value to be limited C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * RETURNS:       void                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\user_routines.c
0036ca   cfd9     MOVFF     0xfd9,0xfe6    void Limit_Switch_Min(unsigned char switch_state, unsigned char *input_value)    C:\code\2008\Fresh Copy - 2008\user_routines.c
0036cc   ffe6                                                                                                               
0036ce   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0036d0   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
0036d2   0efe     MOVLW     0xfe             if (switch_state == CLOSED)                                                    C:\code\2008\Fresh Copy - 2008\user_routines.c
0036d4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0036d6   e113     BNZ       0x36fe                                                                                          
                                             {                                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
0036d8   0efc     MOVLW     0xfc               if(*input_value < 127)                                                       C:\code\2008\Fresh Copy - 2008\user_routines.c
0036da   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0036dc   ffe9                                                                                                               
0036de   0efd     MOVLW     0xfd                                                                                            
0036e0   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0036e2   ffea                                                                                                               
0036e4   cfef     MOVFF     0xfef,0x0                                                                                       
0036e6   f000                                                                                                               
0036e8   0e7f     MOVLW     0x7f                                                                                            
0036ea   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0036ec   e208     BC        0x36fe                                                                                          
0036ee   0efc     MOVLW     0xfc                 *input_value = 127;                                                        C:\code\2008\Fresh Copy - 2008\user_routines.c
0036f0   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0036f2   ffe9                                                                                                               
0036f4   0efd     MOVLW     0xfd                                                                                            
0036f6   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0036f8   ffea                                                                                                               
0036fa   0e7f     MOVLW     0x7f                                                                                            
0036fc   6eef     MOVWF     0xef,0x0                                                                                        
                                             }                                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
0036fe   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
003700   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003702   ffd9                                                                                                               
003704   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * FUNCTION NAME: Limit_Mix                                                       C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * PURPOSE:       Limits the mixed value for one joystick drive.                  C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * CALLED FROM:   Default_Routine, this file                                      C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * ARGUMENTS:                                                                     C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *     Argument             Type    IO   Description                              C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *     --------             ----    --   -----------                              C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *     intermediate_value    int    I                                             C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * RETURNS:       unsigned char                                                   C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\user_routines.c
003706   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Limit_Mix (int intermediate_value)                                 C:\code\2008\Fresh Copy - 2008\user_routines.c
003708   ffe6                                                                                                               
00370a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00370c   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                             static int limited_value;                                                      C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
00370e   0efd     MOVLW     0xfd             if (intermediate_value < 2000)                                                 C:\code\2008\Fresh Copy - 2008\user_routines.c
003710   cfdb     MOVFF     0xfdb,0x0                                                                                       
003712   f000                                                                                                               
003714   0efe     MOVLW     0xfe                                                                                            
003716   cfdb     MOVFF     0xfdb,0x1                                                                                       
003718   f001                                                                                                               
00371a   90d8     BCF       0xd8,0x0,0x0                                                                                    
00371c   5001     MOVF      0x1,0x0,0x0                                                                                     
00371e   e604     BN        0x3728                                                                                          
003720   0ed0     MOVLW     0xd0                                                                                            
003722   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003724   0e07     MOVLW     0x7                                                                                             
003726   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003728   e206     BC        0x3736                                                                                          
                                             {                                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
00372a   0101     MOVLB     0x1                limited_value = 2000;                                                        C:\code\2008\Fresh Copy - 2008\user_routines.c
00372c   0ed0     MOVLW     0xd0                                                                                            
00372e   6ffe     MOVWF     0xfe,0x1                                                                                        
003730   0e07     MOVLW     0x7                                                                                             
003732   6fff     MOVWF     0xff,0x1                                                                                        
                                             }                                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
003734   d019     BRA       0x3768           else if (intermediate_value > 2254)                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
003736   0efd     MOVLW     0xfd                                                                                            
003738   cfdb     MOVFF     0xfdb,0x0                                                                                       
00373a   f000                                                                                                               
00373c   0efe     MOVLW     0xfe                                                                                            
00373e   cfdb     MOVFF     0xfdb,0x1                                                                                       
003740   f001                                                                                                               
003742   3401     RLCF      0x1,0x0,0x0                                                                                     
003744   e204     BC        0x374e                                                                                          
003746   5000     MOVF      0x0,0x0,0x0                                                                                     
003748   08ce     SUBLW     0xce                                                                                            
00374a   0e08     MOVLW     0x8                                                                                             
00374c   5401     SUBFWB    0x1,0x0,0x0                                                                                     
00374e   e206     BC        0x375c                                                                                          
                                             {                                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
003750   0101     MOVLB     0x1                limited_value = 2254;                                                        C:\code\2008\Fresh Copy - 2008\user_routines.c
003752   0ece     MOVLW     0xce                                                                                            
003754   6ffe     MOVWF     0xfe,0x1                                                                                        
003756   0e08     MOVLW     0x8                                                                                             
003758   6fff     MOVWF     0xff,0x1                                                                                        
                                             }                                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
00375a   d006     BRA       0x3768           else                                                                           C:\code\2008\Fresh Copy - 2008\user_routines.c
                                             {                                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
00375c   0efd     MOVLW     0xfd               limited_value = intermediate_value;                                          C:\code\2008\Fresh Copy - 2008\user_routines.c
00375e   cfdb     MOVFF     0xfdb,0x1fe                                                                                     
003760   f1fe                                                                                                               
003762   0efe     MOVLW     0xfe                                                                                            
003764   cfdb     MOVFF     0xfdb,0x1ff                                                                                     
003766   f1ff                                                                                                               
                                             }                                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
003768   c1fe     MOVFF     0x1fe,0x0        return (unsigned char) (limited_value - 2000);                                 C:\code\2008\Fresh Copy - 2008\user_routines.c
00376a   f000                                                                                                               
00376c   c1ff     MOVFF     0x1ff,0x1                                                                                       
00376e   f001                                                                                                               
003770   0ed0     MOVLW     0xd0                                                                                            
003772   5e00     SUBWF     0x0,0x1,0x0                                                                                     
003774   0e07     MOVLW     0x7                                                                                             
003776   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
003778   5000     MOVF      0x0,0x0,0x0                                                                                     
00377a   d000     BRA       0x377c                                                                                          
00377c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
00377e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003780   ffd9                                                                                                               
003782   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * FUNCTION NAME: User_Initialization                                             C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * PURPOSE:       This routine is called first (and only once) in the Main function.   C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *                You may modify and add to this function.                        C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * CALLED FROM:   main.c                                                          C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * RETURNS:       void                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           void User_Initialization (void)                                                  C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                             //Set_Number_of_Analog_Channels(SIXTEEN_ANALOG);    /* DO NOT CHANGE! */ /*Dumped for adc.c support--read the instructions*/ C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           /* FIRST: Set up the I/O pins you want to use as digital INPUTS. */              C:\code\2008\Fresh Copy - 2008\user_routines.c
003784   8a93     BSF       0x93,0x5,0x0     digital_io_01 = digital_io_02 = digital_io_03 = digital_io_04 = INPUT;         C:\code\2008\Fresh Copy - 2008\user_routines.c
003786   8893     BSF       0x93,0x4,0x0                                                                                    
003788   8693     BSF       0x93,0x3,0x0                                                                                    
00378a   8493     BSF       0x93,0x2,0x0                                                                                    
00378c   8299     BSF       0x99,0x1,0x0     digital_io_05 = digital_io_06 = digital_io_07 = digital_io_08 = INPUT;         C:\code\2008\Fresh Copy - 2008\user_routines.c
00378e   8099     BSF       0x99,0x0,0x0                                                                                    
003790   8e93     BSF       0x93,0x7,0x0                                                                                    
003792   8c93     BSF       0x93,0x6,0x0                                                                                    
003794   849a     BSF       0x9a,0x2,0x0     digital_io_09 = digital_io_10 = digital_io_11 = digital_io_12 = INPUT;         C:\code\2008\Fresh Copy - 2008\user_routines.c
003796   829a     BSF       0x9a,0x1,0x0                                                                                    
003798   8699     BSF       0x99,0x3,0x0                                                                                    
00379a   8499     BSF       0x99,0x2,0x0                                                                                    
00379c   8a9a     BSF       0x9a,0x5,0x0     digital_io_13 = digital_io_14 = digital_io_15 = digital_io_16 = INPUT;         C:\code\2008\Fresh Copy - 2008\user_routines.c
00379e   889a     BSF       0x9a,0x4,0x0                                                                                    
0037a0   8094     BSF       0x94,0x0,0x0                                                                                    
0037a2   869a     BSF       0x9a,0x3,0x0                                                                                    
0037a4   8c9a     BSF       0x9a,0x6,0x0     digital_io_17 = INPUT;                                                         C:\code\2008\Fresh Copy - 2008\user_routines.c
0037a6   8e9a     BSF       0x9a,0x7,0x0     digital_io_18 = INPUT;  /* Used for pneumatic pressure switch. */              C:\code\2008\Fresh Copy - 2008\user_routines.c
                                               /*                                                                           C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                Note: digital_io_01 = digital_io_02 = ... digital_io_04 = INPUT;            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                      is the same as the following:                                         C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                      digital_io_01 = INPUT;                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                      digital_io_02 = INPUT;                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                      ...                                                                   C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                      digital_io_04 = INPUT;                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                               */                                                                           C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           /* SECOND: Set up the I/O pins you want to use as digital OUTPUTS. */            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                             //digital_io_17 = OUTPUT;    /* Example - Not used in Default Code. */         C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           /* THIRD: Initialize the values on the digital outputs. */                       C:\code\2008\Fresh Copy - 2008\user_routines.c
                                             //rc_dig_out17 = 0;                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           /* FOURTH: Set your initial PWM values.  Neutral is 127. */                      C:\code\2008\Fresh Copy - 2008\user_routines.c
0037a8   0102     MOVLB     0x2              pwm01 = pwm02 = pwm03 = pwm04 = pwm05 = pwm06 = pwm07 = pwm08 = 127;           C:\code\2008\Fresh Copy - 2008\user_routines.c
0037aa   0e7f     MOVLW     0x7f                                                                                            
0037ac   6f0b     MOVWF     0xb,0x1                                                                                         
0037ae   c20b     MOVFF     0x20b,0x20a                                                                                     
0037b0   f20a                                                                                                               
0037b2   c20b     MOVFF     0x20b,0x209                                                                                     
0037b4   f209                                                                                                               
0037b6   c20b     MOVFF     0x20b,0x208                                                                                     
0037b8   f208                                                                                                               
0037ba   c20b     MOVFF     0x20b,0x207                                                                                     
0037bc   f207                                                                                                               
0037be   c20b     MOVFF     0x20b,0x206                                                                                     
0037c0   f206                                                                                                               
0037c2   c20b     MOVFF     0x20b,0x205                                                                                     
0037c4   f205                                                                                                               
0037c6   c20b     MOVFF     0x20b,0x204                                                                                     
0037c8   f204                                                                                                               
0037ca   6f13     MOVWF     0x13,0x1         pwm09 = pwm10 = pwm11 = pwm12 = pwm13 = pwm14 = pwm15 = pwm16 = 127;           C:\code\2008\Fresh Copy - 2008\user_routines.c
0037cc   c213     MOVFF     0x213,0x212                                                                                     
0037ce   f212                                                                                                               
0037d0   c213     MOVFF     0x213,0x211                                                                                     
0037d2   f211                                                                                                               
0037d4   c213     MOVFF     0x213,0x210                                                                                     
0037d6   f210                                                                                                               
0037d8   c213     MOVFF     0x213,0x20f                                                                                     
0037da   f20f                                                                                                               
0037dc   c213     MOVFF     0x213,0x20e                                                                                     
0037de   f20e                                                                                                               
0037e0   c213     MOVFF     0x213,0x20d                                                                                     
0037e2   f20d                                                                                                               
0037e4   c213     MOVFF     0x213,0x20c                                                                                     
0037e6   f20c                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           /* FIFTH: Set your PWM output types for PWM OUTPUTS 13-16.                       C:\code\2008\Fresh Copy - 2008\user_routines.c
                                             /*   Choose from these parameters for PWM 13-16 respectively:               */ C:\code\2008\Fresh Copy - 2008\user_routines.c
                                             /*     IFI_PWM  - Standard IFI PWM output generated with Generate_Pwms(...) */ C:\code\2008\Fresh Copy - 2008\user_routines.c
                                             /*     USER_CCP - User can use PWM pin as digital I/O or CCP pin.           */ C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           //  Setup_PWM_Output_Type(IFI_PWM,IFI_PWM,IFI_PWM,IFI_PWM);                      C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                             // changed so PWM() can control PWM outputs 13 through 16                      C:\code\2008\Fresh Copy - 2008\user_routines.c
0037e8   0e01     MOVLW     0x1              Setup_PWM_Output_Type(USER_CCP,USER_CCP,USER_CCP,USER_CCP);                    C:\code\2008\Fresh Copy - 2008\user_routines.c
0037ea   6ee6     MOVWF     0xe6,0x0                                                                                        
0037ec   6ae6     CLRF      0xe6,0x0                                                                                        
0037ee   6ee6     MOVWF     0xe6,0x0                                                                                        
0037f0   6ae6     CLRF      0xe6,0x0                                                                                        
0037f2   6ee6     MOVWF     0xe6,0x0                                                                                        
0037f4   6ae6     CLRF      0xe6,0x0                                                                                        
0037f6   6ee6     MOVWF     0xe6,0x0                                                                                        
0037f8   6ae6     CLRF      0xe6,0x0                                                                                        
0037fa   ec76     CALL      0x26ec,0x0                                                                                      
0037fc   f013                                                                                                               
0037fe   6ef5     MOVWF     0xf5,0x0                                                                                        
003800   0e08     MOVLW     0x8                                                                                             
003802   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
003804   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                             /*                                                                             C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                Example: The following would generate a 40KHz PWM with a 50% duty cycle on the CCP2 pin: C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                    CCP2CON = 0x3C;                                                         C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                    PR2 = 0xF9;                                                             C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                    CCPR2L = 0x7F;                                                          C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                    T2CON = 0;                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                    T2CONbits.TMR2ON = 1;                                                   C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                    Setup_PWM_Output_Type(USER_CCP,IFI_PWM,IFI_PWM,IFI_PWM);                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                             */                                                                             C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                             /* Add any other initialization code here. */                                  C:\code\2008\Fresh Copy - 2008\user_routines.c
003806   ecbe     CALL      0x3f7c,0x0       Initialize_ADC();                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
003808   f01f                                                                                                               
00380a   ece3     CALL      0x55c6,0x0       Initialize_Encoders();                                                         C:\code\2008\Fresh Copy - 2008\user_routines.c
00380c   f02a                                                                                                               
00380e   ec87     CALL      0x470e,0x0       Initialize_Gyro();                                                             C:\code\2008\Fresh Copy - 2008\user_routines.c
003810   f023                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                             // initialize and start 26.2ms timer; pretty handy, but perhaps we might pick a more useful interval? i.e. 1ms? C:\code\2008\Fresh Copy - 2008\user_routines.c
003812   0e30     MOVLW     0x30             T1CON = 0x30; /* 1:8 Prescale */                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
003814   6ecd     MOVWF     0xcd,0x0                                                                                        
003816   0e7f     MOVLW     0x7f             TMR1H = 0x7F; /* Pre-load TMR1 to overflow after 26.2ms */                     C:\code\2008\Fresh Copy - 2008\user_routines.c
003818   6ecf     MOVWF     0xcf,0x0                                                                                        
00381a   68ce     SETF      0xce,0x0         TMR1L = 0xFF;                                                                  C:\code\2008\Fresh Copy - 2008\user_routines.c
00381c   80cd     BSF       0xcd,0x0,0x0     T1CONbits.TMR1ON = 1; /* Turn timer on */                                      C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
00381e   909f     BCF       0x9f,0x0,0x0     IPR1bits.TMR1IP = 0; /* Set Timer1 Interrupt to low priority */                C:\code\2008\Fresh Copy - 2008\user_routines.c
003820   809d     BSF       0x9d,0x0,0x0     PIE1bits.TMR1IE = 1; /* Interrupt when Timer1 overflows */                     C:\code\2008\Fresh Copy - 2008\user_routines.c
003822   8cf2     BSF       0xf2,0x6,0x0     INTCONbits.GIEL = 1; /* Enable Global Low Priority Interrupts */               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                             // initialize the CCP PWM hardware                                             C:\code\2008\Fresh Copy - 2008\user_routines.c
003824   ec86     CALL      0x530c,0x0       Initialize_PWM();                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
003826   f029                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                             // initialize the serial ports                                                 C:\code\2008\Fresh Copy - 2008\user_routines.c
003828   ecfb     CALL      0x49f6,0x0       Init_Serial_Port_One();                                                        C:\code\2008\Fresh Copy - 2008\user_routines.c
00382a   f024                                                                                                               
00382c   ec14     CALL      0x4a28,0x0       Init_Serial_Port_Two();                                                        C:\code\2008\Fresh Copy - 2008\user_routines.c
00382e   f025                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\code\2008\Fresh Copy - 2008\user_routines.c
003830   0101     MOVLB     0x1              stdout_serial_port = SERIAL_PORT_ONE;                                          C:\code\2008\Fresh Copy - 2008\user_routines.c
003832   0e01     MOVLW     0x1                                                                                             
003834   6fd0     MOVWF     0xd0,0x1                                                                                        
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #ifdef TERMINAL_SERIAL_PORT_2                                                    C:\code\2008\Fresh Copy - 2008\user_routines.c
                                             stdout_serial_port = SERIAL_PORT_TWO;                                          C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
003836   0e00     MOVLW     0x0              Putdata(&txdata);            /* DO NOT CHANGE! */                              C:\code\2008\Fresh Copy - 2008\user_routines.c
003838   6ee6     MOVWF     0xe6,0x0                                                                                        
00383a   0e02     MOVLW     0x2                                                                                             
00383c   6ee6     MOVWF     0xe6,0x0                                                                                        
00383e   ec34     CALL      0x2668,0x0                                                                                      
003840   f013                                                                                                               
003842   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003844   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           //  ***  IFI Code Starts Here***                                                 C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           //                                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           //  Serial_Driver_Initialize();                                                  C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           //                                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           //  printf("IFI 2006 User Processor Initialized ...\r");  /* Optional - Print initialization message. */ C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
003846   ecbb     CALL      0x2576,0x0       User_Proc_Is_Ready();         /* DO NOT CHANGE! - last line of User_Initialization */ C:\code\2008\Fresh Copy - 2008\user_routines.c
003848   f012                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
00384a   0efa     MOVLW     0xfa             printf("---TRC Robot Code 2008 Ver. 0.1.2 Initialized---\r\n");                C:\code\2008\Fresh Copy - 2008\user_routines.c
00384c   6e00     MOVWF     0x0,0x0                                                                                         
00384e   0e50     MOVLW     0x50                                                                                            
003850   6e01     MOVWF     0x1,0x0                                                                                         
003852   6a02     CLRF      0x2,0x0                                                                                         
003854   c000     MOVFF     0x0,0xfe6                                                                                       
003856   ffe6                                                                                                               
003858   c001     MOVFF     0x1,0xfe6                                                                                       
00385a   ffe6                                                                                                               
00385c   c002     MOVFF     0x2,0xfe6                                                                                       
00385e   ffe6                                                                                                               
003860   ecb5     CALL      0x576a,0x0                                                                                      
003862   f02b                                                                                                               
003864   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003866   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003868   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00386a   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * FUNCTION NAME: Process_Data_From_Master_uP                                     C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * PURPOSE:       Executes every 26.2ms when it gets new data from the master     C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *                microprocessor.                                                 C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * CALLED FROM:   main.c                                                          C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           * RETURNS:       void                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\user_routines.c
00386c   cfd9     MOVFF     0xfd9,0xfe6    void Process_Data_From_Master_uP(void)                                           C:\code\2008\Fresh Copy - 2008\user_routines.c
00386e   ffe6                                                                                                               
003870   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003872   ffd9                                                                                                               
003874   0e10     MOVLW     0x10                                                                                            
003876   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	static unsigned char count = 0;                                                 C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	static unsigned char camera_menu_active = 0;                                    C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	static unsigned char tracking_menu_active = 0;                                  C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	unsigned char terminal_char;                                                    C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	unsigned char returned_value;                                                   C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		//Encoder Velocity Calculation; Oversampling                                   C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	static char samplesCount = 0;		//Samples out of 2                               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		//Put Pneumatic State Machine Vars Here                                        C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		//Compressor Mode                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	static char firstRunFlag = 1;                                                   C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	static char safeMode = 0;			//Enable Safe(only compressor) Mode                 C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		//Joystick Vars                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	int x, y, z;                                                                    C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		//Some gyro bias stuff here...looks intesting                                  C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	static unsigned int i = 0;                                                      C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	static unsigned int j = 0;                                                      C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	int temp_gyro_rate;                                                             C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	long temp_gyro_angle;                                                           C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	int temp_gyro_bias;                                                             C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	static unsigned int h = 0;                                                      C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// don't move this unless you know what you're doing                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		//I moved it to match the gyro code                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
003878   0e20     MOVLW     0x20           	Getdata(&rxdata);                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
00387a   6ee6     MOVWF     0xe6,0x0                                                                                        
00387c   0e02     MOVLW     0x2                                                                                             
00387e   6ee6     MOVWF     0xe6,0x0                                                                                        
003880   ec1b     CALL      0x2636,0x0                                                                                      
003882   f013                                                                                                               
003884   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003886   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #ifdef GYRO_CAL                                                                  C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	i++;                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	j++; // this will rollover every ~1000 seconds                                  C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	if(j == 10)                                                                     C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		printf("\rCalculating Gyro Bias...");                                          C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	if(j == 60)                                                                     C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		// start a gyro bias calculation                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		Start_Gyro_Bias_Calc();                                                        C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	if(j == 300)                                                                    C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		// terminate the gyro bias calculation                                         C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		Stop_Gyro_Bias_Calc();                                                         C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		// reset the gyro heading angle                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		Reset_Gyro_Angle();                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	//	printf("Done\r");                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	if(i >= 30 && j >= 300)                                                         C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		temp_gyro_bias = Get_Gyro_Bias();                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		temp_gyro_rate = Get_Gyro_Rate();                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		temp_gyro_angle = Get_Gyro_Angle();                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		                                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		//printf(" Factor:%d\r\n", GYRO_CAL_FACTOR);	                                  C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		printf(" Gyro Bias=%d\r\n", temp_gyro_bias);                                   C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		printf(" Gyro Rate=%d\r\n", temp_gyro_rate);                                   C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		printf("Gyro Angle=%d\r\n\r\n", (int)temp_gyro_angle);		                       C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		i = 0;                                                                         C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #ifndef GYRO_CAL                                                                 C:\code\2008\Fresh Copy - 2008\user_routines.c
003888   0ec3     MOVLW     0xc3           	Set_Gyro_Bias(GYRO_BIAS);                                                       C:\code\2008\Fresh Copy - 2008\user_routines.c
00388a   6ee6     MOVWF     0xe6,0x0                                                                                        
00388c   0e03     MOVLW     0x3                                                                                             
00388e   6ee6     MOVWF     0xe6,0x0                                                                                        
003890   ec81     CALL      0x4902,0x0                                                                                      
003892   f024                                                                                                               
003894   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003896   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// send diagnostic information to the terminal                                  C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		//comment me to stop spamming the serial port                                  C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	//Tracking_Info_Terminal();                                                     C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// This function is responsable for camera initialization                       C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// and camera serial data interpretation. Once the camera                       C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// is initialized and starts sending tracking data, this                        C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// function will continuously update the global T_Packet_Data                   C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// structure with the received tracking information.                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           //	Camera_Handler();                                                             C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// This function reads data placed in the T_Packet_Data                         C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// structure by the Camera_Handler() function and if new                        C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// tracking data is available, attempts to keep the center                      C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// of the tracked object in the center of the camera's                          C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// image using two servos that drive a pan/tilt platform.                       C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// If the camera doesn't have the object within it's field                      C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// of view, this function will execute a search algorithm                       C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// in an attempt to find the object.                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           //	Servo_Track();                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// Turn on the "Switch 3" LED on the operator interface if                      C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// the camera is pointed at the green light target. The                         C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// Switch3_LED variable is also used by the Default_Routine()                   C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// function below, so disable it inside Default_Routine()                       C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// if you want to keep this functionality.                                      C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           /*	if(Get_Tracking_State() == CAMERA_ON_TARGET)                                  C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		Switch3_LED = 1;                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	else                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		Switch3_LED = 0;                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	}*/                                                                             C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// IFI's default routine is commented out for safety reasons                    C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// and because it also tries to use PWM outputs one and two,                    C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// which conflicts with the default assignment for the pan                      C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// and tilt servos.                                                             C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           //  Default_Routine();                                                           C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           ///                                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           ///----------------------------------Mappings------------------------------      C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           /// This is some of my (Paul) code, put here because Default_Routine() is commented out C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	//This might use a little cleaning                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
003898   ec11     CALL      0x1422,0x0       configTerminal(); //Interactive Terminal to update drive system configuration  C:\code\2008\Fresh Copy - 2008\user_routines.c
00389a   f00a                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
00389c   0e0c     MOVLW     0xc              x = deadBandInput(RAW_X + YAW_OFFSET, YAW_DB);			//Centered at 0               C:\code\2008\Fresh Copy - 2008\user_routines.c
00389e   6ee6     MOVWF     0xe6,0x0                                                                                        
0038a0   6ae6     CLRF      0xe6,0x0                                                                                        
0038a2   0efa     MOVLW     0xfa                                                                                            
0038a4   0102     MOVLB     0x2                                                                                             
0038a6   252b     ADDWF     0x2b,0x0,0x1                                                                                    
0038a8   6ee6     MOVWF     0xe6,0x0                                                                                        
0038aa   6ae6     CLRF      0xe6,0x0                                                                                        
0038ac   ec3d     CALL      0x127a,0x0                                                                                      
0038ae   f009                                                                                                               
0038b0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0038b2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0038b4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0038b6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0038b8   0e02     MOVLW     0x2                                                                                             
0038ba   cff3     MOVFF     0xff3,0xfdb                                                                                     
0038bc   ffdb                                                                                                               
0038be   0e03     MOVLW     0x3                                                                                             
0038c0   cff4     MOVFF     0xff4,0xfdb                                                                                     
0038c2   ffdb                                                                                                               
0038c4   0e09     MOVLW     0x9              y = deadBandInput(RAW_Y + SPEED_OFFSET, SPEED_DB);		//Centered at 0            C:\code\2008\Fresh Copy - 2008\user_routines.c
0038c6   6ee6     MOVWF     0xe6,0x0                                                                                        
0038c8   6ae6     CLRF      0xe6,0x0                                                                                        
0038ca   0efd     MOVLW     0xfd                                                                                            
0038cc   0102     MOVLB     0x2                                                                                             
0038ce   2526     ADDWF     0x26,0x0,0x1                                                                                    
0038d0   6ee6     MOVWF     0xe6,0x0                                                                                        
0038d2   6ae6     CLRF      0xe6,0x0                                                                                        
0038d4   ec3d     CALL      0x127a,0x0                                                                                      
0038d6   f009                                                                                                               
0038d8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0038da   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0038dc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0038de   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0038e0   0e04     MOVLW     0x4                                                                                             
0038e2   cff3     MOVFF     0xff3,0xfdb                                                                                     
0038e4   ffdb                                                                                                               
0038e6   0e05     MOVLW     0x5                                                                                             
0038e8   cff4     MOVFF     0xff4,0xfdb                                                                                     
0038ea   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
0038ec   0e02     MOVLW     0x2              x = (x*80)/100;											//Steering Potentcy                                  C:\code\2008\Fresh Copy - 2008\user_routines.c
0038ee   cfdb     MOVFF     0xfdb,0x0                                                                                       
0038f0   f000                                                                                                               
0038f2   0e03     MOVLW     0x3                                                                                             
0038f4   cfdb     MOVFF     0xfdb,0x1                                                                                       
0038f6   f001                                                                                                               
0038f8   0e50     MOVLW     0x50                                                                                            
0038fa   0201     MULWF     0x1,0x0                                                                                         
0038fc   cff3     MOVFF     0xff3,0x1                                                                                       
0038fe   f001                                                                                                               
003900   0200     MULWF     0x0,0x0                                                                                         
003902   cff3     MOVFF     0xff3,0x0                                                                                       
003904   f000                                                                                                               
003906   50f4     MOVF      0xf4,0x0,0x0                                                                                    
003908   2601     ADDWF     0x1,0x1,0x0                                                                                     
00390a   0e64     MOVLW     0x64                                                                                            
00390c   6e46     MOVWF     0x46,0x0                                                                                        
00390e   6a47     CLRF      0x47,0x0                                                                                        
003910   c000     MOVFF     0x0,0x41                                                                                        
003912   f041                                                                                                               
003914   c001     MOVFF     0x1,0x42                                                                                        
003916   f042                                                                                                               
003918   ec5c     CALL      0x54b8,0x0                                                                                      
00391a   f02a                                                                                                               
00391c   c041     MOVFF     0x41,0x0                                                                                        
00391e   f000                                                                                                               
003920   c042     MOVFF     0x42,0x1                                                                                        
003922   f001                                                                                                               
003924   0e02     MOVLW     0x2                                                                                             
003926   c000     MOVFF     0x0,0xfdb                                                                                       
003928   ffdb                                                                                                               
00392a   0e03     MOVLW     0x3                                                                                             
00392c   c001     MOVFF     0x1,0xfdb                                                                                       
00392e   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                             //Encoder Velocity Calculation; reduced sampling                               C:\code\2008\Fresh Copy - 2008\user_routines.c
003930   0101     MOVLB     0x1              if(++samplesCount == 2)										                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
003932   2bc7     INCF      0xc7,0x1,0x1                                                                                    
003934   0e02     MOVLW     0x2                                                                                             
003936   5dc7     SUBWF     0xc7,0x0,0x1                                                                                    
003938   e001     BZ        0x393c                                                                                          
00393a   d098     BRA       0x3a6c                                                                                          
                                             {                                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
00393c   0e04     MOVLW     0x4            		Left.Vsetpoint  = (Left.velLim*(y - x))/127; 		//Velocity setting: percentage from inputs*velocity limit -> setpoint C:\code\2008\Fresh Copy - 2008\user_routines.c
00393e   cfdb     MOVFF     0xfdb,0x2                                                                                       
003940   f002                                                                                                               
003942   0e05     MOVLW     0x5                                                                                             
003944   cfdb     MOVFF     0xfdb,0x3                                                                                       
003946   f003                                                                                                               
003948   0e02     MOVLW     0x2                                                                                             
00394a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00394c   5c02     SUBWF     0x2,0x0,0x0                                                                                     
00394e   6e00     MOVWF     0x0,0x0                                                                                         
003950   0e03     MOVLW     0x3                                                                                             
003952   50db     MOVF      0xdb,0x0,0x0                                                                                    
003954   5803     SUBWFB    0x3,0x0,0x0                                                                                     
003956   6e01     MOVWF     0x1,0x0                                                                                         
003958   5000     MOVF      0x0,0x0,0x0                                                                                     
00395a   0394     MULWF     0x94,0x1                                                                                        
00395c   cff3     MOVFF     0xff3,0x186                                                                                     
00395e   f186                                                                                                               
003960   cff4     MOVFF     0xff4,0x187                                                                                     
003962   f187                                                                                                               
003964   0395     MULWF     0x95,0x1                                                                                        
003966   50f3     MOVF      0xf3,0x0,0x0                                                                                    
003968   2787     ADDWF     0x87,0x1,0x1                                                                                    
00396a   5001     MOVF      0x1,0x0,0x0                                                                                     
00396c   0394     MULWF     0x94,0x1                                                                                        
00396e   50f3     MOVF      0xf3,0x0,0x0                                                                                    
003970   2787     ADDWF     0x87,0x1,0x1                                                                                    
003972   0e7f     MOVLW     0x7f                                                                                            
003974   6e46     MOVWF     0x46,0x0                                                                                        
003976   6a47     CLRF      0x47,0x0                                                                                        
003978   c186     MOVFF     0x186,0x41                                                                                      
00397a   f041                                                                                                               
00397c   c187     MOVFF     0x187,0x42                                                                                      
00397e   f042                                                                                                               
003980   ec5c     CALL      0x54b8,0x0                                                                                      
003982   f02a                                                                                                               
003984   c041     MOVFF     0x41,0x186                                                                                      
003986   f186                                                                                                               
003988   c042     MOVFF     0x42,0x187                                                                                      
00398a   f187                                                                                                               
00398c   0e02     MOVLW     0x2            		Right.Vsetpoint = (Right.velLim*(y + x))/127; 	                                C:\code\2008\Fresh Copy - 2008\user_routines.c
00398e   cfdb     MOVFF     0xfdb,0x2                                                                                       
003990   f002                                                                                                               
003992   0e03     MOVLW     0x3                                                                                             
003994   cfdb     MOVFF     0xfdb,0x3                                                                                       
003996   f003                                                                                                               
003998   0e04     MOVLW     0x4                                                                                             
00399a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00399c   2402     ADDWF     0x2,0x0,0x0                                                                                     
00399e   6e00     MOVWF     0x0,0x0                                                                                         
0039a0   0e05     MOVLW     0x5                                                                                             
0039a2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0039a4   2003     ADDWFC    0x3,0x0,0x0                                                                                     
0039a6   6e01     MOVWF     0x1,0x0                                                                                         
0039a8   0101     MOVLB     0x1                                                                                             
0039aa   5000     MOVF      0x0,0x0,0x0                                                                                     
0039ac   03b6     MULWF     0xb6,0x1                                                                                        
0039ae   cff3     MOVFF     0xff3,0x1a8                                                                                     
0039b0   f1a8                                                                                                               
0039b2   cff4     MOVFF     0xff4,0x1a9                                                                                     
0039b4   f1a9                                                                                                               
0039b6   03b7     MULWF     0xb7,0x1                                                                                        
0039b8   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0039ba   27a9     ADDWF     0xa9,0x1,0x1                                                                                    
0039bc   5001     MOVF      0x1,0x0,0x0                                                                                     
0039be   03b6     MULWF     0xb6,0x1                                                                                        
0039c0   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0039c2   27a9     ADDWF     0xa9,0x1,0x1                                                                                    
0039c4   0e7f     MOVLW     0x7f                                                                                            
0039c6   6e46     MOVWF     0x46,0x0                                                                                        
0039c8   6a47     CLRF      0x47,0x0                                                                                        
0039ca   c1a8     MOVFF     0x1a8,0x41                                                                                      
0039cc   f041                                                                                                               
0039ce   c1a9     MOVFF     0x1a9,0x42                                                                                      
0039d0   f042                                                                                                               
0039d2   ec5c     CALL      0x54b8,0x0                                                                                      
0039d4   f02a                                                                                                               
0039d6   c041     MOVFF     0x41,0x1a8                                                                                      
0039d8   f1a8                                                                                                               
0039da   c042     MOVFF     0x42,0x1a9                                                                                      
0039dc   f1a9                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #ifdef DRIVE_POSITION_MODE                                                       C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           		Left.Psetpoint  += Left.Vsetpoint;					//Uses velocity to increment position in position mode C:\code\2008\Fresh Copy - 2008\user_routines.c
                                             		Right.Psetpoint += Right.Vsetpoint;                                          C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           #ifndef DRIVE_DEBUG                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
0039de   68e6     SETF      0xe6,0x0       		L_CIM_1 = L_CIM_2 = doVelPid(&Left, L_ENC_COUNT, L_MOTOR_DIR);                 C:\code\2008\Fresh Copy - 2008\user_routines.c
0039e0   68e6     SETF      0xe6,0x0                                                                                        
0039e2   ecee     CALL      0x55dc,0x0                                                                                      
0039e4   f02a                                                                                                               
0039e6   c03f     MOVFF     0x3f,0x0                                                                                        
0039e8   f000                                                                                                               
0039ea   c040     MOVFF     0x40,0x1                                                                                        
0039ec   f001                                                                                                               
0039ee   c041     MOVFF     0x41,0x2                                                                                        
0039f0   f002                                                                                                               
0039f2   c042     MOVFF     0x42,0x3                                                                                        
0039f4   f003                                                                                                               
0039f6   c000     MOVFF     0x0,0xfe6                                                                                       
0039f8   ffe6                                                                                                               
0039fa   c001     MOVFF     0x1,0xfe6                                                                                       
0039fc   ffe6                                                                                                               
0039fe   c002     MOVFF     0x2,0xfe6                                                                                       
003a00   ffe6                                                                                                               
003a02   c003     MOVFF     0x3,0xfe6                                                                                       
003a04   ffe6                                                                                                               
003a06   0e80     MOVLW     0x80                                                                                            
003a08   6ee6     MOVWF     0xe6,0x0                                                                                        
003a0a   0e01     MOVLW     0x1                                                                                             
003a0c   6ee6     MOVWF     0xe6,0x0                                                                                        
003a0e   ec06     CALL      0xc0c,0x0                                                                                       
003a10   f006                                                                                                               
003a12   6ef5     MOVWF     0xf5,0x0                                                                                        
003a14   0e08     MOVLW     0x8                                                                                             
003a16   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
003a18   50f5     MOVF      0xf5,0x0,0x0                                                                                    
003a1a   cff3     MOVFF     0xff3,0x213                                                                                     
003a1c   f213                                                                                                               
003a1e   cff3     MOVFF     0xff3,0x212                                                                                     
003a20   f212                                                                                                               
                                           #endif                                                                           C:\code\2008\Fresh Copy - 2008\user_routines.c
003a22   0e01     MOVLW     0x1                    R_CIM_1 = R_CIM_2 = doVelPid(&Right, R_ENC_COUNT, R_MOTOR_DIR);          C:\code\2008\Fresh Copy - 2008\user_routines.c
003a24   6ee6     MOVWF     0xe6,0x0                                                                                        
003a26   6ae6     CLRF      0xe6,0x0                                                                                        
003a28   ec2a     CALL      0x5654,0x0                                                                                      
003a2a   f02b                                                                                                               
003a2c   c03f     MOVFF     0x3f,0x0                                                                                        
003a2e   f000                                                                                                               
003a30   c040     MOVFF     0x40,0x1                                                                                        
003a32   f001                                                                                                               
003a34   c041     MOVFF     0x41,0x2                                                                                        
003a36   f002                                                                                                               
003a38   c042     MOVFF     0x42,0x3                                                                                        
003a3a   f003                                                                                                               
003a3c   c000     MOVFF     0x0,0xfe6                                                                                       
003a3e   ffe6                                                                                                               
003a40   c001     MOVFF     0x1,0xfe6                                                                                       
003a42   ffe6                                                                                                               
003a44   c002     MOVFF     0x2,0xfe6                                                                                       
003a46   ffe6                                                                                                               
003a48   c003     MOVFF     0x3,0xfe6                                                                                       
003a4a   ffe6                                                                                                               
003a4c   0ea2     MOVLW     0xa2                                                                                            
003a4e   6ee6     MOVWF     0xe6,0x0                                                                                        
003a50   0e01     MOVLW     0x1                                                                                             
003a52   6ee6     MOVWF     0xe6,0x0                                                                                        
003a54   ec06     CALL      0xc0c,0x0                                                                                       
003a56   f006                                                                                                               
003a58   6ef5     MOVWF     0xf5,0x0                                                                                        
003a5a   0e08     MOVLW     0x8                                                                                             
003a5c   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
003a5e   50f5     MOVF      0xf5,0x0,0x0                                                                                    
003a60   cff3     MOVFF     0xff3,0x211                                                                                     
003a62   f211                                                                                                               
003a64   cff3     MOVFF     0xff3,0x210                                                                                     
003a66   f210                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
003a68   0101     MOVLB     0x1            		samplesCount = 0;		                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
003a6a   6bc7     CLRF      0xc7,0x1                                                                                        
                                             }                                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                             ///Relays                                                                      C:\code\2008\Fresh Copy - 2008\user_routines.c
003a6c   5088     MOVF      0x88,0x0,0x0     COMP_FWD = !COMP_PRESSURE;  /* Power pump only if pressure switch is off. */   C:\code\2008\Fresh Copy - 2008\user_routines.c
003a6e   0b80     ANDLW     0x80                                                                                            
003a70   e002     BZ        0x3a76                                                                                          
003a72   908d     BCF       0x8d,0x0,0x0                                                                                    
003a74   d001     BRA       0x3a78                                                                                          
003a76   808d     BSF       0x8d,0x0,0x0                                                                                    
003a78   908c     BCF       0x8c,0x0,0x0     COMP_REV = 0;                                                                  C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
003a7a   0102     MOVLB     0x2              Pwm1_red   = !Pwm1_green;                                                      C:\code\2008\Fresh Copy - 2008\user_routines.c
003a7c   5100     MOVF      0x0,0x0,0x1                                                                                     
003a7e   0b01     ANDLW     0x1                                                                                             
003a80   e002     BZ        0x3a86                                                                                          
003a82   9300     BCF       0x0,0x1,0x1                                                                                     
003a84   d001     BRA       0x3a88                                                                                          
003a86   8300     BSF       0x0,0x1,0x1                                                                                     
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
003a88   0101     MOVLB     0x1              if(firstRunFlag)                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
003a8a   51c8     MOVF      0xc8,0x0,0x1                                                                                    
003a8c   e01c     BZ        0x3ac6                                                                                          
                                             {                                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
003a8e   0102     MOVLB     0x2            	Pwm1_green = 0;                                                                 C:\code\2008\Fresh Copy - 2008\user_routines.c
003a90   9100     BCF       0x0,0x0,0x1                                                                                     
003a92   0102     MOVLB     0x2              	if(p3_sw_top)			  //Compressor Mode: disables motors if aux1 switch on port 3 joystick is held on reset C:\code\2008\Fresh Copy - 2008\user_routines.c
003a94   ab22     BTFSS     0x22,0x5,0x1                                                                                    
003a96   d015     BRA       0x3ac2                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
003a98   0101     MOVLB     0x1            		safeMode = 1;                                                                  C:\code\2008\Fresh Copy - 2008\user_routines.c
003a9a   0e01     MOVLW     0x1                                                                                             
003a9c   6fc9     MOVWF     0xc9,0x1                                                                                        
003a9e   0ec7     MOVLW     0xc7           		printf("Compressor Mode -- Motors Disabled, Charging Tanks");                  C:\code\2008\Fresh Copy - 2008\user_routines.c
003aa0   6e00     MOVWF     0x0,0x0                                                                                         
003aa2   0e50     MOVLW     0x50                                                                                            
003aa4   6e01     MOVWF     0x1,0x0                                                                                         
003aa6   6a02     CLRF      0x2,0x0                                                                                         
003aa8   c000     MOVFF     0x0,0xfe6                                                                                       
003aaa   ffe6                                                                                                               
003aac   c001     MOVFF     0x1,0xfe6                                                                                       
003aae   ffe6                                                                                                               
003ab0   c002     MOVFF     0x2,0xfe6                                                                                       
003ab2   ffe6                                                                                                               
003ab4   ecb5     CALL      0x576a,0x0                                                                                      
003ab6   f02b                                                                                                               
003ab8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003aba   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003abc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003abe   0102     MOVLB     0x2            		Pwm1_green = 1;                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
003ac0   8100     BSF       0x0,0x0,0x1                                                                                     
                                               }                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
003ac2   0101     MOVLB     0x1            	firstRunFlag = 0;                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
003ac4   6bc8     CLRF      0xc8,0x1                                                                                        
                                             }                                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                             //Safe Mode: disable motors                                                    C:\code\2008\Fresh Copy - 2008\user_routines.c
003ac6   51c9     MOVF      0xc9,0x0,0x1     if(safeMode)                                                                   C:\code\2008\Fresh Copy - 2008\user_routines.c
003ac8   e009     BZ        0x3adc                                                                                          
003aca   0102     MOVLB     0x2              	R_CIM_1 = R_CIM_2 = L_CIM_1 = L_CIM_2 = 127;                                  C:\code\2008\Fresh Copy - 2008\user_routines.c
003acc   0e7f     MOVLW     0x7f                                                                                            
003ace   6f13     MOVWF     0x13,0x1                                                                                        
003ad0   c213     MOVFF     0x213,0x212                                                                                     
003ad2   f212                                                                                                               
003ad4   c213     MOVFF     0x213,0x211                                                                                     
003ad6   f211                                                                                                               
003ad8   c213     MOVFF     0x213,0x210                                                                                     
003ada   f210                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           ///                                                                              C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           ///------------------------------------End Mappings-----------------------       C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           ///	                                                                             C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// IFI's software based PWM pulse generator for PMW ouputs                      C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// 13 through 16. This has been replaced with a hardware-                       C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// based solution, PWM(), below.                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           //	Generate_Pwms(pwm13,pwm14,pwm15,pwm16);                                       C:\code\2008\Fresh Copy - 2008\user_routines.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// see pwm_readme.txt for information about PWM();                              C:\code\2008\Fresh Copy - 2008\user_routines.c
003adc   c213     MOVFF     0x213,0xfe6    	PWM(pwm13,pwm14,pwm15,pwm16);                                                   C:\code\2008\Fresh Copy - 2008\user_routines.c
003ade   ffe6                                                                                                               
003ae0   c212     MOVFF     0x212,0xfe6                                                                                     
003ae2   ffe6                                                                                                               
003ae4   c211     MOVFF     0x211,0xfe6                                                                                     
003ae6   ffe6                                                                                                               
003ae8   c210     MOVFF     0x210,0xfe6                                                                                     
003aea   ffe6                                                                                                               
003aec   ec92     CALL      0x5324,0x0                                                                                      
003aee   f029                                                                                                               
003af0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003af2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003af4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003af6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           	// don't move this unless you know what you're doing                            C:\code\2008\Fresh Copy - 2008\user_routines.c
003af8   0e00     MOVLW     0x0            	Putdata(&txdata);                                                               C:\code\2008\Fresh Copy - 2008\user_routines.c
003afa   6ee6     MOVWF     0xe6,0x0                                                                                        
003afc   0e02     MOVLW     0x2                                                                                             
003afe   6ee6     MOVWF     0xe6,0x0                                                                                        
003b00   ec34     CALL      0x2668,0x0                                                                                      
003b02   f013                                                                                                               
003b04   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003b06   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003b08   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Fresh Copy - 2008\user_routines.c
003b0a   ffe1                                                                                                               
003b0c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003b0e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003b10   ffd9                                                                                                               
003b12   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           //Got rid of Default_Routine since it's not used                                 C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           /******************************************************************************/ C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           /******************************************************************************/ C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           /******************************************************************************/ C:\code\2008\Fresh Copy - 2008\user_routines.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * FILE NAME: user_routines_fast.c <FRC VERSION>                                  C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * DESCRIPTION:                                                                   C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           *  This file is where the user can add their custom code within the framework    C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           *  of the routines below.                                                        C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * USAGE:                                                                         C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           *  You can either modify this file to fit your needs, or remove it from your     C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           *  project and replace it with a modified copy.                                  C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * OPTIONS:  Interrupts are disabled and not used by default.                     C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           *                                                                                C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           #include <stdio.h>                                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           #include "ifi_aliases.h"                                                         C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           #include "ifi_utilities.h"                                                       C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           #include "user_routines.h"                                                       C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           #include "serial_ports.h"                                                        C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           #include "pwm.h"                                                                 C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           // #include "user_Serialdrv.h"                                                   C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           #include "adc.h"                                                                 C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           #include "encoder.h"                                                             C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           #include "gyro.h"                                                                C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           #include "TRCfunctions.h"                                                        C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           extern VelServo Left, Right;                                                     C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           /*** DEFINE USER VARIABLES AND INITIALIZE THEM HERE ***/                         C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           unsigned long timerTicks = 0;                                                    C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           int encoder1Vel = 0;                                                             C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           int encoder2Vel = 0;                                                             C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * FUNCTION NAME: InterruptVectorLow                                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * PURPOSE:       Low priority interrupt vector                                   C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * CALLED FROM:   nowhere by default                                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * DO NOT MODIFY OR DELETE THIS FUNCTION                                          C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           #pragma code InterruptVectorLow = LOW_INT_VECTOR                                 C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           void InterruptVectorLow (void)                                                   C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                             _asm                                                                           C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
000818   ef8a     GOTO      0x3b14             goto InterruptHandlerLow  /*jump to interrupt routine*/                      C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
00081a   f01d                                                                                                               
                                             _endasm                                                                        C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
00081c   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * FUNCTION NAME: InterruptHandlerLow                                             C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * PURPOSE:       Low priority interrupt handler                                  C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * If you want to use these external low priority interrupts or any of the        C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * peripheral interrupts then you must enable them in your initialization         C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * routine.  Innovation First, Inc. will not provide support for using these      C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * interrupts, so be careful.  There is great potential for glitchy code if good  C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * interrupt programming practices are not followed.  Especially read p. 28 of    C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * the "MPLAB(R) C18 C Compiler User's Guide" for information on context saving.  C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * CALLED FROM:   this file, InterruptVectorLow routine                           C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           #pragma code                                                                     C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           #pragma interruptlow InterruptHandlerLow save=PROD,section(".tmpdata")           C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003b14   cfd8     MOVFF     0xfd8,0xfe4    void InterruptHandlerLow ()                                                      C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003b16   ffe4                                                                                                               
003b18   cfe0     MOVFF     0xfe0,0xfe4                                                                                     
003b1a   ffe4                                                                                                               
003b1c   6ee4     MOVWF     0xe4,0x0                                                                                        
003b1e   cfda     MOVFF     0xfda,0xfe4                                                                                     
003b20   ffe4                                                                                                               
003b22   cfe2     MOVFF     0xfe2,0xfda                                                                                     
003b24   ffda                                                                                                               
003b26   cfe9     MOVFF     0xfe9,0xfe4                                                                                     
003b28   ffe4                                                                                                               
003b2a   cfea     MOVFF     0xfea,0xfe4                                                                                     
003b2c   ffe4                                                                                                               
003b2e   cff3     MOVFF     0xff3,0xfe4                                                                                     
003b30   ffe4                                                                                                               
003b32   cff4     MOVFF     0xff4,0xfe4                                                                                     
003b34   ffe4                                                                                                               
003b36   ee00     LFSR      0x0,0x0                                                                                         
003b38   f000                                                                                                               
003b3a   0e24     MOVLW     0x24                                                                                            
003b3c   04e8     DECF      0xe8,0x0,0x0                                                                                    
003b3e   e303     BNC       0x3b46                                                                                          
003b40   cfee     MOVFF     0xfee,0xfe4                                                                                     
003b42   ffe4                                                                                                               
003b44   d7fb     BRA       0x3b3c                                                                                          
003b46   52e6     MOVF      0xe6,0x1,0x0                                                                                    
003b48   cfd9     MOVFF     0xfd9,0xfe6                                                                                     
003b4a   ffe6                                                                                                               
003b4c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003b4e   ffd9                                                                                                               
003b50   0e02     MOVLW     0x2                                                                                             
003b52   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           	unsigned char Port_B;                                                           C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           	unsigned char Port_B_Delta;                                                     C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           	static long prevEnc1 = 0;                                                       C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           	static long prevEnc2 = 0;                                                       C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003b54   509e     MOVF      0x9e,0x0,0x0   	if (PIR1bits.RC1IF && PIE1bits.RC1IE) // rx1 interrupt?                         C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003b56   0b20     ANDLW     0x20                                                                                            
003b58   e006     BZ        0x3b66                                                                                          
003b5a   509d     MOVF      0x9d,0x0,0x0                                                                                    
003b5c   0b20     ANDLW     0x20                                                                                            
003b5e   e003     BZ        0x3b66                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_ONE_RX                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003b60   ecdb     CALL      0x4bb6,0x0     		Rx_1_Int_Handler(); // call the rx1 interrupt handler (in serial_ports.c)      C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003b62   f025                                                                                                               
                                           		#endif                                                                         C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003b64   d0b6     BRA       0x3cd2         	else if (PIR3bits.RC2IF && PIE3bits.RC2IE) // rx2 interrupt?                    C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003b66   50a4     MOVF      0xa4,0x0,0x0                                                                                    
003b68   0b20     ANDLW     0x20                                                                                            
003b6a   e006     BZ        0x3b78                                                                                          
003b6c   50a3     MOVF      0xa3,0x0,0x0                                                                                    
003b6e   0b20     ANDLW     0x20                                                                                            
003b70   e003     BZ        0x3b78                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_TWO_RX                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003b72   ecfa     CALL      0x4bf4,0x0     		Rx_2_Int_Handler(); // call the rx2 interrupt handler (in serial_ports.c)      C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003b74   f025                                                                                                               
                                           		#endif                                                                         C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003b76   d0ad     BRA       0x3cd2         	else if (PIR1bits.TX1IF && PIE1bits.TX1IE) // tx1 interrupt?                    C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003b78   509e     MOVF      0x9e,0x0,0x0                                                                                    
003b7a   0b10     ANDLW     0x10                                                                                            
003b7c   e006     BZ        0x3b8a                                                                                          
003b7e   509d     MOVF      0x9d,0x0,0x0                                                                                    
003b80   0b10     ANDLW     0x10                                                                                            
003b82   e003     BZ        0x3b8a                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_ONE_TX                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003b84   ec19     CALL      0x4c32,0x0     		Tx_1_Int_Handler(); // call the tx1 interrupt handler (in serial_ports.c)      C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003b86   f026                                                                                                               
                                           		#endif                                                                         C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003b88   d0a4     BRA       0x3cd2         	else if (PIR3bits.TX2IF && PIE3bits.TX2IE) // tx2 interrupt?                    C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003b8a   50a4     MOVF      0xa4,0x0,0x0                                                                                    
003b8c   0b10     ANDLW     0x10                                                                                            
003b8e   e006     BZ        0x3b9c                                                                                          
003b90   50a3     MOVF      0xa3,0x0,0x0                                                                                    
003b92   0b10     ANDLW     0x10                                                                                            
003b94   e003     BZ        0x3b9c                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_TWO_TX                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003b96   ec31     CALL      0x4c62,0x0     		Tx_2_Int_Handler(); // call the tx2 interrupt handler (in serial_ports.c)      C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003b98   f026                                                                                                               
                                           		#endif                                                                         C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003b9a   d09b     BRA       0x3cd2         	else if(PIR1bits.TMR2IF && PIE1bits.TMR2IE) // timer 2 interrupt?               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003b9c   509e     MOVF      0x9e,0x0,0x0                                                                                    
003b9e   0b02     ANDLW     0x2                                                                                             
003ba0   e007     BZ        0x3bb0                                                                                          
003ba2   509d     MOVF      0x9d,0x0,0x0                                                                                    
003ba4   0b02     ANDLW     0x2                                                                                             
003ba6   e004     BZ        0x3bb0                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003ba8   929e     BCF       0x9e,0x1,0x0   		PIR1bits.TMR2IF = 0; // clear the timer 2 interrupt flag [92]                  C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003baa   eceb     CALL      0x41d6,0x0     		Timer_2_Int_Handler(); // call the timer 2 interrupt handler (in adc.c)        C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003bac   f020                                                                                                               
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003bae   d091     BRA       0x3cd2         	else if(PIR1bits.ADIF && PIE1bits.ADIE) // ADC interrupt                        C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003bb0   509e     MOVF      0x9e,0x0,0x0                                                                                    
003bb2   0b40     ANDLW     0x40                                                                                            
003bb4   e007     BZ        0x3bc4                                                                                          
003bb6   509d     MOVF      0x9d,0x0,0x0                                                                                    
003bb8   0b40     ANDLW     0x40                                                                                            
003bba   e004     BZ        0x3bc4                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003bbc   9c9e     BCF       0x9e,0x6,0x0   		PIR1bits.ADIF = 0; // clear the ADC interrupt flag                             C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003bbe   eced     CALL      0x41da,0x0     		ADC_Int_Handler(); // call the ADC interrupt handler (in adc.c)                C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003bc0   f020                                                                                                               
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003bc2   d087     BRA       0x3cd2         	else if (INTCON3bits.INT2IF && INTCON3bits.INT2IE) // encoder 1 interrupt?      C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003bc4   50f0     MOVF      0xf0,0x0,0x0                                                                                    
003bc6   0b02     ANDLW     0x2                                                                                             
003bc8   e007     BZ        0x3bd8                                                                                          
003bca   50f0     MOVF      0xf0,0x0,0x0                                                                                    
003bcc   0b10     ANDLW     0x10                                                                                            
003bce   e004     BZ        0x3bd8                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003bd0   92f0     BCF       0xf0,0x1,0x0   		INTCON3bits.INT2IF = 0; // clear the interrupt flag                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           		#ifdef ENABLE_ENCODER_1                                                        C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003bd2   ec1a     CALL      0x5634,0x0     		Encoder_1_Int_Handler(); // call the left encoder interrupt handler (in encoder.c) C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003bd4   f02b                                                                                                               
                                           		#endif                                                                         C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003bd6   d07d     BRA       0x3cd2         	else if (INTCON3bits.INT3IF && INTCON3bits.INT3IE) // encoder 2 interrupt?      C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003bd8   50f0     MOVF      0xf0,0x0,0x0                                                                                    
003bda   0b04     ANDLW     0x4                                                                                             
003bdc   e007     BZ        0x3bec                                                                                          
003bde   50f0     MOVF      0xf0,0x0,0x0                                                                                    
003be0   0b20     ANDLW     0x20                                                                                            
003be2   e004     BZ        0x3bec                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003be4   94f0     BCF       0xf0,0x2,0x0   		INTCON3bits.INT3IF = 0; // clear the interrupt flag                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           		#ifdef ENABLE_ENCODER_2                                                        C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003be6   ec56     CALL      0x56ac,0x0     		Encoder_2_Int_Handler(); // call right encoder interrupt handler (in encoder.c) C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003be8   f02b                                                                                                               
                                           		#endif                                                                         C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003bea   d073     BRA       0x3cd2         	else if (INTCONbits.RBIF && INTCONbits.RBIE) // encoder 3-6 interrupt?          C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003bec   50f2     MOVF      0xf2,0x0,0x0                                                                                    
003bee   0b01     ANDLW     0x1                                                                                             
003bf0   e018     BZ        0x3c22                                                                                          
003bf2   50f2     MOVF      0xf2,0x0,0x0                                                                                    
003bf4   0b08     ANDLW     0x8                                                                                             
003bf6   e015     BZ        0x3c22                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003bf8   5081     MOVF      0x81,0x0,0x0   		Port_B = PORTB; // remove the "mismatch condition" by reading port b             C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003bfa   6edf     MOVWF     0xdf,0x0                                                                                        
003bfc   90f2     BCF       0xf2,0x0,0x0   		INTCONbits.RBIF = 0; // clear the interrupt flag                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003bfe   50df     MOVF      0xdf,0x0,0x0   		Port_B_Delta = Port_B ^ Old_Port_B; // determine which bits have changed       C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c00   0102     MOVLB     0x2                                                                                             
003c02   19bf     XORWF     0xbf,0x0,0x1                                                                                    
003c04   6ee7     MOVWF     0xe7,0x0                                                                                        
003c06   0e01     MOVLW     0x1                                                                                             
003c08   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
003c0a   ffdb                                                                                                               
003c0c   cfdf     MOVFF     0xfdf,0x2bf    		Old_Port_B = Port_B; // save a copy of port b for next time around             C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c0e   f2bf                                                                                                               
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c10   a8db     BTFSS     0xdb,0x4,0x0   		if(Port_B_Delta & 0x10) // did external interrupt 3 change state?              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c12   d000     BRA       0x3c14                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           			#ifdef ENABLE_ENCODER_3                                                       C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           			Encoder_3_Int_Handler(Port_B & 0x10 ? 1 : 0); // call the encoder 3 interrupt handler (in encoder.c) C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           			#endif                                                                        C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c14   aadb     BTFSS     0xdb,0x5,0x0   		if(Port_B_Delta & 0x20) // did external interrupt 4 change state?              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c16   d000     BRA       0x3c18                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           			#ifdef ENABLE_ENCODER_4                                                       C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           			Encoder_4_Int_Handler(Port_B & 0x20 ? 1 : 0); // call the encoder 4 interrupt handler (in encoder.c) C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           			#endif                                                                        C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c18   acdb     BTFSS     0xdb,0x6,0x0   		if(Port_B_Delta & 0x40) // did external interrupt 5 change state?              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c1a   d000     BRA       0x3c1c                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           			#ifdef ENABLE_ENCODER_5                                                       C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           			Encoder_5_Int_Handler(Port_B & 0x40 ? 1 : 0); // call the encoder 5 interrupt handler (in encoder.c) C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           			#endif                                                                        C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c1c   aedb     BTFSS     0xdb,0x7,0x0   		if(Port_B_Delta & 0x80) // did external interrupt 6 change state?              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c1e   d000     BRA       0x3c20                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           			#ifdef ENABLE_ENCODER_6                                                       C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           			Encoder_6_Int_Handler(Port_B & 0x80 ? 1 : 0); // call the encoder 6 interrupt handler (in encoder.c) C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           			#endif                                                                        C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c20   d058     BRA       0x3cd2         	} else if (PIR1bits.TMR1IF)                                                     C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c22   a09e     BTFSS     0x9e,0x0,0x0                                                                                    
003c24   d056     BRA       0x3cd2                                                                                          
                                           	{                                                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c26   909e     BCF       0x9e,0x0,0x0   		PIR1bits.TMR1IF = 0; // Clear the Timer1 Interrupt Flag                        C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c28   0e7f     MOVLW     0x7f           		TMR1H = 0x7F; 		 // Reset Timer 1                                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c2a   6ecf     MOVWF     0xcf,0x0                                                                                        
003c2c   68ce     SETF      0xce,0x0       		TMR1L = 0xFF;                                                                  C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c2e   0102     MOVLB     0x2            		timerTicks++;                                                                  C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c30   2b72     INCF      0x72,0x1,0x1                                                                                    
003c32   0e00     MOVLW     0x0                                                                                             
003c34   2373     ADDWFC    0x73,0x1,0x1                                                                                    
003c36   2374     ADDWFC    0x74,0x1,0x1                                                                                    
003c38   2375     ADDWFC    0x75,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c3a   c272     MOVFF     0x272,0x4f     		if(timerTicks % 2 == 0)                                                        C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c3c   f04f                                                                                                               
003c3e   c273     MOVFF     0x273,0x50                                                                                      
003c40   f050                                                                                                               
003c42   c274     MOVFF     0x274,0x51                                                                                      
003c44   f051                                                                                                               
003c46   c275     MOVFF     0x275,0x52                                                                                      
003c48   f052                                                                                                               
003c4a   0e01     MOVLW     0x1                                                                                             
003c4c   164f     ANDWF     0x4f,0x1,0x0                                                                                    
003c4e   6a50     CLRF      0x50,0x0                                                                                        
003c50   6a51     CLRF      0x51,0x0                                                                                        
003c52   6a52     CLRF      0x52,0x0                                                                                        
003c54   504f     MOVF      0x4f,0x0,0x0                                                                                    
003c56   1050     IORWF     0x50,0x0,0x0                                                                                    
003c58   1051     IORWF     0x51,0x0,0x0                                                                                    
003c5a   1052     IORWF     0x52,0x0,0x0                                                                                    
003c5c   e13a     BNZ       0x3cd2                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c5e   ecee     CALL      0x55dc,0x0     			encoder1Vel = Get_Encoder_1_Count() - prevEnc1;                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c60   f02a                                                                                                               
003c62   0102     MOVLB     0x2                                                                                             
003c64   517a     MOVF      0x7a,0x0,0x1                                                                                    
003c66   5c3f     SUBWF     0x3f,0x0,0x0                                                                                    
003c68   6e4f     MOVWF     0x4f,0x0                                                                                        
003c6a   517b     MOVF      0x7b,0x0,0x1                                                                                    
003c6c   5840     SUBWFB    0x40,0x0,0x0                                                                                    
003c6e   6e50     MOVWF     0x50,0x0                                                                                        
003c70   517c     MOVF      0x7c,0x0,0x1                                                                                    
003c72   5841     SUBWFB    0x41,0x0,0x0                                                                                    
003c74   6e51     MOVWF     0x51,0x0                                                                                        
003c76   517d     MOVF      0x7d,0x0,0x1                                                                                    
003c78   5842     SUBWFB    0x42,0x0,0x0                                                                                    
003c7a   6e52     MOVWF     0x52,0x0                                                                                        
003c7c   c04f     MOVFF     0x4f,0x276                                                                                      
003c7e   f276                                                                                                               
003c80   c050     MOVFF     0x50,0x277                                                                                      
003c82   f277                                                                                                               
003c84   ec2a     CALL      0x5654,0x0     			encoder2Vel = Get_Encoder_2_Count() - prevEnc2;                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003c86   f02b                                                                                                               
003c88   0102     MOVLB     0x2                                                                                             
003c8a   517e     MOVF      0x7e,0x0,0x1                                                                                    
003c8c   5c3f     SUBWF     0x3f,0x0,0x0                                                                                    
003c8e   6e4f     MOVWF     0x4f,0x0                                                                                        
003c90   517f     MOVF      0x7f,0x0,0x1                                                                                    
003c92   5840     SUBWFB    0x40,0x0,0x0                                                                                    
003c94   6e50     MOVWF     0x50,0x0                                                                                        
003c96   5180     MOVF      0x80,0x0,0x1                                                                                    
003c98   5841     SUBWFB    0x41,0x0,0x0                                                                                    
003c9a   6e51     MOVWF     0x51,0x0                                                                                        
003c9c   5181     MOVF      0x81,0x0,0x1                                                                                    
003c9e   5842     SUBWFB    0x42,0x0,0x0                                                                                    
003ca0   6e52     MOVWF     0x52,0x0                                                                                        
003ca2   c04f     MOVFF     0x4f,0x278                                                                                      
003ca4   f278                                                                                                               
003ca6   c050     MOVFF     0x50,0x279                                                                                      
003ca8   f279                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003caa   ecee     CALL      0x55dc,0x0     			prevEnc1 = Get_Encoder_1_Count();                                             C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003cac   f02a                                                                                                               
003cae   c03f     MOVFF     0x3f,0x27a                                                                                      
003cb0   f27a                                                                                                               
003cb2   c040     MOVFF     0x40,0x27b                                                                                      
003cb4   f27b                                                                                                               
003cb6   c041     MOVFF     0x41,0x27c                                                                                      
003cb8   f27c                                                                                                               
003cba   c042     MOVFF     0x42,0x27d                                                                                      
003cbc   f27d                                                                                                               
003cbe   ec2a     CALL      0x5654,0x0     			prevEnc2 = Get_Encoder_2_Count();                                             C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003cc0   f02b                                                                                                               
003cc2   c03f     MOVFF     0x3f,0x27e                                                                                      
003cc4   f27e                                                                                                               
003cc6   c040     MOVFF     0x40,0x27f                                                                                      
003cc8   f27f                                                                                                               
003cca   c041     MOVFF     0x41,0x280                                                                                      
003ccc   f280                                                                                                               
003cce   c042     MOVFF     0x42,0x281                                                                                      
003cd0   f281                                                                                                               
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           	}                                                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           //  ***  IFI Code Starts Here***                                                 C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           //                                                                               C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           //  unsigned char int_byte;                                                      C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           //  if (INTCON3bits.INT2IF && INTCON3bits.INT2IE)       /* The INT2 pin is RB2/DIG I/O 1. */ C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           //  {                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           //    INTCON3bits.INT2IF = 0;                                                    C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           //  }                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           //  else if (INTCON3bits.INT3IF && INTCON3bits.INT3IE)  /* The INT3 pin is RB3/DIG I/O 2. */ C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           //  {                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           //    INTCON3bits.INT3IF = 0;                                                    C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           //  }                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           //  else if (INTCONbits.RBIF && INTCONbits.RBIE)  /* DIG I/O 3-6 (RB4, RB5, RB6, or RB7) changed. */ C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           //  {                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           //    int_byte = PORTB;          /* You must read or write to PORTB */           C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           //    INTCONbits.RBIF = 0;     /*     and clear the interrupt flag         */    C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           //  }                                        /*     to clear the interrupt condition.  */ C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           //  else                                                                         C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           //  {                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           //    CheckUartInts();    /* For Dynamic Debug Tool or buffered printf features. */ C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           //  }                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003cd2   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003cd4   ffe1                                                                                                               
003cd6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003cd8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003cda   ffd9                                                                                                               
003cdc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003cde   ee00     LFSR      0x0,0x23                                                                                        
003ce0   f023                                                                                                               
003ce2   0e24     MOVLW     0x24                                                                                            
003ce4   04e8     DECF      0xe8,0x0,0x0                                                                                    
003ce6   e303     BNC       0x3cee                                                                                          
003ce8   cfe5     MOVFF     0xfe5,0xfed                                                                                     
003cea   ffed                                                                                                               
003cec   d7fb     BRA       0x3ce4                                                                                          
003cee   cfe5     MOVFF     0xfe5,0xff4                                                                                     
003cf0   fff4                                                                                                               
003cf2   cfe5     MOVFF     0xfe5,0xff3                                                                                     
003cf4   fff3                                                                                                               
003cf6   cfe5     MOVFF     0xfe5,0xfea                                                                                     
003cf8   ffea                                                                                                               
003cfa   cfe5     MOVFF     0xfe5,0xfe9                                                                                     
003cfc   ffe9                                                                                                               
003cfe   cfe5     MOVFF     0xfe5,0xfda                                                                                     
003d00   ffda                                                                                                               
003d02   50e5     MOVF      0xe5,0x0,0x0                                                                                    
003d04   cfe5     MOVFF     0xfe5,0xfe0                                                                                     
003d06   ffe0                                                                                                               
003d08   cfe5     MOVFF     0xfe5,0xfd8                                                                                     
003d0a   ffd8                                                                                                               
003d0c   0010     RETFIE    0x0                                                                                             
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * FUNCTION NAME: User_Autonomous_Code                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * PURPOSE:       Execute user's code during autonomous robot operation.          C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * You should modify this routine by adding code which you wish to run in         C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * autonomous mode.  It will be executed every program loop, and not              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * wait for or use any data from the Operator Interface.                          C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * CALLED FROM:   main.c file, main() routine when in Autonomous mode             C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           void User_Autonomous_Code(void)                                                  C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                             static char state = 0;	                                                        C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                             static unsigned long prevTmr = 0;                                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003d0e   0102     MOVLB     0x2              timerTicks = 0;                                                                C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003d10   6b72     CLRF      0x72,0x1                                                                                        
003d12   6b73     CLRF      0x73,0x1                                                                                        
003d14   6b74     CLRF      0x74,0x1                                                                                        
003d16   6b75     CLRF      0x75,0x1                                                                                        
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                             /* Initialize all PWMs and Relays when entering Autonomous mode, or else it    C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                will be stuck with the last values mapped from the joysticks.  Remember,    C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                even when Disabled it is reading inputs from the Operator Interface.        C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                             */                                                                             C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003d18   0102     MOVLB     0x2              pwm01 = pwm02 = pwm03 = pwm04 = pwm05 = pwm06 = pwm07 = pwm08 = 127;           C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003d1a   0e7f     MOVLW     0x7f                                                                                            
003d1c   6f0b     MOVWF     0xb,0x1                                                                                         
003d1e   c20b     MOVFF     0x20b,0x20a                                                                                     
003d20   f20a                                                                                                               
003d22   c20b     MOVFF     0x20b,0x209                                                                                     
003d24   f209                                                                                                               
003d26   c20b     MOVFF     0x20b,0x208                                                                                     
003d28   f208                                                                                                               
003d2a   c20b     MOVFF     0x20b,0x207                                                                                     
003d2c   f207                                                                                                               
003d2e   c20b     MOVFF     0x20b,0x206                                                                                     
003d30   f206                                                                                                               
003d32   c20b     MOVFF     0x20b,0x205                                                                                     
003d34   f205                                                                                                               
003d36   c20b     MOVFF     0x20b,0x204                                                                                     
003d38   f204                                                                                                               
003d3a   6f13     MOVWF     0x13,0x1         pwm09 = pwm10 = pwm11 = pwm12 = pwm13 = pwm14 = pwm15 = pwm16 = 127;           C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003d3c   c213     MOVFF     0x213,0x212                                                                                     
003d3e   f212                                                                                                               
003d40   c213     MOVFF     0x213,0x211                                                                                     
003d42   f211                                                                                                               
003d44   c213     MOVFF     0x213,0x210                                                                                     
003d46   f210                                                                                                               
003d48   c213     MOVFF     0x213,0x20f                                                                                     
003d4a   f20f                                                                                                               
003d4c   c213     MOVFF     0x213,0x20e                                                                                     
003d4e   f20e                                                                                                               
003d50   c213     MOVFF     0x213,0x20d                                                                                     
003d52   f20d                                                                                                               
003d54   c213     MOVFF     0x213,0x20c                                                                                     
003d56   f20c                                                                                                               
003d58   928c     BCF       0x8c,0x1,0x0     relay1_fwd = relay1_rev = relay2_fwd = relay2_rev = 0;                         C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003d5a   928d     BCF       0x8d,0x1,0x0                                                                                    
003d5c   908c     BCF       0x8c,0x0,0x0                                                                                    
003d5e   908d     BCF       0x8d,0x0,0x0                                                                                    
003d60   968c     BCF       0x8c,0x3,0x0     relay3_fwd = relay3_rev = relay4_fwd = relay4_rev = 0;                         C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003d62   968d     BCF       0x8d,0x3,0x0                                                                                    
003d64   948c     BCF       0x8c,0x2,0x0                                                                                    
003d66   948d     BCF       0x8d,0x2,0x0                                                                                    
003d68   9a8c     BCF       0x8c,0x5,0x0     relay5_fwd = relay5_rev = relay6_fwd = relay6_rev = 0;                         C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003d6a   9a8d     BCF       0x8d,0x5,0x0                                                                                    
003d6c   988c     BCF       0x8c,0x4,0x0                                                                                    
003d6e   988d     BCF       0x8d,0x4,0x0                                                                                    
003d70   9e8c     BCF       0x8c,0x7,0x0     relay7_fwd = relay7_rev = relay8_fwd = relay8_rev = 0;                         C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003d72   9091     BCF       0x91,0x0,0x0                                                                                    
003d74   9c8c     BCF       0x8c,0x6,0x0                                                                                    
003d76   9c8d     BCF       0x8d,0x6,0x0                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003d78   0102     MOVLB     0x2              while (autonomous_mode)   /* DO NOT CHANGE! */                                 C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003d7a   ad21     BTFSS     0x21,0x6,0x1                                                                                    
003d7c   d0f5     BRA       0x3f68                                                                                          
003f66   d708     BRA       0x3d78                                                                                          
                                             {                                                                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003d7e   0102     MOVLB     0x2                if (statusflag.NEW_SPI_DATA)      /* 26.2ms loop area */                     C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003d80   a140     BTFSS     0x40,0x0,0x1                                                                                    
003d82   d0f1     BRA       0x3f66                                                                                          
                                               {                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003d84   0e20     MOVLW     0x20           		Getdata(&rxdata);   /* DO NOT DELETE, or you will be stuck here forever! */    C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003d86   6ee6     MOVWF     0xe6,0x0                                                                                        
003d88   0e02     MOVLW     0x2                                                                                             
003d8a   6ee6     MOVWF     0xe6,0x0                                                                                        
003d8c   ec1b     CALL      0x2636,0x0                                                                                      
003d8e   f013                                                                                                               
003d90   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003d92   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003d94   d8ea     RCALL     0x3f6a         		Process_Data_From_Local_IO(); //Updates Gyro, ADC                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003d96   0102     MOVLB     0x2            		switch(state)                                                                  C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003d98   5182     MOVF      0x82,0x0,0x1                                                                                    
003d9a   0a02     XORLW     0x2                                                                                             
003d9c   e05e     BZ        0x3e5a                                                                                          
003d9e   0a03     XORLW     0x3                                                                                             
003da0   e050     BZ        0x3e42                                                                                          
003da2   0a01     XORLW     0x1                                                                                             
003da4   e001     BZ        0x3da8                                                                                          
003da6   d061     BRA       0x3e6a                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           			case 0:                                                                       C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003da8   0e28     MOVLW     0x28           				Left.Vsetpoint = Right.Vsetpoint = 40;                                       C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003daa   0101     MOVLB     0x1                                                                                             
003dac   6fa8     MOVWF     0xa8,0x1                                                                                        
003dae   6ba9     CLRF      0xa9,0x1                                                                                        
003db0   0101     MOVLB     0x1                                                                                             
003db2   6f86     MOVWF     0x86,0x1                                                                                        
003db4   6b87     CLRF      0x87,0x1                                                                                        
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003db6   ecee     CALL      0x55dc,0x0     				if((Get_Encoder_1_Count()+ Get_Encoder_2_Count())/2 > 3000)                  C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003db8   f02a                                                                                                               
003dba   c03f     MOVFF     0x3f,0x0                                                                                        
003dbc   f000                                                                                                               
003dbe   c040     MOVFF     0x40,0x1                                                                                        
003dc0   f001                                                                                                               
003dc2   c041     MOVFF     0x41,0x2                                                                                        
003dc4   f002                                                                                                               
003dc6   c042     MOVFF     0x42,0x3                                                                                        
003dc8   f003                                                                                                               
003dca   c000     MOVFF     0x0,0xfe6                                                                                       
003dcc   ffe6                                                                                                               
003dce   c001     MOVFF     0x1,0xfe6                                                                                       
003dd0   ffe6                                                                                                               
003dd2   c002     MOVFF     0x2,0xfe6                                                                                       
003dd4   ffe6                                                                                                               
003dd6   c003     MOVFF     0x3,0xfe6                                                                                       
003dd8   ffe6                                                                                                               
003dda   ec2a     CALL      0x5654,0x0                                                                                      
003ddc   f02b                                                                                                               
003dde   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003de0   cfe7     MOVFF     0xfe7,0x3                                                                                       
003de2   f003                                                                                                               
003de4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003de6   cfe7     MOVFF     0xfe7,0x2                                                                                       
003de8   f002                                                                                                               
003dea   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003dec   cfe7     MOVFF     0xfe7,0x1                                                                                       
003dee   f001                                                                                                               
003df0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003df2   cfe7     MOVFF     0xfe7,0x0                                                                                       
003df4   f000                                                                                                               
003df6   5000     MOVF      0x0,0x0,0x0                                                                                     
003df8   243f     ADDWF     0x3f,0x0,0x0                                                                                    
003dfa   6e3f     MOVWF     0x3f,0x0                                                                                        
003dfc   5001     MOVF      0x1,0x0,0x0                                                                                     
003dfe   2040     ADDWFC    0x40,0x0,0x0                                                                                    
003e00   6e40     MOVWF     0x40,0x0                                                                                        
003e02   5002     MOVF      0x2,0x0,0x0                                                                                     
003e04   2041     ADDWFC    0x41,0x0,0x0                                                                                    
003e06   6e41     MOVWF     0x41,0x0                                                                                        
003e08   5003     MOVF      0x3,0x0,0x0                                                                                     
003e0a   2042     ADDWFC    0x42,0x0,0x0                                                                                    
003e0c   6e42     MOVWF     0x42,0x0                                                                                        
003e0e   0e02     MOVLW     0x2                                                                                             
003e10   6e44     MOVWF     0x44,0x0                                                                                        
003e12   6a45     CLRF      0x45,0x0                                                                                        
003e14   6a46     CLRF      0x46,0x0                                                                                        
003e16   6a47     CLRF      0x47,0x0                                                                                        
003e18   ec82     CALL      0x5504,0x0                                                                                      
003e1a   f02a                                                                                                               
003e1c   0e00     MOVLW     0x0                                                                                             
003e1e   1842     XORWF     0x42,0x0,0x0                                                                                    
003e20   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
003e22   d002     BRA       0x3e28                                                                                          
003e24   3442     RLCF      0x42,0x0,0x0                                                                                    
003e26   d009     BRA       0x3e3a                                                                                          
003e28   0eb8     MOVLW     0xb8                                                                                            
003e2a   80d8     BSF       0xd8,0x0,0x0                                                                                    
003e2c   543f     SUBFWB    0x3f,0x0,0x0                                                                                    
003e2e   0e0b     MOVLW     0xb                                                                                             
003e30   5440     SUBFWB    0x40,0x0,0x0                                                                                    
003e32   0e00     MOVLW     0x0                                                                                             
003e34   5441     SUBFWB    0x41,0x0,0x0                                                                                    
003e36   0e00     MOVLW     0x0                                                                                             
003e38   5442     SUBFWB    0x42,0x0,0x0                                                                                    
003e3a   e202     BC        0x3e40                                                                                          
003e3c   0102     MOVLB     0x2            					state++;                                                                    C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003e3e   2b82     INCF      0x82,0x1,0x1                                                                                    
003e40   d014     BRA       0x3e6a         			break;                                                                        C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           			case 1:                                                                       C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003e42   ecc9     CALL      0x1392,0x0     				if(turn())                                                                   C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003e44   f009                                                                                                               
003e46   cff3     MOVFF     0xff3,0x0                                                                                       
003e48   f000                                                                                                               
003e4a   cff4     MOVFF     0xff4,0x1                                                                                       
003e4c   f001                                                                                                               
003e4e   5000     MOVF      0x0,0x0,0x0                                                                                     
003e50   1001     IORWF     0x1,0x0,0x0                                                                                     
003e52   e002     BZ        0x3e58                                                                                          
003e54   0102     MOVLB     0x2            					state++;                                                                    C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003e56   2b82     INCF      0x82,0x1,0x1                                                                                    
003e58   d008     BRA       0x3e6a         			break;                                                                        C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           			case 2:                                                                       C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003e5a   0e21     MOVLW     0x21           				Left.Vsetpoint = Right.Vsetpoint = 33;                                       C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003e5c   0101     MOVLB     0x1                                                                                             
003e5e   6fa8     MOVWF     0xa8,0x1                                                                                        
003e60   6ba9     CLRF      0xa9,0x1                                                                                        
003e62   0101     MOVLB     0x1                                                                                             
003e64   6f86     MOVWF     0x86,0x1                                                                                        
003e66   6b87     CLRF      0x87,0x1                                                                                        
003e68   d000     BRA       0x3e6a         			break;                                                                        C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           		}                                                                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           					                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003e6a   0e83     MOVLW     0x83           		if(timerTicks - prevTmr > 1)			//52.4ms Timer aea                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003e6c   6ee9     MOVWF     0xe9,0x0                                                                                        
003e6e   0e02     MOVLW     0x2                                                                                             
003e70   6eea     MOVWF     0xea,0x0                                                                                        
003e72   50ee     MOVF      0xee,0x0,0x0                                                                                    
003e74   0102     MOVLB     0x2                                                                                             
003e76   5d72     SUBWF     0x72,0x0,0x1                                                                                    
003e78   6e00     MOVWF     0x0,0x0                                                                                         
003e7a   50ee     MOVF      0xee,0x0,0x0                                                                                    
003e7c   5973     SUBWFB    0x73,0x0,0x1                                                                                    
003e7e   6e01     MOVWF     0x1,0x0                                                                                         
003e80   50ee     MOVF      0xee,0x0,0x0                                                                                    
003e82   5974     SUBWFB    0x74,0x0,0x1                                                                                    
003e84   6e02     MOVWF     0x2,0x0                                                                                         
003e86   50ee     MOVF      0xee,0x0,0x0                                                                                    
003e88   5975     SUBWFB    0x75,0x0,0x1                                                                                    
003e8a   6e03     MOVWF     0x3,0x0                                                                                         
003e8c   0e01     MOVLW     0x1                                                                                             
003e8e   80d8     BSF       0xd8,0x0,0x0                                                                                    
003e90   5400     SUBFWB    0x0,0x0,0x0                                                                                     
003e92   0e00     MOVLW     0x0                                                                                             
003e94   5401     SUBFWB    0x1,0x0,0x0                                                                                     
003e96   0e00     MOVLW     0x0                                                                                             
003e98   5402     SUBFWB    0x2,0x0,0x0                                                                                     
003e9a   0e00     MOVLW     0x0                                                                                             
003e9c   5403     SUBFWB    0x3,0x0,0x0                                                                                     
003e9e   e24d     BC        0x3f3a                                                                                          
                                           		{                                                                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003ea0   c272     MOVFF     0x272,0x283    			prevTmr = timerTicks;			                                                      C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003ea2   f283                                                                                                               
003ea4   c273     MOVFF     0x273,0x284                                                                                     
003ea6   f284                                                                                                               
003ea8   c274     MOVFF     0x274,0x285                                                                                     
003eaa   f285                                                                                                               
003eac   c275     MOVFF     0x275,0x286                                                                                     
003eae   f286                                                                                                               
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           	#ifndef DRIVE_DEBUG                                                             C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003eb0   68e6     SETF      0xe6,0x0       			pwm15 = pwm16 = doVelPid(&Left,  Get_Encoder_1_Count(), L_MOTOR_DIR);         C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003eb2   68e6     SETF      0xe6,0x0                                                                                        
003eb4   ecee     CALL      0x55dc,0x0                                                                                      
003eb6   f02a                                                                                                               
003eb8   c03f     MOVFF     0x3f,0x0                                                                                        
003eba   f000                                                                                                               
003ebc   c040     MOVFF     0x40,0x1                                                                                        
003ebe   f001                                                                                                               
003ec0   c041     MOVFF     0x41,0x2                                                                                        
003ec2   f002                                                                                                               
003ec4   c042     MOVFF     0x42,0x3                                                                                        
003ec6   f003                                                                                                               
003ec8   c000     MOVFF     0x0,0xfe6                                                                                       
003eca   ffe6                                                                                                               
003ecc   c001     MOVFF     0x1,0xfe6                                                                                       
003ece   ffe6                                                                                                               
003ed0   c002     MOVFF     0x2,0xfe6                                                                                       
003ed2   ffe6                                                                                                               
003ed4   c003     MOVFF     0x3,0xfe6                                                                                       
003ed6   ffe6                                                                                                               
003ed8   0e80     MOVLW     0x80                                                                                            
003eda   6ee6     MOVWF     0xe6,0x0                                                                                        
003edc   0e01     MOVLW     0x1                                                                                             
003ede   6ee6     MOVWF     0xe6,0x0                                                                                        
003ee0   ec06     CALL      0xc0c,0x0                                                                                       
003ee2   f006                                                                                                               
003ee4   6ef5     MOVWF     0xf5,0x0                                                                                        
003ee6   0e08     MOVLW     0x8                                                                                             
003ee8   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
003eea   50f5     MOVF      0xf5,0x0,0x0                                                                                    
003eec   cff3     MOVFF     0xff3,0x213                                                                                     
003eee   f213                                                                                                               
003ef0   cff3     MOVFF     0xff3,0x212                                                                                     
003ef2   f212                                                                                                               
                                           	#endif                                                                          C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003ef4   0e01     MOVLW     0x1            			pwm13 = pwm14 = doVelPid(&Right, Get_Encoder_2_Count(), R_MOTOR_DIR);         C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003ef6   6ee6     MOVWF     0xe6,0x0                                                                                        
003ef8   6ae6     CLRF      0xe6,0x0                                                                                        
003efa   ec2a     CALL      0x5654,0x0                                                                                      
003efc   f02b                                                                                                               
003efe   c03f     MOVFF     0x3f,0x0                                                                                        
003f00   f000                                                                                                               
003f02   c040     MOVFF     0x40,0x1                                                                                        
003f04   f001                                                                                                               
003f06   c041     MOVFF     0x41,0x2                                                                                        
003f08   f002                                                                                                               
003f0a   c042     MOVFF     0x42,0x3                                                                                        
003f0c   f003                                                                                                               
003f0e   c000     MOVFF     0x0,0xfe6                                                                                       
003f10   ffe6                                                                                                               
003f12   c001     MOVFF     0x1,0xfe6                                                                                       
003f14   ffe6                                                                                                               
003f16   c002     MOVFF     0x2,0xfe6                                                                                       
003f18   ffe6                                                                                                               
003f1a   c003     MOVFF     0x3,0xfe6                                                                                       
003f1c   ffe6                                                                                                               
003f1e   0ea2     MOVLW     0xa2                                                                                            
003f20   6ee6     MOVWF     0xe6,0x0                                                                                        
003f22   0e01     MOVLW     0x1                                                                                             
003f24   6ee6     MOVWF     0xe6,0x0                                                                                        
003f26   ec06     CALL      0xc0c,0x0                                                                                       
003f28   f006                                                                                                               
003f2a   6ef5     MOVWF     0xf5,0x0                                                                                        
003f2c   0e08     MOVLW     0x8                                                                                             
003f2e   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
003f30   50f5     MOVF      0xf5,0x0,0x0                                                                                    
003f32   cff3     MOVFF     0xff3,0x211                                                                                     
003f34   f211                                                                                                               
003f36   cff3     MOVFF     0xff3,0x210                                                                                     
003f38   f210                                                                                                               
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           	     }                                                                          C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           		//Generate_Pwms(pwm13,pwm14,pwm15,pwm16);                                      C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003f3a   c213     MOVFF     0x213,0xfe6    		PWM(pwm13,pwm14,pwm15,pwm16);                                                  C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003f3c   ffe6                                                                                                               
003f3e   c212     MOVFF     0x212,0xfe6                                                                                     
003f40   ffe6                                                                                                               
003f42   c211     MOVFF     0x211,0xfe6                                                                                     
003f44   ffe6                                                                                                               
003f46   c210     MOVFF     0x210,0xfe6                                                                                     
003f48   ffe6                                                                                                               
003f4a   ec92     CALL      0x5324,0x0                                                                                      
003f4c   f029                                                                                                               
003f4e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003f50   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003f52   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003f54   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003f56   0e00     MOVLW     0x0                    Putdata(&txdata);   /* DO NOT DELETE, or you will get no PWM outputs! */ C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003f58   6ee6     MOVWF     0xe6,0x0                                                                                        
003f5a   0e02     MOVLW     0x2                                                                                             
003f5c   6ee6     MOVWF     0xe6,0x0                                                                                        
003f5e   ec34     CALL      0x2668,0x0                                                                                      
003f60   f013                                                                                                               
003f62   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003f64   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                               }                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                             }                                                                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003f68   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           /******************************************************************************* C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * FUNCTION NAME: Process_Data_From_Local_IO                                      C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * PURPOSE:       Execute user's realtime code.                                   C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * You should modify this routine by adding code which you wish to run fast.      C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * It will be executed every program loop, and not wait for fresh data            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * from the Operator Interface.                                                   C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * CALLED FROM:   main.c                                                          C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           *******************************************************************************/ C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           void Process_Data_From_Local_IO(void)                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           {                                                                                C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                             /* Add code here that you want to be executed every program loop. */           C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                             // new ADC data available?                                                     C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003f6a   ecd6     CALL      0x41ac,0x0       if(Get_ADC_Result_Count())                                                     C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003f6c   f020                                                                                                               
003f6e   0900     IORLW     0x0                                                                                             
003f70   e004     BZ        0x3f7a                                                                                          
                                             {                                                                              C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003f72   ec95     CALL      0x492a,0x0         Process_Gyro_Data();                                                         C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003f74   f024                                                                                                               
                                           	                                                                                C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003f76   ece6     CALL      0x41cc,0x0         Reset_ADC_Result_Count();                                                    C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003f78   f020                                                                                                               
                                             }	                                                                             C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
003f7a   0012     RETURN    0x0            }                                                                                C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           /******************************************************************************/ C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           /******************************************************************************/ C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           /******************************************************************************/ C:\code\2008\Fresh Copy - 2008\user_routines_fast.c
                                           ;	RCS Header $Id: aarg.asm,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB3                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB7		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB2                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB6		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB1                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB5		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB0                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB4		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB3		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB2		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB1		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB0		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AEXP		RES 1       ; 8 bit biased exponent for argument A                         C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   GLOBAL  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   LIST P=18F8722                                                           C:\MCC18\SRC\TRADIT~1\PROC\p18f8722.asm
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\PROC\p18f8722.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\PROC\p18f8722.asm
                                           ;	RCS Header $Id: barg.asm,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB3		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB2		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB1		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB0		RES 1       ; most significant byte of argument B                        C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BEXP		RES 1       ; 8 bit biased exponent for argument B                         C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   GLOBAL  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   GLOBAL  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           /* $Id: adcbusy.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           /****************************************************************                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Function Name:  BusyADC                                    *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Return Value:   char: 1 - A/D busy, 0 - Done converting    *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Parameters:     void                                       *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Description:    This routine checks the GO bit to see if   *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *                    the A/D conversion is done.                *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           ****************************************************************/                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           char BusyADC(void)                                                               C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                             /* If the GO bit is set then A/D is busy converting                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                              * Otherwise A/D is done converting                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                              */                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
00080e   50c2     MOVF      0xc2,0x0,0x0     return(ADCON0bits.GO);                                                         C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
000810   0b02     ANDLW     0x2                                                                                             
000812   e001     BZ        0x816                                                                                           
000814   0e01     MOVLW     0x1                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
000816   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           /* $Id: adcclose.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           /************************************************************************        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Function Name:  CloseADC                                           *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Return Value:   void                                               *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Parameters:     void                                               *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Description:    This routine turns the A/D off and disables        *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *                    the A/D interrupt                                  *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           ************************************************************************/        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           void CloseADC(void)                                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
005c0c   90c2     BCF       0xc2,0x0,0x0     ADCON0bits.ADON = 0;                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
005c0e   9c9d     BCF       0x9d,0x6,0x0     PIE1bits.ADIE = 0;                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
005c10   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           /* $Id: adcconv.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Function Name:  ConvertADC                                     *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Parameters:     void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Description:    This routine starts an A/D conversion by       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *                    setting the GO bit.                            *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           void ConvertADC(void)                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
005c12   82c2     BSF       0xc2,0x1,0x0     ADCON0bits.GO = 1;  // Set the GO bit to start a conversion                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
005c14   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           #include "p18cxxx.inc"                                                           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                   LIST                                                                     C:\MCC18\MPASM\p18cxxx.inc
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\p18cxxx.inc
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;/********************************************************************           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Function Name: Delay10TCYx                                      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Return Value:  void                                             *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Parameters:    unit:                                            *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Description:   This routine delays for multiples of 10          *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  instruction cycles that is specified in unit.    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Special Note:  This routine provides multiples of 10 Tcy.       *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  A value of 1 to 255 provides 10 to 2550   Tcy    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  delay.  A value of 0 will provide a delay of     *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  2560 Tcy.                                        *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;********************************************************************/           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10TCYXCODE CODE                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           Delay10TCYx                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005be4   0eff     MOVLW     0xff               movlw   0xff                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005be6   50e3     MOVF      0xe3,0x0,0x0       movf    PLUSW1,0                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005be8   4ee8     DCFSNZ    0xe8,0x1,0x0       dcfsnz  WREG,1                                                               C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005bea   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10x                                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005bec   0000     NOP                          nop                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005bee   d000     BRA       0x5bf0             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005bf0   d000     BRA       0x5bf2             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005bf2   d000     BRA       0x5bf4             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10_1                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005bf4   2ee8     DECFSZ    0xe8,0x1,0x0       decfsz  WREG,1                                                               C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005bf6   d7fa     BRA       0x5bec             bra     D10x                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005bf8   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                               GLOBAL  Delay10TCYx                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           #include "p18cxxx.inc"                                                           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                   LIST                                                                     C:\MCC18\MPASM\p18cxxx.inc
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\p18cxxx.inc
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;/********************************************************************           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Function Name: Delay1KTCYx                                      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Return Value:  void                                             *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Parameters:    unit:                                            *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Description:   This routine delays for multiples of 1000        *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  instruction cycles that is specified in unit.    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Special Note:  This routine provides multiples of 1000 Tcy      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  A value of 1 to 255 to provides 1000 to          *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  255000 Tcy delay.  A value of 0 will provide     *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  a delay of 256000 Tcy.                           *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;********************************************************************/           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                               EXTERN  DelayCounter1                                                        C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           D1KTCYXCODE CODE                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           Delay1KTCYx                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005ba8   0eff     MOVLW     0xff               movlw   0xff                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005baa   50e3     MOVF      0xe3,0x0,0x0       movf    PLUSW1,0                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005bac   6e53     MOVWF     0x53,0x0           movwf   DelayCounter1                                                        C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005bae   0e48     MOVLW     0x48               movlw   0x48                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005bb0   d001     BRA       0x5bb4             bra     D1K_1                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           D1Kx                                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005bb2   0e4c     MOVLW     0x4c               movlw   0x4c                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           D1K_1                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005bb4   6ee7     MOVWF     0xe7,0x0           movwf   INDF1                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005bb6   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz  INDF1,1                                                              C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005bb8   d7fe     BRA       0x5bb6             bra     $-2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005bba   6ae7     CLRF      0xe7,0x0           clrf    INDF1                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005bbc   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz  INDF1,1                                                              C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005bbe   d7fe     BRA       0x5bbc             bra     $-2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005bc0   2e53     DECFSZ    0x53,0x1,0x0       decfsz  DelayCounter1,1                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005bc2   d7f7     BRA       0x5bb2             bra     D1Kx                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005bc4   0000     NOP                          nop                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005bc6   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                               GLOBAL  Delay1KTCYx                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           DELAYDAT1      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           DelayCounter1  RES 1                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                                          GLOBAL DelayCounter1                                              C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           	       END                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           ;	RCS Header $Id: cmath18.asm,v 1.4 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           SIGN		RES 1       ; save location for sign in MSB                                C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           FPFLAGSbits                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           FPFLAGS		RES 1       ; floating point library exception flags                    C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                   GLOBAL  SIGN, FPFLAGS, FPFLAGSbits                                       C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;	RCS Header $Id: fxd1616s.asm,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       16/16 Bit Signed Fixed Point Divide 16/16 -> 16.16                       C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Input:  16 bit fixed point dividend in AARGB0, AARGB1                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;               16 bit fixed point divisor in BARGB0, BARGB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Use:    CALL    FXD1616S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Output: 16 bit fixed point quotient in AARGB0, AARGB1                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;               16 bit fixed point remainder in REMB0, REMB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Result: AARG, REM  <--  AARG / BARG                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	Testing from 100000 trials:                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;		min	max	mean                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	Timing:	28	149	85.17	clks                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       PM: 33            DM: 8                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           		EXTERN	FXD1616U                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           FXD1616S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           		GLOBAL		FXD1616S                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054b8   6a49     CLRF      0x49,0x0       		CLRF		SIGN		; clear sign                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054ba   ae47     BTFSS     0x47,0x7,0x0           BTFSS   	BARGB0,MSB                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054bc   ef65     GOTO      0x54ca                 GOTO    	DA1616S                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054be   f02a                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054c0   6c46     NEGF      0x46,0x0               NEGF    	BARGB1		; if BARG<0, negate and toggle sign                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054c2   1e47     COMF      0x47,0x1,0x0           COMF    	BARGB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054c4   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054c6   2247     ADDWFC    0x47,0x1,0x0   		ADDWFC		BARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054c8   1e49     COMF      0x49,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           DA1616S                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054ca   ae42     BTFSS     0x42,0x7,0x0   		BTFSS       AARGB0,MSB                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054cc   ef6d     GOTO      0x54da                 GOTO        D1616S                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054ce   f02a                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054d0   6c41     NEGF      0x41,0x0               NEGF        AARGB1		; if AARG<0, negate and toggle sign                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054d2   1e42     COMF      0x42,0x1,0x0           COMF        AARGB0,F                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054d4   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054d6   2242     ADDWFC    0x42,0x1,0x0   		ADDWFC		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054d8   1e49     COMF      0x49,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616S                                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054da   ec88     CALL      0x5b10,0x0     		CALL		FXD1616U                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054dc   f02d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054de   be42     BTFSC     0x42,0x7,0x0   		BTFSC		AARGB0,MSB	; test for exception                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054e0   ef7d     GOTO      0x54fa         		GOTO		D1616SX                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054e2   f02a                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616SOK                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054e4   ae49     BTFSS     0x49,0x7,0x0   		BTFSS       SIGN,MSB                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054e6   0c00     RETLW     0x0            		RETLW		0x00                                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616SNEG                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054e8   6c41     NEGF      0x41,0x0               NEGF        AARGB1		; negate if result negative                          C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054ea   1e42     COMF      0x42,0x1,0x0           COMF        AARGB0,F                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054ec   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054ee   2242     ADDWFC    0x42,0x1,0x0   		ADDWFC		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054f0   6c3d     NEGF      0x3d,0x0       		NEGF        REMB1                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054f2   1e3e     COMF      0x3e,0x1,0x0           COMF        REMB0,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054f4   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054f6   223e     ADDWFC    0x3e,0x1,0x0   		ADDWFC		REMB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054f8   0c00     RETLW     0x0                    RETLW       0x00                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616SX                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054fa   be49     BTFSC     0x49,0x7,0x0   		BTFSC		SIGN,MSB                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054fc   ef74     GOTO      0x54e8         		GOTO		D1616SNEG                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
0054fe   f02a                                                                                                               
005500   884a     BSF       0x4a,0x4,0x0   		BSF			FPFLAGS,NAN	; NAN exception if AARG=0x8000                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           								; with positive sign                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005502   0cff     RETLW     0xff           		RETLW		0xFF                                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           /*** Unsigned Integer Division: 16-bit by 16-bit                                 C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***                                                                             C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            *** Optimized: Dec. 21, 2000                                                    C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***        by: Daniel R. Madill, Quanser Consulting Inc.                        C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***       for: Saved (for the worst case) at least 5*16 = 80 instruction cycles C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***            over the code supplied with MCC18 v1.00.12                       C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***/                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           void FXD1616U (/*unsigned arg0, unsigned arg1*/)                                 C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                             // use INDF1 for the counter...                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                 _asm                                                                       C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               // REM = 0                                                                   C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b10   6a3e     CLRF      0x3e,0x0           clrf REMB0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b12   6a3d     CLRF      0x3d,0x0           clrf REMB1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               // INDF1 = 16                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b14   0e10     MOVLW     0x10               movlw 16                                                                     C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b16   6ee7     MOVWF     0xe7,0x0           movwf INDF1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               // Clear the carry                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b18   90d8     BCF       0xd8,0x0,0x0   	bcf STATUS, 0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           loop:                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	//AARG16 <<= 1; Carry is always clear at this point.                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b1a   3641     RLCF      0x41,0x1,0x0   	rlcf AARGB1, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b1c   3642     RLCF      0x42,0x1,0x0   	rlcf AARGB0, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	//PROD = (PROD << 1) | (AARG16 >> 16)                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b1e   363d     RLCF      0x3d,0x1,0x0   	rlcf REMB1, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b20   363e     RLCF      0x3e,0x1,0x0   	rlcf REMB0, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	                                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	//if (PROD >= BARG16)                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b22   5046     MOVF      0x46,0x0,0x0   	movf BARGB1, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b24   5c3d     SUBWF     0x3d,0x0,0x0   	subwf REMB1, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b26   5047     MOVF      0x47,0x0,0x0   	movf BARGB0, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b28   583e     SUBWFB    0x3e,0x0,0x0   	subwfb REMB0, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b2a   e305     BNC       0x5b36         	bnc endloop                                                                     C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               //{                                                                          C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	    //PROD -= BARG16;                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b2c   5046     MOVF      0x46,0x0,0x0   	    movf BARGB1, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b2e   5e3d     SUBWF     0x3d,0x1,0x0   	    subwf REMB1, 1, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b30   5047     MOVF      0x47,0x0,0x0   	    movf BARGB0, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b32   5a3e     SUBWFB    0x3e,0x1,0x0   	    subwfb REMB0, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	    //++AARG16; Since AARG16 was shift to the left above, the increment will    C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                   //          simply set the LSbit. Using incf also clears the carry, which C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                   //          means we don't have to clear the carry at the top of the loop. C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b34   2a41     INCF      0x41,0x1,0x0           incf AARGB1, 1, 0                                                        C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               //}                                                                          C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           endloop:                                                                         C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b36   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz INDF1, 1, 0    // does not affect the carry bit                       C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b38   d7f0     BRA       0x5b1a             bra loop                                                                     C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                             _endasm                                                                        C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                             /* result in AARG already... */                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005b3a   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           ;	RCS Header $Id: fxd3232s.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       32/32 Bit Signed Fixed Point Divide 32/32 -> 32.32                       C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Input:  32 bit fixed point dividend in AARGB0, AARGB1, AARGB2            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;               32 bit fixed point divisor in BARGB0, BARGB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Use:    CALL    FXD3232S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Output: 32 bit fixed point quotient in AARGB0, AARGB1, AARGB2            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;               32 bit fixed point remainder in REMB0, REMB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Result: AARG, REM  <--  AARG / BARG                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	Testing from 100000 trials:                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;		min	max	mean                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	Timing:	32	410	127.22	clks                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       PM: 50             DM: 12                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           		EXTERN		FXD3232U                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           FXD3232S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           		GLOBAL		FXD3232S                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005504   6a49     CLRF      0x49,0x0       		CLRF		SIGN		; clear sign                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005506   6ae8     CLRF      0xe8,0x0       		CLRF		WREG                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005508   ae47     BTFSS     0x47,0x7,0x0   		BTFSS		BARGB0,MSB                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00550a   ef8f     GOTO      0x551e         		GOTO 		DA3232S                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00550c   f02a                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00550e   6c44     NEGF      0x44,0x0       		NEGF 		BARGB3		; if BARG<0, negate and toggle sign                             C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005510   1e45     COMF      0x45,0x1,0x0   		COMF 		BARGB2,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005512   1e46     COMF      0x46,0x1,0x0   		COMF 		BARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005514   1e47     COMF      0x47,0x1,0x0   		COMF 		BARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005516   2245     ADDWFC    0x45,0x1,0x0   		ADDWFC		BARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005518   2246     ADDWFC    0x46,0x1,0x0   		ADDWFC		BARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00551a   2247     ADDWFC    0x47,0x1,0x0   		ADDWFC		BARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00551c   1e49     COMF      0x49,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           DA3232S                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00551e   ae42     BTFSS     0x42,0x7,0x0   		BTFSS       AARGB0,MSB                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005520   ef9a     GOTO      0x5534         		GOTO        D3232S                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005522   f02a                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005524   6c3f     NEGF      0x3f,0x0       		NEGF        AARGB3		; if AARG<0, negate and toggle sign                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005526   1e40     COMF      0x40,0x1,0x0   		COMF        AARGB2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005528   1e41     COMF      0x41,0x1,0x0   		COMF        AARGB1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00552a   1e42     COMF      0x42,0x1,0x0   		COMF        AARGB0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00552c   2240     ADDWFC    0x40,0x1,0x0   		ADDWFC      AARGB2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00552e   2241     ADDWFC    0x41,0x1,0x0   		ADDWFC      AARGB1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005530   2242     ADDWFC    0x42,0x1,0x0   		ADDWFC      AARGB0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005532   1e49     COMF      0x49,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232S                                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005534   ec45     CALL      0x5a8a,0x0     		CALL		FXD3232U                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005536   f02d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005538   be42     BTFSC     0x42,0x7,0x0   		BTFSC		AARGB0,MSB	; test for exception                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00553a   efb1     GOTO      0x5562         		GOTO		D3232SX                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00553c   f02a                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232SOK                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00553e   ae49     BTFSS     0x49,0x7,0x0   		BTFSS       SIGN,MSB                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005540   0c00     RETLW     0x0                    RETLW       0x00                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232SNEG                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005542   6c3f     NEGF      0x3f,0x0       		NEGF  		AARGB3		; negate if result negative                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005544   1e40     COMF      0x40,0x1,0x0   		COMF  		AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005546   1e41     COMF      0x41,0x1,0x0   		COMF  		AARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005548   1e42     COMF      0x42,0x1,0x0   		COMF  		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00554a   6ae8     CLRF      0xe8,0x0       		CLRF  		WREG                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00554c   2240     ADDWFC    0x40,0x1,0x0   		ADDWFC		AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00554e   2241     ADDWFC    0x41,0x1,0x0   		ADDWFC		AARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005550   2242     ADDWFC    0x42,0x1,0x0   		ADDWFC		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005552   6c3b     NEGF      0x3b,0x0       		NEGF  		REMB3                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005554   1e3c     COMF      0x3c,0x1,0x0   		COMF  		REMB2,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005556   1e3d     COMF      0x3d,0x1,0x0   		COMF  		REMB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005558   1e3e     COMF      0x3e,0x1,0x0   		COMF  		REMB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00555a   223c     ADDWFC    0x3c,0x1,0x0   		ADDWFC		REMB2,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00555c   223d     ADDWFC    0x3d,0x1,0x0   		ADDWFC		REMB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00555e   223e     ADDWFC    0x3e,0x1,0x0   		ADDWFC		REMB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005560   0c00     RETLW     0x0            		RETLW 		0x00                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232SX                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005562   be49     BTFSC     0x49,0x7,0x0   		BTFSC		SIGN,MSB                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005564   efa1     GOTO      0x5542         		GOTO		D3232SNEG                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005566   f02a                                                                                                               
005568   884a     BSF       0x4a,0x4,0x0   		BSF			FPFLAGS,NAN	; NAN exception if AARG=0x800000                             C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00556a   0cff     RETLW     0xff           		RETLW		0xFF		; with positive sign                                              C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           /*** Unsigned Integer Division: 32-bit by 32-bit                                 C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***                                                                             C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            *** Optimized: Dec. 21, 2000                                                    C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***        by: Daniel R. Madill, Quanser Consulting Inc.                        C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***       for: Saved (for the worst case) at least 8*32 = 256 instruction cycles C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***            over the code supplied with MCC18 v1.00.12                       C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***/                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           void  FXD3232U(void/* ulong aarg, ulong barg */)                                 C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                             // use INDF1 for the counter...                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               _asm                                                                         C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               // REM = 0                                                                   C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005a8a   6a3e     CLRF      0x3e,0x0           clrf REMB0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005a8c   6a3d     CLRF      0x3d,0x0           clrf REMB1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005a8e   6a3c     CLRF      0x3c,0x0           clrf REMB2, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005a90   6a3b     CLRF      0x3b,0x0           clrf REMB3, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               // INDF1 = 32                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005a92   0e20     MOVLW     0x20               movlw 32                                                                     C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005a94   6ee7     MOVWF     0xe7,0x0           movwf INDF1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               // Clear the carry                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005a96   90d8     BCF       0xd8,0x0,0x0       bcf STATUS, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           loop:                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	//AARG32 <<= 1; The carry is always clear at the top of the loop.               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005a98   363f     RLCF      0x3f,0x1,0x0   	rlcf AARGB3, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005a9a   3640     RLCF      0x40,0x1,0x0   	rlcf AARGB2, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005a9c   3641     RLCF      0x41,0x1,0x0   	rlcf AARGB1, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005a9e   3642     RLCF      0x42,0x1,0x0   	rlcf AARGB0, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	//REM32 = (REM32 << 1) | (AARG32 >> 32)                                         C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005aa0   363b     RLCF      0x3b,0x1,0x0   	rlcf REMB3, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005aa2   363c     RLCF      0x3c,0x1,0x0   	rlcf REMB2, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005aa4   363d     RLCF      0x3d,0x1,0x0   	rlcf REMB1, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005aa6   363e     RLCF      0x3e,0x1,0x0   	rlcf REMB0, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	                                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	//if (PROD >= BARG32)                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005aa8   5044     MOVF      0x44,0x0,0x0   	movf BARGB3, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005aaa   5c3b     SUBWF     0x3b,0x0,0x0   	subwf REMB3, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005aac   5045     MOVF      0x45,0x0,0x0   	movf BARGB2, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005aae   583c     SUBWFB    0x3c,0x0,0x0   	subwfb REMB2, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005ab0   5046     MOVF      0x46,0x0,0x0   	movf BARGB1, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005ab2   583d     SUBWFB    0x3d,0x0,0x0   	subwfb REMB1, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005ab4   5047     MOVF      0x47,0x0,0x0   	movf BARGB0, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005ab6   583e     SUBWFB    0x3e,0x0,0x0   	subwfb REMB0, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005ab8   e309     BNC       0x5acc         	bnc _false                                                                      C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               //{                                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	    //REM32-= BARG32;                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005aba   5044     MOVF      0x44,0x0,0x0   	    movf BARGB3, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005abc   5e3b     SUBWF     0x3b,0x1,0x0   	    subwf REMB3, 1, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005abe   5045     MOVF      0x45,0x0,0x0   	    movf BARGB2, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005ac0   5a3c     SUBWFB    0x3c,0x1,0x0   	    subwfb REMB2, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005ac2   5046     MOVF      0x46,0x0,0x0   	    movf BARGB1, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005ac4   5a3d     SUBWFB    0x3d,0x1,0x0   	    subwfb REMB1, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005ac6   5047     MOVF      0x47,0x0,0x0   	    movf BARGB0, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005ac8   5a3e     SUBWFB    0x3e,0x1,0x0   	    subwfb REMB0, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	    //++AARG32; Since AARG32 was shift to the left above, we only need to set   C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                   //          the lowest bit. Use incf so that the carry flag will also be cleared. C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                   //          Thus, the carry will always be clear at the top of the loop. C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005aca   2a3f     INCF      0x3f,0x1,0x0   	    incf AARGB3, 1, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               //}                                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           _false:                                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005acc   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz INDF1, 1, 0    // does not affect the carry bit                       C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005ace   d7e4     BRA       0x5a98             bra loop                                                                     C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                             /* result in AARG already... */                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                             _endasm                                                                        C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005ad0   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           ;	RCS Header $Id: fxm1616s.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <TEMPARG.INC>		; TEMPARG declarations                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: temparg.inc,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                   EXTERN  TEMPB3, TEMPB2, TEMPB1, TEMPB0, TEMP                             C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       16x16 Bit Signed Fixed Point Multiply 16 x 16 -> 32                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Input:  16 bit signed fixed point multiplicand in AARGB0, AARGB1         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;               16 bit signed fixed point multiplier in BARGB0, BARGB1           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Use:    CALL    FXM1616S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Output: 32 bit signed fixed point product in AARGB0, AARGB1,             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;               AARGB2, AARGB3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Result: AARG  <--  AARG * BARG                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Max Timing:     39 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Min Timing:     31 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       PM: 38              DM: 8                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           FXM1616S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		GLOBAL	FXM1616S                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00556c   c042     MOVFF     0x42,0x4e      		MOVFF	AARGB0,TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00556e   f04e                                                                                                               
005570   c041     MOVFF     0x41,0x4d      		MOVFF	AARGB1,TEMPB1	                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
005572   f04d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
005574   5041     MOVF      0x41,0x0,0x0   		MOVF	AARGB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
005576   0246     MULWF     0x46,0x0       		MULWF	BARGB1                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
005578   cff4     MOVFF     0xff4,0x40     		MOVFF	PRODH,AARGB2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00557a   f040                                                                                                               
00557c   cff3     MOVFF     0xff3,0x3f     		MOVFF	PRODL,AARGB3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00557e   f03f                                                                                                               
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
005580   5042     MOVF      0x42,0x0,0x0   		MOVF	AARGB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
005582   0247     MULWF     0x47,0x0       		MULWF	BARGB0                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
005584   cff4     MOVFF     0xff4,0x42     		MOVFF	PRODH,AARGB0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
005586   f042                                                                                                               
005588   cff3     MOVFF     0xff3,0x41     		MOVFF	PRODL,AARGB1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00558a   f041                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00558c   0246     MULWF     0x46,0x0       		MULWF	BARGB1                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00558e   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
005590   2640     ADDWF     0x40,0x1,0x0   		ADDWF	AARGB2,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
005592   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
005594   2241     ADDWFC    0x41,0x1,0x0   		ADDWFC	AARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
005596   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
005598   2242     ADDWFC    0x42,0x1,0x0   		ADDWFC	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00559a   504d     MOVF      0x4d,0x0,0x0   		MOVF	TEMPB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00559c   0247     MULWF     0x47,0x0       		MULWF	BARGB0                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00559e   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0055a0   2640     ADDWF     0x40,0x1,0x0   		ADDWF	AARGB2,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0055a2   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0055a4   2241     ADDWFC    0x41,0x1,0x0   		ADDWFC	AARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0055a6   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0055a8   2242     ADDWFC    0x42,0x1,0x0   		ADDWFC	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0055aa   ae47     BTFSS     0x47,0x7,0x0   		BTFSS	BARGB0,MSB                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0055ac   efdc     GOTO      0x55b8         		GOTO	TSIGN1616A                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0055ae   f02a                                                                                                               
0055b0   504d     MOVF      0x4d,0x0,0x0   		MOVF	TEMPB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0055b2   5e41     SUBWF     0x41,0x1,0x0   		SUBWF	AARGB1,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0055b4   504e     MOVF      0x4e,0x0,0x0   		MOVF	TEMPB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0055b6   5a42     SUBWFB    0x42,0x1,0x0   		SUBWFB	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           TSIGN1616A                                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0055b8   ae4e     BTFSS     0x4e,0x7,0x0   		BTFSS	TEMPB0,MSB                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0055ba   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0055bc   5046     MOVF      0x46,0x0,0x0   		MOVF	BARGB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0055be   5e41     SUBWF     0x41,0x1,0x0   		SUBWF	AARGB1,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0055c0   5047     MOVF      0x47,0x0,0x0   		MOVF	BARGB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0055c2   5a42     SUBWFB    0x42,0x1,0x0   		SUBWFB	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
0055c4   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           /* a signed multiply is only different from an unsigned multiply                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                            * if the upper bytes of the result matter, which for us they                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                            * don't.                                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                            */                                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           #define PRODH	(PRODL + 1)                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           extern near unsigned char AARGB3, BARGB3;                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           extern near unsigned char AARGB7;                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           void FXM3232 (void)                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                             _asm                                                                           C:\mcc18\src\TRADIT~1\math\fxm3232.c
005882   503f     MOVF      0x3f,0x0,0x0       movf AARGB3, 0, 0                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
005884   0244     MULWF     0x44,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // low byte of both operands, so result adds into the low order              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // result bytes                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
005886   cff3     MOVFF     0xff3,0x3b         movff PRODL, AARGB7                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
005888   f03b                                                                                                               
00588a   cff4     MOVFF     0xff4,0x3c         movff PRODH, AARGB7 + 1                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
00588c   f03c                                                                                                               
                                               // W still contains AARGB3                                                   C:\mcc18\src\TRADIT~1\math\fxm3232.c
00588e   0245     MULWF     0x45,0x0           mulwf BARGB3 + 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[1], so result adds into AARGB7[1,2]                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005890   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005892   263c     ADDWF     0x3c,0x1,0x0       addwf AARGB7 + 1, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
005894   0e00     MOVLW     0x0                movlw 0                                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005896   20f4     ADDWFC    0xf4,0x0,0x0       addwfc PRODH, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxm3232.c
005898   6e3d     MOVWF     0x3d,0x0           movwf AARGB7 + 2, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3 to continue                                                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
00589a   503f     MOVF      0x3f,0x0,0x0       movf AARGB3, 0, 0                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
00589c   0246     MULWF     0x46,0x0           mulwf BARGB3 + 2, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[2], so result adds into AARGB7[2,3]                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
00589e   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058a0   263d     ADDWF     0x3d,0x1,0x0       addwf AARGB7 + 2, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058a2   0e00     MOVLW     0x0                movlw 0                                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058a4   20f4     ADDWFC    0xf4,0x0,0x0       addwfc PRODH, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058a6   6e3e     MOVWF     0x3e,0x0           movwf AARGB7 + 3, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3 to continue                                                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058a8   503f     MOVF      0x3f,0x0,0x0       movf AARGB3, 0, 0                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058aa   0247     MULWF     0x47,0x0           mulwf BARGB3 + 3, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[3], so result adds into AARGB7[3].                                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058ac   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058ae   263e     ADDWF     0x3e,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // that's the end of all terms involving AARGB3[0].                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[1] to continue                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058b0   5040     MOVF      0x40,0x0,0x0       movf AARGB3 + 1, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058b2   0244     MULWF     0x44,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1], so result adds into AARGB7[1,2]                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058b4   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058b6   263c     ADDWF     0x3c,0x1,0x0       addwf AARGB7 + 1, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058b8   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058ba   223d     ADDWFC    0x3d,0x1,0x0       addwfc AARGB7 + 2, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058bc   0e00     MOVLW     0x0                movlw 0                                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058be   223e     ADDWFC    0x3e,0x1,0x0       addwfc AARGB7 + 3, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[1] to continue                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058c0   5040     MOVF      0x40,0x0,0x0       movf AARGB3 + 1, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058c2   0245     MULWF     0x45,0x0           mulwf BARGB3 + 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1] and BARGB3[1], so result adds into AARGB7[2,3]                  C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058c4   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058c6   263d     ADDWF     0x3d,0x1,0x0       addwf AARGB7 + 2, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058c8   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058ca   223e     ADDWFC    0x3e,0x1,0x0       addwfc AARGB7 + 3, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[1] to continue                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058cc   5040     MOVF      0x40,0x0,0x0       movf AARGB3 + 1, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058ce   0246     MULWF     0x46,0x0           mulwf BARGB3 + 2, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1] and BARGB3[2], so result adds into AARGB7[3]                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058d0   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058d2   263e     ADDWF     0x3e,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // all bytes of the term from the product of AARGB3[1] and BARGB3[3] are     C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // above our 32-bit result, don't even need to bother calculating            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // that term.                                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[2] to continue                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058d4   5041     MOVF      0x41,0x0,0x0       movf AARGB3 + 2, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058d6   0244     MULWF     0x44,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[2] and BARGB3[0], so result adds into AARGB7[2,3]                  C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058d8   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058da   263d     ADDWF     0x3d,0x1,0x0       addwf AARGB7 + 2, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058dc   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058de   223e     ADDWFC    0x3e,0x1,0x0       addwfc AARGB7 + 3, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[2] to continue                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058e0   5041     MOVF      0x41,0x0,0x0       movf AARGB3 + 2, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058e2   0245     MULWF     0x45,0x0           mulwf BARGB3 + 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[2] and BARGB3[1], so result adds into AARGB7[3]                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058e4   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058e6   263e     ADDWF     0x3e,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // all bytes of the termsfrom the products of AARGB3[2] and BARGB3[2,3] are  C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // above our 32-bit result, don't even need to bother calculating            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // those terms.                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[3] to continue                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058e8   5042     MOVF      0x42,0x0,0x0       movf AARGB3 + 3, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058ea   0244     MULWF     0x44,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[3] and BARGB3[0], so result adds into AARGB7[3]                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058ec   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058ee   263e     ADDWF     0x3e,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               _endasm;                                                                     C:\mcc18\src\TRADIT~1\math\fxm3232.c
0058f0   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #include <usart.h>                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #if defined(__18F6525) || defined(__18F6621) || \                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                               defined(__18F8525) || defined(__18F8621)                                     C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #define RC1IE RCIE                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #define TX1IE TXIE                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           // USART1 Status Structure                                                       C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           extern union USART1 USART1_Status;                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Function Name:  Open1USART                                      *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Parameters:     config: bit definitions to configure USART1     *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    spbrg: baudrate value for register SPBRG1      *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Description:    This routine first resets the USART1 regs       *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    to the POR state. It then configures the       *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    USART1 for interrupts, synch/async, 8/9-bit,    *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    sync slave/master and single/cont. rx.         *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Notes:          The bit definitions for config can be found    *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    in the usart.h file.                           *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a26   cfd9     MOVFF     0xfd9,0xfe6    void Open1USART( unsigned char config, char spbrg)                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a28   ffe6                                                                                                               
005a2a   cfda     MOVFF     0xfda,0xfe6                                                                                     
005a2c   ffe6                                                                                                               
005a2e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005a30   ffd9                                                                                                               
005a32   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005a34   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a36   6aac     CLRF      0xac,0x0         TXSTA1 = 0;           // Reset USART registers to POR state                    C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a38   6aab     CLRF      0xab,0x0         RCSTA1 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a3a   0efd     MOVLW     0xfd             if(config&0x01)      // Sync or async operation                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a3c   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
005a3e   88ac     BSF       0xac,0x4,0x0       TXSTA1bits.SYNC = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a40   a2db     BTFSS     0xdb,0x1,0x0     if(config&0x02)      // 8- or 9-bit mode                                       C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a42   d002     BRA       0x5a48                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a44   8cac     BSF       0xac,0x6,0x0       TXSTA1bits.TX9 = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a46   8cab     BSF       0xab,0x6,0x0       RCSTA1bits.RX9 = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a48   b4db     BTFSC     0xdb,0x2,0x0     if(config&0x04)      // Master or Slave (sync only)                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a4a   8eac     BSF       0xac,0x7,0x0       TXSTA1bits.CSRC = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a4c   a6db     BTFSS     0xdb,0x3,0x0     if(config&0x08)      // Continuous or single reception                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a4e   d002     BRA       0x5a54                                                                                          
005a50   88ab     BSF       0xab,0x4,0x0       RCSTA1bits.CREN = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a52   d001     BRA       0x5a56           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a54   8aab     BSF       0xab,0x5,0x0       RCSTA1bits.SREN = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a56   a8db     BTFSS     0xdb,0x4,0x0     if(config&0x10)      // Baud rate select (asychronous mode only)               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a58   d002     BRA       0x5a5e                                                                                          
005a5a   84ac     BSF       0xac,0x2,0x0       TXSTA1bits.BRGH = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a5c   d001     BRA       0x5a60           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a5e   94ac     BCF       0xac,0x2,0x0       TXSTA1bits.BRGH = 0;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a60   acdb     BTFSS     0xdb,0x6,0x0     if(config&0x40)      // Interrupt on receipt                                   C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a62   d002     BRA       0x5a68                                                                                          
005a64   8a9d     BSF       0x9d,0x5,0x0       PIE1bits.RC1IE = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a66   d001     BRA       0x5a6a           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a68   9a9d     BCF       0x9d,0x5,0x0       PIE1bits.RC1IE = 0;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a6a   aedb     BTFSS     0xdb,0x7,0x0     if(config&0x80)      // Interrupt on transmission                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a6c   d002     BRA       0x5a72                                                                                          
005a6e   889d     BSF       0x9d,0x4,0x0       PIE1bits.TX1IE = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a70   d001     BRA       0x5a74           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a72   989d     BCF       0x9d,0x4,0x0       PIE1bits.TX1IE = 0;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a74   0efc     MOVLW     0xfc             SPBRG1 = spbrg;       // Write baudrate to SPBRG1                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a76   50db     MOVF      0xdb,0x0,0x0                                                                                    
005a78   6eaf     MOVWF     0xaf,0x0                                                                                        
005a7a   8aac     BSF       0xac,0x5,0x0     TXSTA1bits.TXEN = 1;  // Enable transmitter                                    C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a7c   8eab     BSF       0xab,0x7,0x0     RCSTA1bits.SPEN = 1;  // Enable receiver                                       C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a7e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005a80   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005a82   ffda                                                                                                               
005a84   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005a86   ffd9                                                                                                               
005a88   0012     RETURN    0x0                                                                                             
                                           /* $Id: adcopen.c,v 1.2 2004/02/10 22:11:33 sealep Exp $ */                      C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Function Name:  OpenADC                                        *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Parameters:     config: bit definitions to configure A/D       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    channel: channel selection                     *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Description:    This routine first resets the A/D registers    *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    to the POR state and then configures the       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    A/D clock, interrupt, justification, vref      *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    source, and I/O.  It also sets the channel.    *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Notes:          The bit definitions for config and channel     *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    can be found in the adc16.h file.              *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #if !defined(ADC_INTERFACE_OLD) && \                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18C601)  && !defined(__18C801)  && \                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18C658)  && !defined(__18C858)  && \                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18F6520) && !defined(__18F6620) && !defined(__18F6720) && \       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18F8520) && !defined(__18F8620) && !defined(__18F8720)            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0058f2   cfd9     MOVFF     0xfd9,0xfe6    void OpenADC( unsigned char config,                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0058f4   ffe6                                                                                                               
0058f6   cfda     MOVFF     0xfda,0xfe6                                                                                     
0058f8   ffe6                                                                                                               
0058fa   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0058fc   ffd9                                                                                                               
0058fe   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005900   ffda                                                                                                               
                                                         unsigned char config2,                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                         unsigned char portconfig)                                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               // Reset A/D Registers to POR state                                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005902   6ac2     CLRF      0xc2,0x0           ADCON0 = 0;                                                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005904   6ac1     CLRF      0xc1,0x0           ADCON1 = 0;                                                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005906   6ac0     CLRF      0xc0,0x0           ADCON2 = 0;                                                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005908   0efc     MOVLW     0xfc               ADCON0 = (config2 >> 1) & 0b00111100;     // Analog channel selection        C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
00590a   40db     RRNCF     0xdb,0x0,0x0                                                                                    
00590c   0b7f     ANDLW     0x7f                                                                                            
00590e   0b3c     ANDLW     0x3c                                                                                            
005910   6ec2     MOVWF     0xc2,0x0                                                                                        
005912   0efb     MOVLW     0xfb               ADCON1 = portconfig;                      // Port configuration              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005914   50db     MOVF      0xdb,0x0,0x0                                                                                    
005916   6ec1     MOVWF     0xc1,0x0                                                                                        
                                           #if defined(__18F1220) || defined(__18F1320)                                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               ADCON0 |= (config2 << 6) & 0b11000000;    // Voltage reference configuration C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #else                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005918   0efc     MOVLW     0xfc               ADCON1 |= (config2 << 4) & 0b00110000;    // Voltage reference configuration C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
00591a   38db     SWAPF     0xdb,0x0,0x0                                                                                    
00591c   0bf0     ANDLW     0xf0                                                                                            
00591e   0b30     ANDLW     0x30                                                                                            
005920   12c1     IORWF     0xc1,0x1,0x0                                                                                    
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005922   0efd     MOVLW     0xfd               ADCON2 = config & 0b10000000;             // Result format                   C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005924   50db     MOVF      0xdb,0x0,0x0                                                                                    
005926   0b80     ANDLW     0x80                                                                                            
005928   6ec0     MOVWF     0xc0,0x0                                                                                        
00592a   0efd     MOVLW     0xfd               ADCON2 |= (config >> 4) & 0b00000111;     // Conversion clock select         C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
00592c   38db     SWAPF     0xdb,0x0,0x0                                                                                    
00592e   0b0f     ANDLW     0xf                                                                                             
005930   0b07     ANDLW     0x7                                                                                             
005932   12c0     IORWF     0xc0,0x1,0x0                                                                                    
005934   0efd     MOVLW     0xfd               ADCON2 |= (config << 2) & 0b00111000;     // Acquisition time select         C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005936   50db     MOVF      0xdb,0x0,0x0                                                                                    
005938   0d04     MULLW     0x4                                                                                             
00593a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00593c   0b38     ANDLW     0x38                                                                                            
00593e   12c0     IORWF     0xc0,0x1,0x0                                                                                    
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005940   0efc     MOVLW     0xfc               if( config2 & 0b10000000 )   // Test the interrupt on/off                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005942   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
005944   d003     BRA       0x594c                                                                                          
                                               {                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005946   9c9e     BCF       0x9e,0x6,0x0         PIR1bits.ADIF = 0;         // Clear the A/D interrupt flag                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005948   8c9d     BSF       0x9d,0x6,0x0         PIE1bits.ADIE = 1;         // Enable the A/D interrupt                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
00594a   8cf2     BSF       0xf2,0x6,0x0         INTCONbits.PEIE = 1;       // Enable peripheral interrupts                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               }                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
00594c   80c2     BSF       0xc2,0x0,0x0       ADCON0bits.ADON = 1;         // Enable the A/D                               C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
00594e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005950   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005952   ffda                                                                                                               
005954   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005956   ffd9                                                                                                               
005958   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #else                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           void OpenADC( unsigned char config, unsigned char config2)                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             // Reset A/D Registers to POR state                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON1 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #ifndef ADC_INTERFACE_OLD                                                        C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON2 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             // Configure ADCON registers as per config selections                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #ifdef ADC_INTERFACE_OLD                                                         C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON1 = config;             // Set the A/D clock source                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 = (config<<2) & 0xC0; // Set the I/O selection                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 |= config2 &0x3f;     // Set the channel mask out the interrupt bit.    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #else // New ADC interface                                                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 = (config2 >> 1) & 0b00111100;    // Analog channel selection           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON1 = ((config2 << 4) & 0b00110000) | // Voltage reference configuration    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                      (config & 0b00001111);          // Port configuration                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON2 = (config & 0b10000000) |         // Result format                      C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                      ((config >> 4) & 0b00000111);   // Conversion clock select            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             if( config2 & 0b10000000 )   // Test the interrupt on/off                      C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               PIR1bits.ADIF = 0;         // Clear the A/D interrupt flag                   C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               PIE1bits.ADIE = 1;         // Enable the A/D interrupt                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               INTCONbits.PEIE = 1;       // Enable peripheral interrupts                   C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0bits.ADON = 1;         // Enable the A/D                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           /* $Id:  */                                                                      C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           #include <spi.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Function Name:  OpenSPI1                                        *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Return Value:   void                                            *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Parameters:     SSP1 peripheral setup bytes                     *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Description:    This function sets up the SSP1 module on a      *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *                   PIC18Cxxx device for use with a Microchip SPI   *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *                   EEPROM device or SPI bus device.                *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0059c0   cfd9     MOVFF     0xfd9,0xfe6    void OpenSPI1( unsigned char sync_mode, unsigned char bus_mode, unsigned char smp_phase) C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0059c2   ffe6                                                                                                               
0059c4   cfda     MOVFF     0xfda,0xfe6                                                                                     
0059c6   ffe6                                                                                                               
0059c8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0059ca   ffd9                                                                                                               
0059cc   cfe2     MOVFF     0xfe2,0xfda                                                                                     
0059ce   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0059d0   0e3f     MOVLW     0x3f             SSP1STAT &= 0x3F;               // power on state                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0059d2   16c7     ANDWF     0xc7,0x1,0x0                                                                                    
0059d4   6ac6     CLRF      0xc6,0x0         SSP1CON1 = 0x00;                // power on state                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0059d6   0efd     MOVLW     0xfd             SSP1CON1 |= sync_mode;          // select serial mode                          C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0059d8   50db     MOVF      0xdb,0x0,0x0                                                                                    
0059da   12c6     IORWF     0xc6,0x1,0x0                                                                                    
0059dc   0efb     MOVLW     0xfb             SSP1STAT |= smp_phase;          // select data input sample phase              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0059de   50db     MOVF      0xdb,0x0,0x0                                                                                    
0059e0   12c7     IORWF     0xc7,0x1,0x0                                                                                    
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0059e2   0efc     MOVLW     0xfc             switch( bus_mode )                                                             C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0059e4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0059e6   0a03     XORLW     0x3                                                                                             
0059e8   e009     BZ        0x59fc                                                                                          
0059ea   0a01     XORLW     0x1                                                                                             
0059ec   e004     BZ        0x59f6                                                                                          
0059ee   0a02     XORLW     0x2                                                                                             
0059f0   e106     BNZ       0x59fe                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 0:                       // SPI1 bus mode 0,0                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0059f2   8cc7     BSF       0xc7,0x6,0x0         SSP1STATbits.CKE = 1;       // data transmitted on rising edge             C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0059f4   d004     BRA       0x59fe               break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 2:                       // SPI1 bus mode 1,0                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0059f6   8cc7     BSF       0xc7,0x6,0x0         SSP1STATbits.CKE = 1;       // data transmitted on falling edge            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0059f8   88c6     BSF       0xc6,0x4,0x0         SSP1CON1bits.CKP = 1;       // clock idle state high                       C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0059fa   d001     BRA       0x59fe               break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 3:                       // SPI1 bus mode 1,1                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0059fc   88c6     BSF       0xc6,0x4,0x0         SSP1CON1bits.CKP = 1;       // clock idle state high                       C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                 break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               default:                      // default SPI1 bus mode 0,1                   C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                 break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
0059fe   0efd     MOVLW     0xfd             switch( sync_mode )                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005a00   50db     MOVF      0xdb,0x0,0x0                                                                                    
005a02   0a05     XORLW     0x5                                                                                             
005a04   e003     BZ        0x5a0c                                                                                          
005a06   0a01     XORLW     0x1                                                                                             
005a08   e104     BNZ       0x5a12                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 4:                       // slave mode w /SS enable                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005a0a   8e97     BSF       0x97,0x7,0x0         TRISFbits.TRISF7 = 1;       // define /SS pin as input                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 5:                       // slave mode w/o /SS enable                   C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005a0c   8694     BSF       0x94,0x3,0x0         TRISCbits.TRISC3 = 1;       // define clock pin as input                   C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005a0e   9ec7     BCF       0xc7,0x7,0x0         SSP1STATbits.SMP = 0;       // must be cleared in slave SPI mode           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005a10   d001     BRA       0x5a14               break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               default:                      // master mode, define clock pin as output     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005a12   9694     BCF       0x94,0x3,0x0         TRISCbits.TRISC3 = 0;       // define clock pin as output                  C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                 break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005a14   9a94     BCF       0x94,0x5,0x0     TRISC &= 0xDF;                  // define SDO as output (master or slave)      C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005a16   8894     BSF       0x94,0x4,0x0     TRISC |= 0x10;                  // define SDI as input (master or slave)       C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005a18   8ac6     BSF       0xc6,0x5,0x0     SSP1CON1 |= SSPENB;             // enable synchronous serial port              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005a1a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005a1c   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005a1e   ffda                                                                                                               
005a20   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005a22   ffd9                                                                                                               
005a24   0012     RETURN    0x0                                                                                             
                                           /* $Id: adcread.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Function Name:  ReadADC                                        *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Return Value:   int, A/D result                                *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Parameters:     void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Description:    This routine reads the ADRESL and ADRESH       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *                    and returns these as a long.                   *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005ad2   cfd9     MOVFF     0xfd9,0xfe6    int ReadADC(void)                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005ad4   ffe6                                                                                                               
005ad6   cfda     MOVFF     0xfda,0xfe6                                                                                     
005ad8   ffe6                                                                                                               
005ada   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005adc   ffd9                                                                                                               
005ade   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005ae0   ffda                                                                                                               
005ae2   52e6     MOVF      0xe6,0x1,0x0                                                                                    
005ae4   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                             union ADCResult i; // A union is used to read the                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                // A/D result due to issues with                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                // handling long variables                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005ae6   50c3     MOVF      0xc3,0x0,0x0     i.br[0] = ADRESL;  // Read ADRESL into the lower byte                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005ae8   6edf     MOVWF     0xdf,0x0                                                                                        
005aea   0e01     MOVLW     0x1              i.br[1] = ADRESH;  // Read ADRESH into the high byte                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005aec   cfc4     MOVFF     0xfc4,0xfdb                                                                                     
005aee   ffdb                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005af0   cfde     MOVFF     0xfde,0x0        return (i.lr);     // Return the long variable                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005af2   f000                                                                                                               
005af4   cfdd     MOVFF     0xfdd,0x1                                                                                       
005af6   f001                                                                                                               
005af8   c000     MOVFF     0x0,0xff3                                                                                       
005afa   fff3                                                                                                               
005afc   c001     MOVFF     0x1,0xff4                                                                                       
005afe   fff4                                                                                                               
005b00   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005b02   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005b04   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005b06   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005b08   ffda                                                                                                               
005b0a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005b0c   ffd9                                                                                                               
005b0e   0012     RETURN    0x0                                                                                             
                                           ;	RCS Header $Id: temparg.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB3		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB2		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB1		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMP                                                                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB0		RES 1       ; temporary storage                                          C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                   GLOBAL  TEMPB3, TEMPB2, TEMPB1, TEMPB0, TEMP                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                           /* printf() is a wrapper function which calls vfprintf() with stdout as the      C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                              destination output stream. EOF is returned on error, else the number          C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                              of characters output. */                                                      C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                           int                                                                              C:\mcc18\src\TRADIT~1\stdclib\printf.c
00576a   cfd9     MOVFF     0xfd9,0xfe6    printf (const rom char *fmt, ...)                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
00576c   ffe6                                                                                                               
00576e   cfda     MOVFF     0xfda,0xfe6                                                                                     
005770   ffe6                                                                                                               
005772   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005774   ffd9                                                                                                               
005776   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005778   ffda                                                                                                               
00577a   52e6     MOVF      0xe6,0x1,0x0                                                                                    
00577c   52e6     MOVF      0xe6,0x1,0x0                                                                                    
00577e   52e6     MOVF      0xe6,0x1,0x0                                                                                    
005780   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                             va_list ap;                                                                    C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                             int n;                                                                         C:\mcc18\src\TRADIT~1\stdclib\printf.c
005782   50d9     MOVF      0xd9,0x0,0x0     va_start (ap, fmt);                                                            C:\mcc18\src\TRADIT~1\stdclib\printf.c
005784   0ffb     ADDLW     0xfb                                                                                            
005786   6e00     MOVWF     0x0,0x0                                                                                         
005788   0eff     MOVLW     0xff                                                                                            
00578a   20da     ADDWFC    0xda,0x0,0x0                                                                                    
00578c   6e01     MOVWF     0x1,0x0                                                                                         
00578e   c000     MOVFF     0x0,0xfde                                                                                       
005790   ffde                                                                                                               
005792   6edd     MOVWF     0xdd,0x0                                                                                        
005794   cfde     MOVFF     0xfde,0xfe6      n = vfprintf (stdout, fmt, ap);                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
005796   ffe6                                                                                                               
005798   cfdd     MOVFF     0xfdd,0xfe6                                                                                     
00579a   ffe6                                                                                                               
00579c   0efb     MOVLW     0xfb                                                                                            
00579e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0057a0   ffe6                                                                                                               
0057a2   0efc     MOVLW     0xfc                                                                                            
0057a4   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0057a6   ffe6                                                                                                               
0057a8   0efd     MOVLW     0xfd                                                                                            
0057aa   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0057ac   ffe6                                                                                                               
0057ae   c2dc     MOVFF     0x2dc,0xfe6                                                                                     
0057b0   ffe6                                                                                                               
0057b2   c2dd     MOVFF     0x2dd,0xfe6                                                                                     
0057b4   ffe6                                                                                                               
0057b6   ec0f     CALL      0x181e,0x0                                                                                      
0057b8   f00c                                                                                                               
0057ba   6ef5     MOVWF     0xf5,0x0                                                                                        
0057bc   0e07     MOVLW     0x7                                                                                             
0057be   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
0057c0   e202     BC        0x57c6                                                                                          
0057c2   6ae1     CLRF      0xe1,0x0                                                                                        
0057c4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0057c6   6ee1     MOVWF     0xe1,0x0                                                                                        
0057c8   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0057ca   0e02     MOVLW     0x2                                                                                             
0057cc   cff3     MOVFF     0xff3,0xfdb                                                                                     
0057ce   ffdb                                                                                                               
0057d0   0e03     MOVLW     0x3                                                                                             
0057d2   cff4     MOVFF     0xff4,0xfdb                                                                                     
0057d4   ffdb                                                                                                               
                                             va_end (ap);                                                                   C:\mcc18\src\TRADIT~1\stdclib\printf.c
0057d6   0e02     MOVLW     0x2              return n;                                                                      C:\mcc18\src\TRADIT~1\stdclib\printf.c
0057d8   cfdb     MOVFF     0xfdb,0x0                                                                                       
0057da   f000                                                                                                               
0057dc   0e03     MOVLW     0x3                                                                                             
0057de   cfdb     MOVFF     0xfdb,0x1                                                                                       
0057e0   f001                                                                                                               
0057e2   c000     MOVFF     0x0,0xff3                                                                                       
0057e4   fff3                                                                                                               
0057e6   c001     MOVFF     0x1,0xff4                                                                                       
0057e8   fff4                                                                                                               
0057ea   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
0057ec   ffe1                                                                                                               
0057ee   cfda     MOVFF     0xfda,0xfe2                                                                                     
0057f0   ffe2                                                                                                               
0057f2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0057f4   cfe5     MOVFF     0xfe5,0xfda                                                                                     
0057f6   ffda                                                                                                               
0057f8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0057fa   ffd9                                                                                                               
0057fc   0012     RETURN    0x0                                                                                             
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                           /* by default stdout issues to the USART */                                      C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                           FILE *stdout = _H_USART;                                                         C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #include <ctype.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #include <string.h>                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_MINUS 0x1                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_PLUS  0x2                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_SPACE 0x4                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_OCTO  0x8                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_ZERO  0x10                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_SIGNED 0x80                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           static const rom char s_digits[] = "0123456789abcdef";                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           static unsigned char                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017f2   ec35     CALL      0x226a,0x0     s_put_n_chars (FILE * handle, unsigned char n, char c)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017f4   f011                                                                                                               
00226a   cfd9     MOVFF     0xfd9,0xfe6                                                                                     
00226c   ffe6                                                                                                               
00226e   cfda     MOVFF     0xfda,0xfe6                                                                                     
002270   ffe6                                                                                                               
002272   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002274   ffd9                                                                                                               
002276   cfe2     MOVFF     0xfe2,0xfda                                                                                     
002278   ffda                                                                                                               
00227a   0012     RETURN    0x0                                                                                             
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017f6   0efb     MOVLW     0xfb             while (n--)                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017f8   cfdb     MOVFF     0xfdb,0xff3                                                                                     
0017fa   fff3                                                                                                               
0017fc   06db     DECF      0xdb,0x1,0x0                                                                                    
0017fe   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001800   0900     IORLW     0x0                                                                                             
001802   e00a     BZ        0x1818                                                                                          
001804   ec83     CALL      0x2306,0x0         if (putc (c, handle) == EOF)                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001806   f011                                                                                                               
001808   0efa     MOVLW     0xfa                                                                                            
00180a   ecee     CALL      0x23dc,0x0                                                                                      
00180c   f011                                                                                                               
00180e   e1f3     BNZ       0x17f6                                                                                          
001810   1c01     COMF      0x1,0x0,0x0                                                                                     
001812   e1f1     BNZ       0x17f6                                                                                          
001814   0e01     MOVLW     0x1                  return 1;                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001816   d001     BRA       0x181a                                                                                          
001818   0e00     MOVLW     0x0              return 0;                                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00181a   ef64     GOTO      0x22c8         }                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00181c   f011                                                                                                               
0022c8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0022ca   cfe5     MOVFF     0xfe5,0xfda                                                                                     
0022cc   ffda                                                                                                               
0022ce   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0022d0   ffd9                                                                                                               
0022d2   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_UNSPECIFIED 0                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_LONG 1                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_SHLONG 2                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_BYTE   3                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           int                                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00181e   ec35     CALL      0x226a,0x0     vfprintf (auto FILE *handle, auto const rom char *f, auto va_list ap)            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001820   f011                                                                                                               
001822   0e3b     MOVLW     0x3b                                                                                            
001824   24e1     ADDWF     0xe1,0x0,0x0                                                                                    
001826   e302     BNC       0x182c                                                                                          
001828   68e1     SETF      0xe1,0x0                                                                                        
00182a   52e6     MOVF      0xe6,0x1,0x0                                                                                    
00182c   6ee1     MOVWF     0xe1,0x0                                                                                        
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                             unsigned char c;                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00182e   0e01     MOVLW     0x1              int count = 0;                                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001830   6adb     CLRF      0xdb,0x0                                                                                        
001832   0e02     MOVLW     0x2                                                                                             
001834   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001836   0ef9     MOVLW     0xf9             for (c = *f; c; c = *++f)                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001838   cfdb     MOVFF     0xfdb,0xff6                                                                                     
00183a   fff6                                                                                                               
00183c   0efa     MOVLW     0xfa                                                                                            
00183e   cfdb     MOVFF     0xfdb,0xff7                                                                                     
001840   fff7                                                                                                               
001842   0efb     MOVLW     0xfb                                                                                            
001844   cfdb     MOVFF     0xfdb,0xff8                                                                                     
001846   fff8                                                                                                               
001848   0008     TBLRD                                                                                                     
00184a   50f5     MOVF      0xf5,0x0,0x0                                                                                    
00184c   6edf     MOVWF     0xdf,0x0                                                                                        
00184e   50df     MOVF      0xdf,0x0,0x0                                                                                    
001850   e102     BNZ       0x1856                                                                                          
001852   ef8a     GOTO      0x2114                                                                                          
001854   f010                                                                                                               
00210e   d977     RCALL     0x23fe                                                                                          
002110   ef24     GOTO      0x1848                                                                                          
002112   f00c                                                                                                               
0023fe   50d9     MOVF      0xd9,0x0,0x0                                                                                    
002400   0ff9     ADDLW     0xf9                                                                                            
002402   6ee9     MOVWF     0xe9,0x0                                                                                        
002404   0eff     MOVLW     0xff                                                                                            
002406   ef98     GOTO      0x2330                                                                                          
002408   f011                                                                                                               
                                               {                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001856   0e25     MOVLW     0x25                 if (c == '%')                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001858   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00185a   e002     BZ        0x1860                                                                                          
00185c   ef7d     GOTO      0x20fa                                                                                          
00185e   f010                                                                                                               
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001860   0e03     MOVLW     0x3                      unsigned char flags = 0;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001862   6adb     CLRF      0xdb,0x0                                                                                        
001864   0e04     MOVLW     0x4                      unsigned char width = 0;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001866   6adb     CLRF      0xdb,0x0                                                                                        
001868   0e05     MOVLW     0x5                      unsigned char precision = 0;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00186a   6adb     CLRF      0xdb,0x0                                                                                        
00186c   0e06     MOVLW     0x6                      unsigned char have_precision = 0;                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00186e   6adb     CLRF      0xdb,0x0                                                                                        
001870   0e07     MOVLW     0x7                      unsigned char size = 0;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001872   6adb     CLRF      0xdb,0x0                                                                                        
                                                     unsigned char space_cnt;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     unsigned char cval;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     unsigned long larg;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     far rom char *romstring;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     char *ramstring;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     int n;                                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* get the first character of the conversion specifier */              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001874   ec9d     CALL      0x213a,0x0               c = *++f;                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001876   f010                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /**  The conversion specification has, after the '%' character:        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         7.9.6.1                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * Zero or more flags (in any order) that modify the meaning of the  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specification.                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional minimum field width. If the converted value has       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          fewer characters than the field width, it will be padded with     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          spaces (by default) on the left (or right, if the left            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          adjustment flag, described later, has been given) to the field    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          width. The field width takes the form of an asterisk *            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          (described later) or a decimal integer.                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional precision that gives the minimum number of digits     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to appear for the d, i, o, u, x, and X conversions, the           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          maximum number of digits to appear after the decimal point        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          character for e, E, and f conversions, the maximum number         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          of significant digits for the g and G conversions, or the         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          maximum number of characters to be written from a string in       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          s conversion. The precision takes the form of a period (.)        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          followed by an asterisk * (described later) or by an optional     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          decimal integer; if only the period is specified, the precision   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          is taken as zero. If a precision appears with any other           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier, the behaviour is undefined.                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional h specifying that a following d, i, o, u, x, or X     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier applies to a short int or unsigned short     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          int argument (the argument will have been promoted according      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to the integer promotions, and its value shall be converted       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to short int or unsigned short int before printing); an           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          optional h specifying that a following n conversion specifier     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          applies to a pointer to a short int argument; an optional l       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          (ell) specifying that a following d, i, o, u, x, or X             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier applies to a long int or unsigned long int   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          argument; or an optional L specifying that a following e, E,      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          f, g, or G conversion specifier applies to a long double          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          argument. If an h, l, or L appears with any other conversion      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          specifier, the behaviour is undefined.                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * A character that specifies the type of conversion to be applied.  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       */                                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /** check for a flag.                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        7.9.6.1                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        The flag characters and their meanings are:                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        - The result of the conversion will be left-justified within        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          the field. (It will be right justified if this flag is not        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          specified.)                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        + The result of a signed conversion will always begin with a        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          plus or a minus sign. (It will begin with a sign only when        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          a negative value is converted if this flag is not specified.)     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        space  If the first character of a signed conversion is not a       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          sign, or if a signed conversion results in no characters, a       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          space will be prefixed to the result. If the space and + flags    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          both appear, the space flag will be ignored.                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        # The result is to be converted to an "alternate form." For o       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion, it increases the precision to force the first digit   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          of the result to be a zero. For x (or X) conversion, a nonzero    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          result will have 0x (or 0X) prefixed to it. For e, E, f, g,       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          and G conversions, the result will always contain a decimal-      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          point character, even if no digits follow it. (Normally, a        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          decimal point character appears in the result of these            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversions only if a digit follows it.) For g and G              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversions, trailing zeros will not be removed from the          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          result. For other conversions the behaviour is undefined.         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        0 For d, i, o, u, x, X, e, E, f, g, and G conversions, leading      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          zeros (following any indication of sign or base) are used to      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          pad to the field width; no space padding is performed. If         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          the 0 and - flags both appear, the 0 flag will be ignored.        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          For other conversions, the behaviour is undefined.                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       */                                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001878   0e2d     MOVLW     0x2d                     while (c == '-' || c == '+' || c == ' ' || c == '#'                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00187a   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00187c   e00c     BZ        0x1896                                                                                          
00187e   0e2b     MOVLW     0x2b                                                                                            
001880   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001882   e009     BZ        0x1896                                                                                          
001884   0e20     MOVLW     0x20                                                                                            
001886   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001888   e006     BZ        0x1896                                                                                          
00188a   0e23     MOVLW     0x23                                                                                            
0018c8   d7d5     BRA       0x1874                                                                                          
00188c   5cdf     SUBWF     0xdf,0x0,0x0                    || c == '0')                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00188e   e003     BZ        0x1896                                                                                          
001890   0e30     MOVLW     0x30                                                                                            
001892   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001894   e11a     BNZ       0x18ca                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001896   50df     MOVF      0xdf,0x0,0x0                 switch (c)                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001898   0a30     XORLW     0x30                                                                                            
00189a   e014     BZ        0x18c4                                                                                          
00189c   0a13     XORLW     0x13                                                                                            
00189e   e00f     BZ        0x18be                                                                                          
0018a0   0a03     XORLW     0x3                                                                                             
0018a2   e00a     BZ        0x18b8                                                                                          
0018a4   0a0b     XORLW     0xb                                                                                             
0018a6   e005     BZ        0x18b2                                                                                          
0018a8   0a06     XORLW     0x6                                                                                             
0018aa   e1e4     BNZ       0x1874                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '-':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018ac   0e03     MOVLW     0x3                              flags |= _FLAG_MINUS;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018ae   80db     BSF       0xdb,0x0,0x0                                                                                    
0018b0   d7e1     BRA       0x1874                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '+':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018b2   0e03     MOVLW     0x3                              flags |= _FLAG_PLUS;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018b4   82db     BSF       0xdb,0x1,0x0                                                                                    
0018b6   d7de     BRA       0x1874                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case ' ':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018b8   0e03     MOVLW     0x3                              flags |= _FLAG_SPACE;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018ba   84db     BSF       0xdb,0x2,0x0                                                                                    
0018bc   d7db     BRA       0x1874                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '#':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018be   0e03     MOVLW     0x3                              flags |= _FLAG_OCTO;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018c0   86db     BSF       0xdb,0x3,0x0                                                                                    
0018c2   d7d8     BRA       0x1874                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '0':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018c4   0e03     MOVLW     0x3                              flags |= _FLAG_ZERO;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018c6   88db     BSF       0xdb,0x4,0x0                                                                                    
                                                             break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional width field is next */                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018ca   0e2a     MOVLW     0x2a                     if (c == '*')                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018cc   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0018ce   e11b     BNZ       0x1906                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018d0   ec99     CALL      0x2132,0x0                   n = va_arg (ap, int);                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018d2   f010                                                                                                               
0018d4   ece7     CALL      0x21ce,0x0                                                                                      
0018d6   f010                                                                                                               
0021ce   0e13     MOVLW     0x13                                                                                            
0021d0   cfee     MOVFF     0xfee,0xfdb                                                                                     
0021d2   ffdb                                                                                                               
0021d4   0e14     MOVLW     0x14                                                                                            
0021d6   cfed     MOVFF     0xfed,0xfdb                                                                                     
0021d8   ffdb                                                                                                               
0018d8   e010     BZ        0x18fa                       if (n < 0)                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0021da   0e13     MOVLW     0x13                                                                                            
0021dc   cfdb     MOVFF     0xfdb,0x0                                                                                       
0021de   f000                                                                                                               
0021e0   0e14     MOVLW     0x14                                                                                            
0021e2   cfdb     MOVFF     0xfdb,0x1                                                                                       
0021e4   f001                                                                                                               
0021e6   0100     MOVLB     0x0                                                                                             
0021e8   0e80     MOVLW     0x80                                                                                            
0021ea   1401     ANDWF     0x1,0x0,0x0                                                                                     
0021ec   0012     RETURN    0x0                                                                                             
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018da   0e03     MOVLW     0x3                              flags |= _FLAG_MINUS;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018dc   80db     BSF       0xdb,0x0,0x0                                                                                    
0018de   6841     SETF      0x41,0x0                         width = -n;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018e0   6842     SETF      0x42,0x0                                                                                        
0018e2   0e13     MOVLW     0x13                                                                                            
0018e4   cfdb     MOVFF     0xfdb,0x46                                                                                      
0018e6   f046                                                                                                               
0018e8   0e14     MOVLW     0x14                                                                                            
0018ea   cfdb     MOVFF     0xfdb,0x47                                                                                      
0018ec   f047                                                                                                               
0018ee   ecb6     CALL      0x556c,0x0                                                                                      
0018f0   f02a                                                                                                               
0018f2   0e04     MOVLW     0x4                                                                                             
0018f4   c03f     MOVFF     0x3f,0xfdb                                                                                      
0018f6   ffdb                                                                                                               
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018f8   d003     BRA       0x1900                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018fa   0e13     MOVLW     0x13                           width = n;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018fc   ecd0     CALL      0x21a0,0x0                                                                                      
0018fe   f010                                                                                                               
001900   ec9d     CALL      0x213a,0x0                   c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001902   f010                                                                                                               
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001904   d00b     BRA       0x191c                   else                                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001906   0e09     MOVLW     0x9                          cval = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001908   6adb     CLRF      0xdb,0x0                                                                                        
00190a   ec3e     CALL      0x227c,0x0                   while ((unsigned char) isdigit (c))                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00190c   f011                                                                                                               
00190e   e003     BZ        0x1916                                                                                          
001914   d7fa     BRA       0x190a                                                                                          
00227c   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
00227e   ffe6                                                                                                               
002280   6ae6     CLRF      0xe6,0x0                                                                                        
002282   ecb2     CALL      0x5b64,0x0                                                                                      
002284   f02d                                                                                                               
002286   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002288   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00228a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00228c   0012     RETURN    0x0                                                                                             
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001910   ecb2     CALL      0x2364,0x0                       cval = cval * 10 + c - '0';                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001912   f011                                                                                                               
002364   0e09     MOVLW     0x9                                                                                             
002366   50db     MOVF      0xdb,0x0,0x0                                                                                    
002368   0d0a     MULLW     0xa                                                                                             
00236a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00236c   24df     ADDWF     0xdf,0x0,0x0                                                                                    
00236e   0fd0     ADDLW     0xd0                                                                                            
002370   6ee7     MOVWF     0xe7,0x0                                                                                        
002372   0e09     MOVLW     0x9                                                                                             
002374   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
002376   ffdb                                                                                                               
002378   ef9d     GOTO      0x213a                           c = *++f;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00237a   f010                                                                                                               
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001916   0e09     MOVLW     0x9                          width = cval;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001918   ecd0     CALL      0x21a0,0x0                                                                                      
00191a   f010                                                                                                               
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* if '-' is specified, '0' is ignored */                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00191c   0e03     MOVLW     0x3                      if (flags & _FLAG_MINUS)                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00191e   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
001920   98db     BCF       0xdb,0x4,0x0               flags &= ~_FLAG_ZERO;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional precision field is next */                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001922   0e2e     MOVLW     0x2e                     if (c == '.')                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001924   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001926   e11b     BNZ       0x195e                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001928   ec9d     CALL      0x213a,0x0                   c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00192a   f010                                                                                                               
00192c   0e2a     MOVLW     0x2a                         if (c == '*')                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00192e   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001930   e10b     BNZ       0x1948                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001932   ec99     CALL      0x2132,0x0                       n = va_arg (ap, int);                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001934   f010                                                                                                               
001936   ece7     CALL      0x21ce,0x0                                                                                      
001938   f010                                                                                                               
002132   d929     RCALL     0x2386                                                                                          
002134   0e02     MOVLW     0x2                                                                                             
002136   ef8a     GOTO      0x2314                                                                                          
002138   f011                                                                                                               
002314   5e00     SUBWF     0x0,0x1,0x0                                                                                     
002316   0e00     MOVLW     0x0                                                                                             
002318   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
00231a   0ef7     MOVLW     0xf7                                                                                            
00231c   c000     MOVFF     0x0,0xfdb                                                                                       
00231e   ffdb                                                                                                               
002320   0ef8     MOVLW     0xf8                                                                                            
002322   c001     MOVFF     0x1,0xfdb                                                                                       
002324   ffdb                                                                                                               
002326   c000     MOVFF     0x0,0xfe9                                                                                       
002328   ffe9                                                                                                               
00232a   c001     MOVFF     0x1,0xfea                                                                                       
00232c   ffea                                                                                                               
00232e   0012     RETURN    0x0                                                                                             
002386   0ef7     MOVLW     0xf7                                                                                            
002388   cfdb     MOVFF     0xfdb,0x0                                                                                       
00238a   f000                                                                                                               
00238c   0ef8     MOVLW     0xf8                                                                                            
00238e   cfdb     MOVFF     0xfdb,0x1                                                                                       
002390   f001                                                                                                               
002392   0012     RETURN    0x0                                                                                             
00193a   e103     BNZ       0x1942                           if (n >= 0)                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               {                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00193c   0e13     MOVLW     0x13                                 precision = n;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00193e   ec22     CALL      0x2244,0x0                                                                                      
001940   f011                                                                                                               
002244   50db     MOVF      0xdb,0x0,0x0                                                                                    
002246   d8ce     RCALL     0x23e4                                                                                          
0023e4   6ee7     MOVWF     0xe7,0x0                                                                                        
0023e6   0e05     MOVLW     0x5                                                                                             
0023e8   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0023ea   ffdb                                                                                                               
0023ec   0012     RETURN    0x0                                                                                             
002248   0e01     MOVLW     0x1                                  have_precision = 1;                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00224a   6ef3     MOVWF     0xf3,0x0                                                                                        
00224c   0e06     MOVLW     0x6                                                                                             
00224e   cff3     MOVFF     0xff3,0xfdb                                                                                     
002250   ffdb                                                                                                               
002252   0012     RETURN    0x0                                                                                             
                                                               }                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001942   ec9d     CALL      0x213a,0x0                       c = *++f;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001944   f010                                                                                                               
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001946   d00b     BRA       0x195e                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001948   0e09     MOVLW     0x9                              cval = 0;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00194a   6adb     CLRF      0xdb,0x0                                                                                        
00194c   ec3e     CALL      0x227c,0x0                       while ((unsigned char) isdigit (c))                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00194e   f011                                                                                                               
001950   e003     BZ        0x1958                                                                                          
001956   d7fa     BRA       0x194c                                                                                          
                                                               {                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001952   ecb2     CALL      0x2364,0x0                           cval = cval * 10 + c - '0';                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001954   f011                                                                                                               
                                                                 c = *++f;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               }                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001958   0e09     MOVLW     0x9                              precision = cval;                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00195a   ec22     CALL      0x2244,0x0                                                                                      
00195c   f011                                                                                                               
                                                             have_precision = 1;                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional 'h' specifier. since int and short int are             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        the same size for MPLAB C18, this is a NOP for us. */               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00195e   0e68     MOVLW     0x68                     if (c == 'h')                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001960   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001962   e107     BNZ       0x1972                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001964   ec9d     CALL      0x213a,0x0                   c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001966   f010                                                                                                               
                                                         /* if 'c' is another 'h' character, this is an 'hh'                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specifier and the size is 8 bits */                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001968   0e68     MOVLW     0x68                         if (c == 'h')                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00196a   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00196c   e11d     BNZ       0x19a8                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00196e   0e03     MOVLW     0x3                              size = _FMT_BYTE;                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             c = *++f;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* 'z' and 't' are both 16-bit and so are NOPs */                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001970   d018     BRA       0x19a2                   else if (c == 't' || c == 'z')                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001972   0e74     MOVLW     0x74                                                                                            
001974   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001976   e017     BZ        0x19a6                                                                                          
001978   0e7a     MOVLW     0x7a                                                                                            
00197a   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00197c   e014     BZ        0x19a6                                                                                          
                                                       c = *++f;                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the 'H' specifier tells us to deal with 24-bit integers.            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        the 'T' and 'Z' specifiers are also 24 bit */                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00197e   0e48     MOVLW     0x48                     else if (c == 'H' || c == 'T' || c == 'Z')                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001980   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001982   e006     BZ        0x1990                                                                                          
001984   0e54     MOVLW     0x54                                                                                            
001986   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001988   e003     BZ        0x1990                                                                                          
00198a   0e5a     MOVLW     0x5a                                                                                            
00198c   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00198e   e102     BNZ       0x1994                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001990   0e02     MOVLW     0x2                          size = _FMT_SHLONG;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the 'l' specifier tells us to deal with 32-bit integers             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        'j' specifies intmax_t (long in our case). */                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001992   d007     BRA       0x19a2                   else if (c == 'l' || c == 'j')                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001994   0e6c     MOVLW     0x6c                                                                                            
001996   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001998   e003     BZ        0x19a0                                                                                          
00199a   0e6a     MOVLW     0x6a                                                                                            
00199c   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00199e   e104     BNZ       0x19a8                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019a0   0e01     MOVLW     0x1                          size = _FMT_LONG;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019a2   ec75     CALL      0x22ea,0x0                                                                                      
0019a4   f011                                                                                                               
0019a6   dbc9     RCALL     0x213a                       c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00213a   d961     RCALL     0x23fe                                                                                          
00213c   0008     TBLRD                                                                                                     
00213e   50f5     MOVF      0xf5,0x0,0x0                                                                                    
002140   6edf     MOVWF     0xdf,0x0                                                                                        
002142   0012     RETURN    0x0                                                                                             
002330   20da     ADDWFC    0xda,0x0,0x0                                                                                    
002332   6eea     MOVWF     0xea,0x0                                                                                        
002334   2aef     INCF      0xef,0x1,0x0                                                                                    
002336   cfee     MOVFF     0xfee,0xff6                                                                                     
002338   fff6                                                                                                               
00233a   0e00     MOVLW     0x0                                                                                             
00233c   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
00233e   cfee     MOVFF     0xfee,0xff7                                                                                     
002340   fff7                                                                                                               
002342   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
002344   cfee     MOVFF     0xfee,0xff8                                                                                     
002346   fff8                                                                                                               
002348   0012     RETURN    0x0                                                                                             
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019a8   50df     MOVF      0xdf,0x0,0x0             switch (c)                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019aa   0a6e     XORLW     0x6e                                                                                            
0019ac   e101     BNZ       0x19b0                                                                                          
0019ae   d381     BRA       0x20b2                                                                                          
0019b0   0a1e     XORLW     0x1e                                                                                            
0019b2   e101     BNZ       0x19b6                                                                                          
0019b4   d192     BRA       0x1cda                                                                                          
0019b6   0a20     XORLW     0x20                                                                                            
0019b8   e101     BNZ       0x19bc                                                                                          
0019ba   d18f     BRA       0x1cda                                                                                          
0019bc   0a3f     XORLW     0x3f                                                                                            
0019be   e101     BNZ       0x19c2                                                                                          
0019c0   d149     BRA       0x1c54                                                                                          
0019c2   0a1a     XORLW     0x1a                                                                                            
0019c4   e101     BNZ       0x19c8                                                                                          
0019c6   d146     BRA       0x1c54                                                                                          
0019c8   0a0d     XORLW     0xd                                                                                             
0019ca   e101     BNZ       0x19ce                                                                                          
0019cc   d143     BRA       0x1c54                                                                                          
0019ce   0a20     XORLW     0x20                                                                                            
0019d0   e101     BNZ       0x19d4                                                                                          
0019d2   d140     BRA       0x1c54                                                                                          
0019d4   0a3a     XORLW     0x3a                                                                                            
0019d6   e101     BNZ       0x19da                                                                                          
0019d8   d13d     BRA       0x1c54                                                                                          
0019da   0a20     XORLW     0x20                                                                                            
0019dc   e101     BNZ       0x19e0                                                                                          
0019de   d13a     BRA       0x1c54                                                                                          
0019e0   0a26     XORLW     0x26                                                                                            
0019e2   e101     BNZ       0x19e6                                                                                          
0019e4   d135     BRA       0x1c50                                                                                          
0019e6   0a0d     XORLW     0xd                                                                                             
0019e8   e101     BNZ       0x19ec                                                                                          
0019ea   d132     BRA       0x1c50                                                                                          
0019ec   0a1a     XORLW     0x1a                                                                                            
0019ee   e101     BNZ       0x19f2                                                                                          
0019f0   d0d9     BRA       0x1ba4                                                                                          
0019f2   0a20     XORLW     0x20                                                                                            
0019f4   e04a     BZ        0x1a8a                                                                                          
0019f6   0a30     XORLW     0x30                                                                                            
0019f8   e01f     BZ        0x1a38                                                                                          
0019fa   0a46     XORLW     0x46                                                                                            
0019fc   e00e     BZ        0x1a1a                                                                                          
0019fe   0a25     XORLW     0x25                                                                                            
001a00   e001     BZ        0x1a04                                                                                          
001a02   d385     BRA       0x210e                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case '\0':                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* this is undefined behaviour. we have a trailing '%' character   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            in the string, perhaps with some flags, width, precision        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            stuff as well, but no format specifier. We'll, arbitrarily,     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            back up a character so that the loop will terminate             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            properly when it loops back and we'll output a '%'              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            character. */                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a04   50d9     MOVF      0xd9,0x0,0x0                 --f;                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a06   0ff9     ADDLW     0xf9                                                                                            
001a08   6ee9     MOVWF     0xe9,0x0                                                                                        
001a0a   0eff     MOVLW     0xff                                                                                            
001a0c   20da     ADDWFC    0xda,0x0,0x0                                                                                    
001a0e   6eea     MOVWF     0xea,0x0                                                                                        
001a10   0e01     MOVLW     0x1                                                                                             
001a12   5eee     SUBWF     0xee,0x1,0x0                                                                                    
001a14   0e00     MOVLW     0x0                                                                                             
001a16   5aee     SUBWFB    0xee,0x1,0x0                                                                                    
001a18   5aee     SUBWFB    0xee,0x1,0x0                                                                                    
                                                         /* fallthrough */                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case '%':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a1a   ec83     CALL      0x2306,0x0                   if (putc ('%', handle) == EOF)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a1c   f011                                                                                                               
001a1e   0e25     MOVLW     0x25                                                                                            
001a20   6ee6     MOVWF     0xe6,0x0                                                                                        
001a22   db95     RCALL     0x214e                                                                                          
001a24   e103     BNZ       0x1a2c                                                                                          
001a26   1c01     COMF      0x1,0x0,0x0                                                                                     
001a28   e101     BNZ       0x1a2c                                                                                          
001a2a   d36b     BRA       0x2102                                                                                          
                                                           return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a2c   ec7f     CALL      0x22fe,0x0                   ++count;                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a2e   f011                                                                                                               
001a30   e201     BC        0x1a34                                                                                          
001a32   d36d     BRA       0x210e                                                                                          
001a34   2adb     INCF      0xdb,0x1,0x0                                                                                    
001a36   d36b     BRA       0x210e                       break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'c':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a38   0e08     MOVLW     0x8                          space_cnt = 0;                                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a3a   6adb     CLRF      0xdb,0x0                                                                                        
001a3c   0e04     MOVLW     0x4                          if (width > 1)                                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a3e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001a40   0801     SUBLW     0x1                                                                                             
001a42   e206     BC        0x1a50                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a44   0e04     MOVLW     0x4                              space_cnt = width - 1;                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a46   04db     DECF      0xdb,0x0,0x0                                                                                    
001a48   ec47     CALL      0x228e,0x0                                                                                      
001a4a   f011                                                                                                               
001a4c   50db     MOVF      0xdb,0x0,0x0                     count += space_cnt;                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a4e   db8b     RCALL     0x2166                                                                                          
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a50   0e08     MOVLW     0x8                          if (space_cnt && !(flags & _FLAG_MINUS))                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a52   50db     MOVF      0xdb,0x0,0x0                                                                                    
001a54   e009     BZ        0x1a68                                                                                          
001a56   0e03     MOVLW     0x3                                                                                             
001a58   50db     MOVF      0xdb,0x0,0x0                                                                                    
001a5a   0b01     ANDLW     0x1                                                                                             
001a5c   e105     BNZ       0x1a68                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a5e   db72     RCALL     0x2144                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a60   e001     BZ        0x1a64                                                                                          
001a62   d34f     BRA       0x2102                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a64   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a66   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a68   db64     RCALL     0x2132                       c = va_arg (ap, int);                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a6a   cfef     MOVFF     0xfef,0xfdf                                                                                     
001a6c   ffdf                                                                                                               
001a6e   ecf7     CALL      0x23ee,0x0                   if (putc (c, handle) == EOF)                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a70   f011                                                                                                               
001a72   e103     BNZ       0x1a7a                                                                                          
001a74   1c01     COMF      0x1,0x0,0x0                                                                                     
001a76   e101     BNZ       0x1a7a                                                                                          
001a78   d344     BRA       0x2102                                                                                          
                                                           return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a7a   ec7f     CALL      0x22fe,0x0                   ++count;                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a7c   f011                                                                                                               
001a7e   e301     BNC       0x1a82                                                                                          
001a80   2adb     INCF      0xdb,0x1,0x0                                                                                    
001a82   db60     RCALL     0x2144                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a84   e101     BNZ       0x1a88                                                                                          
001a86   d343     BRA       0x210e                                                                                          
001a88   d33c     BRA       0x2102                         return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'S':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a8a   0e07     MOVLW     0x7                          if (size == _FMT_SHLONG)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a8c   50db     MOVF      0xdb,0x0,0x0                                                                                    
001a8e   0802     SUBLW     0x2                                                                                             
001a90   e10f     BNZ       0x1ab0                                                                                          
001a92   ecc3     CALL      0x2386,0x0                     romstring = va_arg (ap, rom far char *);                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a94   f011                                                                                                               
001a96   0e03     MOVLW     0x3                                                                                             
001a98   ec8a     CALL      0x2314,0x0                                                                                      
001a9a   f011                                                                                                               
001a9c   0e0e     MOVLW     0xe                                                                                             
001a9e   cfee     MOVFF     0xfee,0xfdb                                                                                     
001aa0   ffdb                                                                                                               
001aa2   0e0f     MOVLW     0xf                                                                                             
001aa4   cfee     MOVFF     0xfee,0xfdb                                                                                     
001aa6   ffdb                                                                                                               
001aa8   0e10     MOVLW     0x10                                                                                            
001aaa   cfee     MOVFF     0xfee,0xfdb                                                                                     
001aac   ffdb                                                                                                               
001aae   d020     BRA       0x1af0                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ab0   0ef7     MOVLW     0xf7                           romstring = (far rom char*)va_arg (ap, rom near char *);         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ab2   cfdb     MOVFF     0xfdb,0x3                                                                                       
001ab4   f003                                                                                                               
001ab6   0ef8     MOVLW     0xf8                                                                                            
001ab8   cfdb     MOVFF     0xfdb,0x4                                                                                       
001aba   f004                                                                                                               
001abc   0e02     MOVLW     0x2                                                                                             
001abe   5e03     SUBWF     0x3,0x1,0x0                                                                                     
001ac0   0e00     MOVLW     0x0                                                                                             
001ac2   5a04     SUBWFB    0x4,0x1,0x0                                                                                     
001ac4   0ef7     MOVLW     0xf7                                                                                            
001ac6   c003     MOVFF     0x3,0xfdb                                                                                       
001ac8   ffdb                                                                                                               
001aca   0ef8     MOVLW     0xf8                                                                                            
001acc   c004     MOVFF     0x4,0xfdb                                                                                       
001ace   ffdb                                                                                                               
001ad0   c003     MOVFF     0x3,0xfe9                                                                                       
001ad2   ffe9                                                                                                               
001ad4   c004     MOVFF     0x4,0xfea                                                                                       
001ad6   ffea                                                                                                               
001ad8   ec7a     CALL      0x22f4,0x0                                                                                      
001ada   f011                                                                                                               
001adc   6a02     CLRF      0x2,0x0                                                                                         
001ade   0e0e     MOVLW     0xe                                                                                             
001ae0   c000     MOVFF     0x0,0xfdb                                                                                       
001ae2   ffdb                                                                                                               
001ae4   0e0f     MOVLW     0xf                                                                                             
001ae6   c001     MOVFF     0x1,0xfdb                                                                                       
001ae8   ffdb                                                                                                               
001aea   0e10     MOVLW     0x10                                                                                            
001aec   c002     MOVFF     0x2,0xfdb                                                                                       
001aee   ffdb                                                                                                               
001af0   0e0e     MOVLW     0xe                          n = strlenpgm (romstring);                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001af2   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001af4   ffe6                                                                                                               
001af6   0e0f     MOVLW     0xf                                                                                             
001af8   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001afa   ffe6                                                                                                               
001afc   0e10     MOVLW     0x10                                                                                            
001afe   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001b00   ffe6                                                                                                               
001b02   ecbb     CALL      0x5976,0x0                                                                                      
001b04   f02c                                                                                                               
001b06   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001b08   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001b0a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001b0c   0e13     MOVLW     0x13                                                                                            
001b0e   c040     MOVFF     0x40,0xfdb                                                                                      
001b10   ffdb                                                                                                               
001b12   0e14     MOVLW     0x14                                                                                            
001b14   c041     MOVFF     0x41,0xfdb                                                                                      
001b16   ffdb                                                                                                               
                                                         /* Normalize the width based on the length of the actual           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string and the precision. */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b18   0e06     MOVLW     0x6                          if (have_precision && precision < (unsigned char) n)               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b1a   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b1c   e005     BZ        0x1b28                                                                                          
001b1e   0e13     MOVLW     0x13                                                                                            
001b20   ecbe     CALL      0x237c,0x0                                                                                      
001b22   f011                                                                                                               
001b24   e201     BC        0x1b28                                                                                          
001b26   db6a     RCALL     0x21fc                         n = precision;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0021fc   0e05     MOVLW     0x5                                                                                             
0021fe   50db     MOVF      0xdb,0x0,0x0                                                                                    
002200   6ee6     MOVWF     0xe6,0x0                                                                                        
002202   50d9     MOVF      0xd9,0x0,0x0                                                                                    
002204   0f13     ADDLW     0x13                                                                                            
002206   d901     RCALL     0x240a                                                                                          
002208   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00220a   50e7     MOVF      0xe7,0x0,0x0                                                                                    
00220c   6eee     MOVWF     0xee,0x0                                                                                        
00220e   6aed     CLRF      0xed,0x0                                                                                        
002210   0012     RETURN    0x0                                                                                             
001b28   ece2     CALL      0x23c4,0x0                   if (width < (unsigned char) n)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b2a   f011                                                                                                               
001b2c   e202     BC        0x1b32                                                                                          
0023c4   0e13     MOVLW     0x13                                                                                            
0023c6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0023c8   6ef3     MOVWF     0xf3,0x0                                                                                        
0023ca   0e04     MOVLW     0x4                                                                                             
0023cc   efcb     GOTO      0x2196                                                                                          
0023ce   f010                                                                                                               
001b2e   0e13     MOVLW     0x13                           width = n;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b30   db37     RCALL     0x21a0                                                                                          
001b32   eca5     CALL      0x234a,0x0                   space_cnt = width - (unsigned char) n;                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b34   f011                                                                                                               
00234a   0e04     MOVLW     0x4                                                                                             
00234c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00234e   ffe6                                                                                                               
002350   0e13     MOVLW     0x13                                                                                            
002352   50db     MOVF      0xdb,0x0,0x0                                                                                    
002354   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002356   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
002358   df9a     RCALL     0x228e                                                                                          
00235a   50db     MOVF      0xdb,0x0,0x0                 count += space_cnt;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00235c   df04     RCALL     0x2166                                                                                          
                                                         /* we've already calculated the space count that the width         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            will require. now we want the width field to have the           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            number of character to display from the string itself,          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limited by the length of the actual string and the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specified precision. */                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b36   e006     BZ        0x1b44                       if (have_precision && precision < width)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b38   0e04     MOVLW     0x4                                                                                             
001b3a   ecbe     CALL      0x237c,0x0                                                                                      
001b3c   f011                                                                                                               
001b3e   e202     BC        0x1b44                                                                                          
00235e   0e06     MOVLW     0x6                                                                                             
002360   50db     MOVF      0xdb,0x0,0x0                                                                                    
002362   0012     RETURN    0x0                                                                                             
001b40   0e05     MOVLW     0x5                            width = precision;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b42   db2e     RCALL     0x21a0                                                                                          
                                                         /* if right justified, we print the spaces before the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string */                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b44   0e03     MOVLW     0x3                          if (!(flags & _FLAG_MINUS))                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b46   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
001b48   d005     BRA       0x1b54                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b4a   dafc     RCALL     0x2144                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b4c   e001     BZ        0x1b50                                                                                          
001b4e   d2d9     BRA       0x2102                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b50   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b52   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b54   0e09     MOVLW     0x9                          cval = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b56   6adb     CLRF      0xdb,0x0                                                                                        
001b58   0e0e     MOVLW     0xe                          for (c = *romstring; c && cval < width; c = *++romstring)          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b5a   cfdb     MOVFF     0xfdb,0xff6                                                                                     
001b5c   fff6                                                                                                               
001b5e   0e0f     MOVLW     0xf                                                                                             
001b60   cfdb     MOVFF     0xfdb,0xff7                                                                                     
001b62   fff7                                                                                                               
001b64   0e10     MOVLW     0x10                                                                                            
001b66   cfdb     MOVFF     0xfdb,0xff8                                                                                     
001b68   fff8                                                                                                               
001b6a   0008     TBLRD                                                                                                     
001b6c   50f5     MOVF      0xf5,0x0,0x0                                                                                    
001b6e   6edf     MOVWF     0xdf,0x0                                                                                        
001b70   50df     MOVF      0xdf,0x0,0x0                                                                                    
001b72   e014     BZ        0x1b9c                                                                                          
001b74   ece8     CALL      0x23d0,0x0                                                                                      
001b76   f011                                                                                                               
001b78   e211     BC        0x1b9c                                                                                          
001b90   50d9     MOVF      0xd9,0x0,0x0                                                                                    
001b92   0f0e     ADDLW     0xe                                                                                             
001b94   6ee9     MOVWF     0xe9,0x0                                                                                        
001b96   0e00     MOVLW     0x0                                                                                             
001b98   dbcb     RCALL     0x2330                                                                                          
001b9a   d7e7     BRA       0x1b6a                                                                                          
0023d0   0e04     MOVLW     0x4                                                                                             
0023d2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0023d4   6ef3     MOVWF     0xf3,0x0                                                                                        
0023d6   0e09     MOVLW     0x9                                                                                             
0023d8   efcb     GOTO      0x2196                                                                                          
0023da   f010                                                                                                               
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b7a   ecf7     CALL      0x23ee,0x0                       if (putc (c, handle) == EOF)                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b7c   f011                                                                                                               
001b7e   e103     BNZ       0x1b86                                                                                          
001b80   1c01     COMF      0x1,0x0,0x0                                                                                     
001b82   e101     BNZ       0x1b86                                                                                          
001b84   d2be     BRA       0x2102                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b86   dbbb     RCALL     0x22fe                           ++count;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b88   e301     BNC       0x1b8c                                                                                          
001b8a   2adb     INCF      0xdb,0x1,0x0                                                                                    
001b8c   0e09     MOVLW     0x9                              ++cval;                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b8e   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* If there are spaces left, it's left justified.                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            Either way, calling the function unconditionally                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            is smaller code. */                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b9c   dad3     RCALL     0x2144                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b9e   e101     BNZ       0x1ba2                                                                                          
001ba0   d2b6     BRA       0x210e                                                                                          
001ba2   d2af     BRA       0x2102                         return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 's':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ba4   dac6     RCALL     0x2132                       ramstring = va_arg (ap, char *);                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ba6   0e11     MOVLW     0x11                                                                                            
001ba8   cfee     MOVFF     0xfee,0xfdb                                                                                     
001baa   ffdb                                                                                                               
001bac   0e12     MOVLW     0x12                                                                                            
001bae   cfed     MOVFF     0xfed,0xfdb                                                                                     
001bb0   ffdb                                                                                                               
001bb2   0e11     MOVLW     0x11                         n = strlen (ramstring);                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bb4   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001bb6   ffe6                                                                                                               
001bb8   0e12     MOVLW     0x12                                                                                            
001bba   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001bbc   ffe6                                                                                                               
001bbe   ecad     CALL      0x595a,0x0                                                                                      
001bc0   f02c                                                                                                               
001bc2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001bc4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001bc6   0e13     MOVLW     0x13                                                                                            
001bc8   cff3     MOVFF     0xff3,0xfdb                                                                                     
001bca   ffdb                                                                                                               
001bcc   0e14     MOVLW     0x14                                                                                            
001bce   cff4     MOVFF     0xff4,0xfdb                                                                                     
001bd0   ffdb                                                                                                               
                                                         /* Normalize the width based on the length of the actual           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string and the precision. */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bd2   0e06     MOVLW     0x6                          if (have_precision && precision < (unsigned char) n)               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bd4   50db     MOVF      0xdb,0x0,0x0                                                                                    
001bd6   e004     BZ        0x1be0                                                                                          
001bd8   0e13     MOVLW     0x13                                                                                            
001bda   dbd0     RCALL     0x237c                                                                                          
001bdc   e201     BC        0x1be0                                                                                          
001bde   db0e     RCALL     0x21fc                         n = precision;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001be0   ece2     CALL      0x23c4,0x0                   if (width < (unsigned char) n)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001be2   f011                                                                                                               
001be4   e202     BC        0x1bea                                                                                          
001be6   0e13     MOVLW     0x13                           width = n;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001be8   dadb     RCALL     0x21a0                                                                                          
001bea   dbaf     RCALL     0x234a                       space_cnt = width - (unsigned char) n;                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00228e   6ee7     MOVWF     0xe7,0x0                                                                                        
002290   0e08     MOVLW     0x8                                                                                             
002292   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
002294   ffdb                                                                                                               
002296   0012     RETURN    0x0                                                                                             
                                                         count += space_cnt;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* we've already calculated the space count that the width         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            will require. now we want the width field to have the           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            number of character to display from the string itself,          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limited by the length of the actual string and the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specified precision. */                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bec   e005     BZ        0x1bf8                       if (have_precision && precision < width)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bee   0e04     MOVLW     0x4                                                                                             
001bf0   dbc5     RCALL     0x237c                                                                                          
001bf2   e202     BC        0x1bf8                                                                                          
00237c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00237e   6ef3     MOVWF     0xf3,0x0                                                                                        
002380   0e05     MOVLW     0x5                                                                                             
002382   efcb     GOTO      0x2196                                                                                          
002384   f010                                                                                                               
001bf4   0e05     MOVLW     0x5                            width = precision;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bf6   dad4     RCALL     0x21a0                                                                                          
0021a0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0021a2   6ee7     MOVWF     0xe7,0x0                                                                                        
0021a4   0e04     MOVLW     0x4                                                                                             
0021a6   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0021a8   ffdb                                                                                                               
0021aa   0012     RETURN    0x0                                                                                             
                                                         /* if right justified, we print the spaces before the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string */                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bf8   0e03     MOVLW     0x3                          if (!(flags & _FLAG_MINUS))                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bfa   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
001bfc   d005     BRA       0x1c08                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bfe   daa2     RCALL     0x2144                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c00   e001     BZ        0x1c04                                                                                          
001c02   d27f     BRA       0x2102                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c04   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c06   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c08   0e09     MOVLW     0x9                          cval = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c0a   6adb     CLRF      0xdb,0x0                                                                                        
001c0c   0e11     MOVLW     0x11                         for (c = *ramstring; c && cval < width; c = *++ramstring)          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c0e   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001c10   ffe9                                                                                                               
001c12   0e12     MOVLW     0x12                                                                                            
001c14   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001c16   ffea                                                                                                               
001c18   cfef     MOVFF     0xfef,0xfdf                                                                                     
001c1a   ffdf                                                                                                               
001c1c   50df     MOVF      0xdf,0x0,0x0                                                                                    
001c1e   e014     BZ        0x1c48                                                                                          
001c20   dbd7     RCALL     0x23d0                                                                                          
001c22   e212     BC        0x1c48                                                                                          
001c38   0e11     MOVLW     0x11                                                                                            
001c3a   2adb     INCF      0xdb,0x1,0x0                                                                                    
001c3c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001c3e   ffe9                                                                                                               
001c40   0e12     MOVLW     0x12                                                                                            
001c42   e3e8     BNC       0x1c14                                                                                          
001c44   2adb     INCF      0xdb,0x1,0x0                                                                                    
001c46   d7e6     BRA       0x1c14                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c24   dbe4     RCALL     0x23ee                           if (putc (c, handle) == EOF)                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c26   e103     BNZ       0x1c2e                                                                                          
001c28   1c01     COMF      0x1,0x0,0x0                                                                                     
001c2a   e101     BNZ       0x1c2e                                                                                          
001c2c   d26a     BRA       0x2102                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c2e   db67     RCALL     0x22fe                           ++count;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c30   e301     BNC       0x1c34                                                                                          
001c32   2adb     INCF      0xdb,0x1,0x0                                                                                    
001c34   0e09     MOVLW     0x9                              ++cval;                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c36   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* If there are spaces left, it's left justified.                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            Either way, calling the function unconditionally                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            is smaller code. */                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c48   da7d     RCALL     0x2144                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c4a   e101     BNZ       0x1c4e                                                                                          
001c4c   d260     BRA       0x210e                                                                                          
001c4e   d259     BRA       0x2102                         return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'd':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'i':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c50   0e03     MOVLW     0x3                          flags |= _FLAG_SIGNED;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c52   8edb     BSF       0xdb,0x7,0x0                                                                                    
                                                         /* fall through */                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'o':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'u':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'x':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'X':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'b':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'B':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* This is a bit of a sneaky trick. The 'l' and 'hh' size          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specifiers are valid only for the integer conversions,          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            not the 'p' or 'P' conversions, and are ignored for the         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            latter. By jumping over the additional size specifier           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            checks here we get the best code size since we can              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limit the size checks in the remaining code. */                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c54   0e07     MOVLW     0x7                          if (size == _FMT_LONG)                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c56   04db     DECF      0xdb,0x0,0x0                                                                                    
001c58   e110     BNZ       0x1c7a                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c5a   db95     RCALL     0x2386                           larg = va_arg (ap, long int);                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c5c   0e04     MOVLW     0x4                                                                                             
001c5e   db5a     RCALL     0x2314                                                                                          
001c60   0e0a     MOVLW     0xa                                                                                             
001c62   cfee     MOVFF     0xfee,0xfdb                                                                                     
001c64   ffdb                                                                                                               
001c66   0e0b     MOVLW     0xb                                                                                             
001c68   cfee     MOVFF     0xfee,0xfdb                                                                                     
001c6a   ffdb                                                                                                               
001c6c   0e0c     MOVLW     0xc                                                                                             
001c6e   cfee     MOVFF     0xfee,0xfdb                                                                                     
001c70   ffdb                                                                                                               
001c72   0e0d     MOVLW     0xd                                                                                             
001c74   cfee     MOVFF     0xfee,0xfdb                                                                                     
001c76   ffdb                                                                                                               
001c78   d06c     BRA       0x1d52                           goto _do_integer_conversion;                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c7a   0e07     MOVLW     0x7                          else if (size == _FMT_BYTE)                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c7c   50db     MOVF      0xdb,0x0,0x0                                                                                    
001c7e   0803     SUBLW     0x3                                                                                             
001c80   e12c     BNZ       0x1cda                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c82   0e03     MOVLW     0x3                              if (flags & _FLAG_SIGNED)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c84   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
001c86   d00d     BRA       0x1ca2                                                                                          
001c88   dab2     RCALL     0x21ee                             larg = (signed char) va_arg (ap, int);                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c8a   0e02     MOVLW     0x2                                                                                             
001c8c   da76     RCALL     0x217a                                                                                          
001c8e   cfef     MOVFF     0xfef,0x0                                                                                       
001c90   f000                                                                                                               
001c92   6a01     CLRF      0x1,0x0                                                                                         
001c94   6a02     CLRF      0x2,0x0                                                                                         
001c96   6a03     CLRF      0x3,0x0                                                                                         
001c98   ae00     BTFSS     0x0,0x7,0x0                                                                                     
001c9a   d039     BRA       0x1d0e                                                                                          
001c9c   6801     SETF      0x1,0x0                                                                                         
001c9e   6802     SETF      0x2,0x0                                                                                         
001ca0   d035     BRA       0x1d0c                           else                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ca2   0ef7     MOVLW     0xf7                               larg = (unsigned char) va_arg (ap, unsigned int);            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ca4   cfdb     MOVFF     0xfdb,0x1                                                                                       
001ca6   f001                                                                                                               
001ca8   0ef8     MOVLW     0xf8                                                                                            
001caa   cfdb     MOVFF     0xfdb,0x2                                                                                       
001cac   f002                                                                                                               
001cae   0e02     MOVLW     0x2                                                                                             
001cb0   5e01     SUBWF     0x1,0x1,0x0                                                                                     
001cb2   0e00     MOVLW     0x0                                                                                             
001cb4   5a02     SUBWFB    0x2,0x1,0x0                                                                                     
001cb6   0ef7     MOVLW     0xf7                                                                                            
001cb8   c001     MOVFF     0x1,0xfdb                                                                                       
001cba   ffdb                                                                                                               
001cbc   0ef8     MOVLW     0xf8                                                                                            
001cbe   c002     MOVFF     0x2,0xfdb                                                                                       
001cc0   ffdb                                                                                                               
001cc2   c001     MOVFF     0x1,0xfe9                                                                                       
001cc4   ffe9                                                                                                               
001cc6   c002     MOVFF     0x2,0xfea                                                                                       
001cc8   ffea                                                                                                               
001cca   cfef     MOVFF     0xfef,0x0                                                                                       
001ccc   f000                                                                                                               
001cce   0e0a     MOVLW     0xa                                                                                             
001cd0   c000     MOVFF     0x0,0xfdb                                                                                       
001cd2   ffdb                                                                                                               
001cd4   0e0b     MOVLW     0xb                                                                                             
001cd6   6adb     CLRF      0xdb,0x0                                                                                        
001cd8   d038     BRA       0x1d4a                           goto _do_integer_conversion;                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* fall through */                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'p':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'P':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cda   0e07     MOVLW     0x7                          if (size == _FMT_SHLONG)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cdc   50db     MOVF      0xdb,0x0,0x0                                                                                    
001cde   0802     SUBLW     0x2                                                                                             
001ce0   e109     BNZ       0x1cf4                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ce2   0e03     MOVLW     0x3                              if (flags & _FLAG_SIGNED)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ce4   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
001ce6   d004     BRA       0x1cf0                                                                                          
001ce8   db59     RCALL     0x239c                             larg = va_arg (ap, short long int);                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cea   ae02     BTFSS     0x2,0x7,0x0                                                                                     
001cec   d010     BRA       0x1d0e                                                                                          
002298   cfee     MOVFF     0xfee,0x0                                                                                       
00229a   f000                                                                                                               
00229c   cfee     MOVFF     0xfee,0x1                                                                                       
00229e   f001                                                                                                               
0022a0   cfef     MOVFF     0xfef,0x2                                                                                       
0022a2   f002                                                                                                               
0022a4   6a03     CLRF      0x3,0x0                                                                                         
0022a6   0012     RETURN    0x0                                                                                             
00239c   df28     RCALL     0x21ee                                                                                          
00239e   0e03     MOVLW     0x3                                                                                             
0023a0   deec     RCALL     0x217a                                                                                          
0023a2   ef4c     GOTO      0x2298                                                                                          
0023a4   f011                                                                                                               
001cee   d00e     BRA       0x1d0c                           else                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cf0   db55     RCALL     0x239c                             larg = va_arg (ap, unsigned short long int);                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cf2   d00d     BRA       0x1d0e                       else if (flags & _FLAG_SIGNED)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cf4   0e03     MOVLW     0x3                                                                                             
001cf6   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
001cf8   d012     BRA       0x1d1e                                                                                          
001cfa   da79     RCALL     0x21ee                         larg = va_arg (ap, int);                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cfc   0e02     MOVLW     0x2                                                                                             
001cfe   da3d     RCALL     0x217a                                                                                          
001d00   daf9     RCALL     0x22f4                                                                                          
001d02   6a02     CLRF      0x2,0x0                                                                                         
001d04   6a03     CLRF      0x3,0x0                                                                                         
001d06   ae01     BTFSS     0x1,0x7,0x0                                                                                     
001d08   d002     BRA       0x1d0e                                                                                          
001d0a   6802     SETF      0x2,0x0                                                                                         
001d0c   6803     SETF      0x3,0x0                                                                                         
001d0e   dae2     RCALL     0x22d4                                                                                          
001d10   0e0c     MOVLW     0xc                                                                                             
001d12   c002     MOVFF     0x2,0xfdb                                                                                       
001d14   ffdb                                                                                                               
001d16   0e0d     MOVLW     0xd                                                                                             
001d18   c003     MOVFF     0x3,0xfdb                                                                                       
001d1a   ffdb                                                                                                               
00217a   5e04     SUBWF     0x4,0x1,0x0                                                                                     
00217c   0e00     MOVLW     0x0                                                                                             
00217e   5a05     SUBWFB    0x5,0x1,0x0                                                                                     
002180   0ef7     MOVLW     0xf7                                                                                            
002182   c004     MOVFF     0x4,0xfdb                                                                                       
002184   ffdb                                                                                                               
002186   0ef8     MOVLW     0xf8                                                                                            
002188   c005     MOVFF     0x5,0xfdb                                                                                       
00218a   ffdb                                                                                                               
00218c   c004     MOVFF     0x4,0xfe9                                                                                       
00218e   ffe9                                                                                                               
002190   c005     MOVFF     0x5,0xfea                                                                                       
002192   ffea                                                                                                               
002194   0012     RETURN    0x0                                                                                             
0021ee   0ef7     MOVLW     0xf7                                                                                            
0021f0   cfdb     MOVFF     0xfdb,0x4                                                                                       
0021f2   f004                                                                                                               
0021f4   0ef8     MOVLW     0xf8                                                                                            
0021f6   cfdb     MOVFF     0xfdb,0x5                                                                                       
0021f8   f005                                                                                                               
0021fa   0012     RETURN    0x0                                                                                             
0022d4   0e0a     MOVLW     0xa                                                                                             
0022d6   c000     MOVFF     0x0,0xfdb                                                                                       
0022d8   ffdb                                                                                                               
0022da   0e0b     MOVLW     0xb                                                                                             
0022dc   c001     MOVFF     0x1,0xfdb                                                                                       
0022de   ffdb                                                                                                               
0022e0   0012     RETURN    0x0                                                                                             
0022f4   cfee     MOVFF     0xfee,0x0                                                                                       
0022f6   f000                                                                                                               
0022f8   cfef     MOVFF     0xfef,0x1                                                                                       
0022fa   f001                                                                                                               
0022fc   0012     RETURN    0x0                                                                                             
001d1c   d01a     BRA       0x1d52                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d1e   0ef7     MOVLW     0xf7                           larg = va_arg (ap, unsigned int);                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d20   cfdb     MOVFF     0xfdb,0x2                                                                                       
001d22   f002                                                                                                               
001d24   0ef8     MOVLW     0xf8                                                                                            
001d26   cfdb     MOVFF     0xfdb,0x3                                                                                       
001d28   f003                                                                                                               
001d2a   0e02     MOVLW     0x2                                                                                             
001d2c   5e02     SUBWF     0x2,0x1,0x0                                                                                     
001d2e   0e00     MOVLW     0x0                                                                                             
001d30   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
001d32   0ef7     MOVLW     0xf7                                                                                            
001d34   c002     MOVFF     0x2,0xfdb                                                                                       
001d36   ffdb                                                                                                               
001d38   0ef8     MOVLW     0xf8                                                                                            
001d3a   c003     MOVFF     0x3,0xfdb                                                                                       
001d3c   ffdb                                                                                                               
001d3e   c002     MOVFF     0x2,0xfe9                                                                                       
001d40   ffe9                                                                                                               
001d42   c003     MOVFF     0x3,0xfea                                                                                       
001d44   ffea                                                                                                               
001d46   dad6     RCALL     0x22f4                                                                                          
001d48   dac5     RCALL     0x22d4                                                                                          
001d4a   0e0c     MOVLW     0xc                                                                                             
001d4c   6adb     CLRF      0xdb,0x0                                                                                        
001d4e   0e0d     MOVLW     0xd                                                                                             
001d50   6adb     CLRF      0xdb,0x0                                                                                        
                                                       _do_integer_conversion:                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* default precision is 1 */                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d52   0e06     MOVLW     0x6                          if (!have_precision)                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d54   50db     MOVF      0xdb,0x0,0x0                                                                                    
001d56   e105     BNZ       0x1d62                                                                                          
001d58   0e01     MOVLW     0x1                            precision = 1;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d5a   6ef3     MOVWF     0xf3,0x0                                                                                        
001d5c   0e05     MOVLW     0x5                                                                                             
001d5e   cff3     MOVFF     0xff3,0xfdb                                                                                     
001d60   ffdb                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         {                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d62   0e15     MOVLW     0x15                           unsigned char digit_cnt = 0;                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d64   6adb     CLRF      0xdb,0x0                                                                                        
001d66   0e16     MOVLW     0x16                           unsigned char prefix_cnt = 0;                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d68   6adb     CLRF      0xdb,0x0                                                                                        
                                                           unsigned char sign_char;                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* A 32 bit number will require at most 32 digits in the         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              string representation (binary format). */                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           char buf[33];                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* Start storing digits least-significant first */               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d6a   50d9     MOVF      0xd9,0x0,0x0                   char *q = &buf[31];                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d6c   0f37     ADDLW     0x37                                                                                            
001d6e   6e00     MOVWF     0x0,0x0                                                                                         
001d70   0e00     MOVLW     0x0                                                                                             
001d72   20da     ADDWFC    0xda,0x0,0x0                                                                                    
001d74   6e01     MOVWF     0x1,0x0                                                                                         
001d76   0e39     MOVLW     0x39                                                                                            
001d78   c000     MOVFF     0x0,0xfdb                                                                                       
001d7a   ffdb                                                                                                               
001d7c   0e3a     MOVLW     0x3a                                                                                            
001d7e   c001     MOVFF     0x1,0xfdb                                                                                       
001d80   ffdb                                                                                                               
                                                           /* null terminate the string */                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d82   0e38     MOVLW     0x38                           buf[32] = '\0';                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d84   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d86   0e08     MOVLW     0x8                            space_cnt = 0;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d88   6adb     CLRF      0xdb,0x0                                                                                        
001d8a   0e0a     MOVLW     0xa                            size = 10;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d8c   daae     RCALL     0x22ea                                                                                          
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d8e   50df     MOVF      0xdf,0x0,0x0                   switch (c)                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d90   0a78     XORLW     0x78                                                                                            
001d92   e012     BZ        0x1db8                                                                                          
001d94   0a20     XORLW     0x20                                                                                            
001d96   e010     BZ        0x1db8                                                                                          
001d98   0a28     XORLW     0x28                                                                                            
001d9a   e00c     BZ        0x1db4                                                                                          
001d9c   0a20     XORLW     0x20                                                                                            
001d9e   e00a     BZ        0x1db4                                                                                          
001da0   0a3f     XORLW     0x3f                                                                                            
001da2   e006     BZ        0x1db0                                                                                          
001da4   0a0d     XORLW     0xd                                                                                             
001da6   e002     BZ        0x1dac                                                                                          
001da8   0a20     XORLW     0x20                                                                                            
001daa   e108     BNZ       0x1dbc                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'b':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'B':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dac   0e02     MOVLW     0x2                                size = 2;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dae   d005     BRA       0x1dba                             break;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'o':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001db0   0e08     MOVLW     0x8                                size = 8;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001db2   d003     BRA       0x1dba                             break;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'p':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'P':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               /* from here on out, treat 'p' conversions just              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  like 'x' conversions. */                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001db4   0e08     MOVLW     0x8                                c += 'x' - 'p';                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001db6   26df     ADDWF     0xdf,0x1,0x0                                                                                    
                                                               /* fall through */                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'x':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'X':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001db8   0e10     MOVLW     0x10                               size = 16;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dba   da97     RCALL     0x22ea                                                                                          
0022ea   6ef3     MOVWF     0xf3,0x0                                                                                        
0022ec   0e07     MOVLW     0x7                                                                                             
0022ee   cff3     MOVFF     0xff3,0xfdb                                                                                     
0022f0   ffdb                                                                                                               
0022f2   0012     RETURN    0x0                                                                                             
                                                               break;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if it's an unsigned conversion, we should ignore the          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              ' ' and '+' flags */                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dbc   0e03     MOVLW     0x3                            if (!(flags & _FLAG_SIGNED))                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dbe   bedb     BTFSC     0xdb,0x7,0x0                                                                                    
001dc0   d002     BRA       0x1dc6                                                                                          
001dc2   92db     BCF       0xdb,0x1,0x0                     flags &= ~(_FLAG_PLUS | _FLAG_SPACE);                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dc4   94db     BCF       0xdb,0x2,0x0                                                                                    
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if it's a negative value, we need to negate the               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              unsigned version before we convert to text. Using             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              unsigned for this allows us to (ab)use the 2's                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              complement system to avoid overflow and be able to            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              adequately handle LONG_MIN.                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              We'll figure out what sign character to print, if             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              any, here as well. */                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dc6   50db     MOVF      0xdb,0x0,0x0                   if (flags & _FLAG_SIGNED && ((long) larg < 0))                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dc8   0b80     ANDLW     0x80                                                                                            
001dca   e026     BZ        0x1e18                                                                                          
001dcc   da8a     RCALL     0x22e2                                                                                          
001dce   0e03     MOVLW     0x3                                                                                             
001dd0   50eb     MOVF      0xeb,0x0,0x0                                                                                    
001dd2   0a00     XORLW     0x0                                                                                             
001dd4   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
001dd6   d002     BRA       0x1ddc                                                                                          
001dd8   90d8     BCF       0xd8,0x0,0x0                                                                                    
001dda   d008     BRA       0x1dec                                                                                          
001ddc   0e00     MOVLW     0x0                                                                                             
001dde   5cee     SUBWF     0xee,0x0,0x0                                                                                    
001de0   0e00     MOVLW     0x0                                                                                             
001de2   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001de4   0e00     MOVLW     0x0                                                                                             
001de6   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001de8   0e00     MOVLW     0x0                                                                                             
001dea   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001dec   e215     BC        0x1e18                                                                                          
0022e2   50d9     MOVF      0xd9,0x0,0x0                                                                                    
0022e4   0f0a     ADDLW     0xa                                                                                             
0022e6   ef05     GOTO      0x240a                                                                                          
0022e8   f012                                                                                                               
00240a   6ee9     MOVWF     0xe9,0x0                                                                                        
00240c   0e00     MOVLW     0x0                                                                                             
00240e   20da     ADDWFC    0xda,0x0,0x0                                                                                    
002410   6eea     MOVWF     0xea,0x0                                                                                        
002412   0012     RETURN    0x0                                                                                             
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dee   da11     RCALL     0x2212                             larg = -(long) larg;                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001df0   6844     SETF      0x44,0x0                                                                                        
001df2   6845     SETF      0x45,0x0                                                                                        
001df4   6846     SETF      0x46,0x0                                                                                        
001df6   6847     SETF      0x47,0x0                                                                                        
001df8   ec41     CALL      0x5882,0x0                                                                                      
001dfa   f02c                                                                                                               
001dfc   0e0a     MOVLW     0xa                                                                                             
001dfe   c03b     MOVFF     0x3b,0xfdb                                                                                      
001e00   ffdb                                                                                                               
001e02   0e0b     MOVLW     0xb                                                                                             
001e04   c03c     MOVFF     0x3c,0xfdb                                                                                      
001e06   ffdb                                                                                                               
001e08   0e0c     MOVLW     0xc                                                                                             
001e0a   c03d     MOVFF     0x3d,0xfdb                                                                                      
001e0c   ffdb                                                                                                               
001e0e   0e0d     MOVLW     0xd                                                                                             
001e10   c03e     MOVFF     0x3e,0xfdb                                                                                      
001e12   ffdb                                                                                                               
002212   0e0a     MOVLW     0xa                                                                                             
002214   cfdb     MOVFF     0xfdb,0x3f                                                                                      
002216   f03f                                                                                                               
002218   0e0b     MOVLW     0xb                                                                                             
00221a   cfdb     MOVFF     0xfdb,0x40                                                                                      
00221c   f040                                                                                                               
00221e   0e0c     MOVLW     0xc                                                                                             
002220   cfdb     MOVFF     0xfdb,0x41                                                                                      
002222   f041                                                                                                               
002224   0e0d     MOVLW     0xd                                                                                             
002226   cfdb     MOVFF     0xfdb,0x42                                                                                      
002228   f042                                                                                                               
00222a   0012     RETURN    0x0                                                                                             
001e14   0e2d     MOVLW     0x2d                               sign_char = '-';                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               ++digit_cnt;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e16   d008     BRA       0x1e28                         else if (flags & _FLAG_PLUS)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e18   0e03     MOVLW     0x3                                                                                             
001e1a   a2db     BTFSS     0xdb,0x1,0x0                                                                                    
001e1c   d002     BRA       0x1e22                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e1e   0e2b     MOVLW     0x2b                               sign_char = '+';                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               ++digit_cnt;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e20   d003     BRA       0x1e28                         else if (flags & _FLAG_SPACE)                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e22   a4db     BTFSS     0xdb,0x2,0x0                                                                                    
001e24   d008     BRA       0x1e36                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e26   0e20     MOVLW     0x20                               sign_char = ' ';                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e28   6ef3     MOVWF     0xf3,0x0                                                                                        
001e2a   0e17     MOVLW     0x17                                                                                            
001e2c   cff3     MOVFF     0xff3,0xfdb                                                                                     
001e2e   ffdb                                                                                                               
001e30   0e15     MOVLW     0x15                               ++digit_cnt;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e32   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e34   d002     BRA       0x1e3a                         else                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e36   0e17     MOVLW     0x17                             sign_char = '\0';                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e38   6adb     CLRF      0xdb,0x0                                                                                        
                                                           /* get the digits for the actual number. If the                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision is zero and the value is zero, the result           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              is no characters. */                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e3a   0e05     MOVLW     0x5                            if (precision || larg)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e3c   50db     MOVF      0xdb,0x0,0x0                                                                                    
001e3e   e103     BNZ       0x1e46                                                                                          
001e40   d9b5     RCALL     0x21ac                                                                                          
001e42   e101     BNZ       0x1e46                                                                                          
001e44   d089     BRA       0x1f58                                                                                          
0021ac   0e0a     MOVLW     0xa                                                                                             
0021ae   cfdb     MOVFF     0xfdb,0x0                                                                                       
0021b0   f000                                                                                                               
0021b2   0e0b     MOVLW     0xb                                                                                             
0021b4   cfdb     MOVFF     0xfdb,0x1                                                                                       
0021b6   f001                                                                                                               
0021b8   0e0c     MOVLW     0xc                                                                                             
0021ba   cfdb     MOVFF     0xfdb,0x2                                                                                       
0021bc   f002                                                                                                               
0021be   0e0d     MOVLW     0xd                                                                                             
0021c0   cfdb     MOVFF     0xfdb,0x3                                                                                       
0021c2   f003                                                                                                               
0021c4   5000     MOVF      0x0,0x0,0x0                                                                                     
0021c6   1001     IORWF     0x1,0x0,0x0                                                                                     
0021c8   1002     IORWF     0x2,0x0,0x0                                                                                     
0021ca   1003     IORWF     0x3,0x0,0x0                                                                                     
0021cc   0012     RETURN    0x0                                                                                             
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               do                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                 {                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e46   0efa     MOVLW     0xfa                                   cval = s_digits[larg % size];                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e48   6e00     MOVWF     0x0,0x0                                                                                         
001e4a   0e5b     MOVLW     0x5b                                                                                            
001e4c   6e01     MOVWF     0x1,0x0                                                                                         
001e4e   0e00     MOVLW     0x0                                                                                             
001e50   6e02     MOVWF     0x2,0x0                                                                                         
001e52   0e07     MOVLW     0x7                                                                                             
001e54   cfdb     MOVFF     0xfdb,0x3                                                                                       
001e56   f003                                                                                                               
001e58   6a04     CLRF      0x4,0x0                                                                                         
001e5a   6a05     CLRF      0x5,0x0                                                                                         
001e5c   6a06     CLRF      0x6,0x0                                                                                         
001e5e   c003     MOVFF     0x3,0x44                                                                                        
001e60   f044                                                                                                               
001e62   c004     MOVFF     0x4,0x45                                                                                        
001e64   f045                                                                                                               
001e66   c005     MOVFF     0x5,0x46                                                                                        
001e68   f046                                                                                                               
001e6a   c006     MOVFF     0x6,0x47                                                                                        
001e6c   f047                                                                                                               
001e6e   d9d1     RCALL     0x2212                                                                                          
001e70   ec45     CALL      0x5a8a,0x0                                                                                      
001e72   f02d                                                                                                               
001e74   5000     MOVF      0x0,0x0,0x0                                                                                     
001e76   243b     ADDWF     0x3b,0x0,0x0                                                                                    
001e78   6ef3     MOVWF     0xf3,0x0                                                                                        
001e7a   5001     MOVF      0x1,0x0,0x0                                                                                     
001e7c   203c     ADDWFC    0x3c,0x0,0x0                                                                                    
001e7e   6ef4     MOVWF     0xf4,0x0                                                                                        
001e80   5002     MOVF      0x2,0x0,0x0                                                                                     
001e82   203d     ADDWFC    0x3d,0x0,0x0                                                                                    
001e84   6ef8     MOVWF     0xf8,0x0                                                                                        
001e86   cff4     MOVFF     0xff4,0xff7                                                                                     
001e88   fff7                                                                                                               
001e8a   cff3     MOVFF     0xff3,0xff6                                                                                     
001e8c   fff6                                                                                                               
001e8e   0008     TBLRD                                                                                                     
001e90   0e09     MOVLW     0x9                                                                                             
001e92   cff5     MOVFF     0xff5,0xfdb                                                                                     
001e94   ffdb                                                                                                               
001e96   0e58     MOVLW     0x58                                   if (c == 'X' && cval >= 'a')                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e98   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001e9a   e10f     BNZ       0x1eba                                                                                          
001e9c   0e61     MOVLW     0x61                                                                                            
001e9e   6ef3     MOVWF     0xf3,0x0                                                                                        
001ea0   0e09     MOVLW     0x9                                                                                             
001ea2   d979     RCALL     0x2196                                                                                          
001ea4   e30a     BNC       0x1eba                                                                                          
002196   cfdb     MOVFF     0xfdb,0xff4                                                                                     
002198   fff4                                                                                                               
00219a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00219c   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
00219e   0012     RETURN    0x0                                                                                             
001ea6   0e20     MOVLW     0x20                                     cval -= 'a' - 'A';                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ea8   6e00     MOVWF     0x0,0x0                                                                                         
001eaa   0e09     MOVLW     0x9                                                                                             
001eac   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
001eae   ffe7                                                                                                               
001eb0   5000     MOVF      0x0,0x0,0x0                                                                                     
001eb2   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
001eb4   0e09     MOVLW     0x9                                                                                             
001eb6   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001eb8   ffdb                                                                                                               
001eba   0e07     MOVLW     0x7                                    larg /= size;                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ebc   cfdb     MOVFF     0xfdb,0x0                                                                                       
001ebe   f000                                                                                                               
001ec0   6a01     CLRF      0x1,0x0                                                                                         
001ec2   6a02     CLRF      0x2,0x0                                                                                         
001ec4   6a03     CLRF      0x3,0x0                                                                                         
001ec6   da0d     RCALL     0x22e2                                                                                          
001ec8   c000     MOVFF     0x0,0x44                                                                                        
001eca   f044                                                                                                               
001ecc   c001     MOVFF     0x1,0x45                                                                                        
001ece   f045                                                                                                               
001ed0   c002     MOVFF     0x2,0x46                                                                                        
001ed2   f046                                                                                                               
001ed4   c003     MOVFF     0x3,0x47                                                                                        
001ed6   f047                                                                                                               
001ed8   cfee     MOVFF     0xfee,0x3f                                                                                      
001eda   f03f                                                                                                               
001edc   cfee     MOVFF     0xfee,0x40                                                                                      
001ede   f040                                                                                                               
001ee0   cfee     MOVFF     0xfee,0x41                                                                                      
001ee2   f041                                                                                                               
001ee4   cfef     MOVFF     0xfef,0x42                                                                                      
001ee6   f042                                                                                                               
001ee8   ec45     CALL      0x5a8a,0x0                                                                                      
001eea   f02d                                                                                                               
001eec   c042     MOVFF     0x42,0xfed                                                                                      
001eee   ffed                                                                                                               
001ef0   c041     MOVFF     0x41,0xfed                                                                                      
001ef2   ffed                                                                                                               
001ef4   c040     MOVFF     0x40,0xfed                                                                                      
001ef6   ffed                                                                                                               
001ef8   c03f     MOVFF     0x3f,0xfef                                                                                      
001efa   ffef                                                                                                               
001efc   0e39     MOVLW     0x39                                   *q-- = cval;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001efe   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001f00   ffe9                                                                                                               
001f02   06db     DECF      0xdb,0x1,0x0                                                                                    
001f04   0e3a     MOVLW     0x3a                                                                                            
001f06   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001f08   ffea                                                                                                               
001f0a   e201     BC        0x1f0e                                                                                          
001f0c   06db     DECF      0xdb,0x1,0x0                                                                                    
001f0e   0e09     MOVLW     0x9                                                                                             
001f10   cfdb     MOVFF     0xfdb,0xfef                                                                                     
001f12   ffef                                                                                                               
001f14   0e15     MOVLW     0x15                                   ++digit_cnt;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f16   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                                 }                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f18   d949     RCALL     0x21ac                             while (larg);                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f1a   e195     BNZ       0x1e46                                                                                          
                                                               /* if the '#' flag was specified and we're dealing           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  with an 'o', 'b', 'B', 'x', or 'X' conversion,            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  we need a bit more. */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f1c   0e03     MOVLW     0x3                                if (flags & _FLAG_OCTO)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f1e   a6db     BTFSS     0xdb,0x3,0x0                                                                                    
001f20   d01d     BRA       0x1f5c                                                                                          
                                                                 {                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f22   0e6f     MOVLW     0x6f                                   if (c == 'o')                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f24   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001f26   e106     BNZ       0x1f34                                                                                          
                                                                     {                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                       /* per the standard, for octal, the '#' flag         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                          makes the precision be at least one more          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                          than the number of digits in the number */        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f28   d9bf     RCALL     0x22a8                                     if (precision <= digit_cnt)                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f2a   e318     BNC       0x1f5c                                                                                          
0022a8   0e05     MOVLW     0x5                                                                                             
0022aa   cfdb     MOVFF     0xfdb,0x0                                                                                       
0022ac   f000                                                                                                               
0022ae   0e15     MOVLW     0x15                                                                                            
0022b0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0022b2   80d8     BSF       0xd8,0x0,0x0                                                                                    
0022b4   5400     SUBFWB    0x0,0x0,0x0                                                                                     
0022b6   0012     RETURN    0x0                                                                                             
001f2c   0e15     MOVLW     0x15                                         precision = digit_cnt + 1;                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f2e   28db     INCF      0xdb,0x0,0x0                                                                                    
001f30   da59     RCALL     0x23e4                                                                                          
                                                                     }                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f32   d014     BRA       0x1f5c                                 else if (c == 'x'                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f34   0e78     MOVLW     0x78                                                                                            
001f36   5cdf     SUBWF     0xdf,0x0,0x0                                    || c == 'X' || c == 'b' || c == 'B')            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f38   e009     BZ        0x1f4c                                                                                          
001f3a   0e58     MOVLW     0x58                                                                                            
001f3c   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001f3e   e006     BZ        0x1f4c                                                                                          
001f40   0e62     MOVLW     0x62                                                                                            
001f42   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001f44   e003     BZ        0x1f4c                                                                                          
001f46   0e42     MOVLW     0x42                                                                                            
001f48   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001f4a   e108     BNZ       0x1f5c                                                                                          
001f4c   0e02     MOVLW     0x2                                      prefix_cnt = 2;                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f4e   6ef3     MOVWF     0xf3,0x0                                                                                        
001f50   0e16     MOVLW     0x16                                                                                            
001f52   cff3     MOVFF     0xff3,0xfdb                                                                                     
001f54   ffdb                                                                                                               
                                                                 }                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f56   d002     BRA       0x1f5c                         else                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f58   0e15     MOVLW     0x15                             digit_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f5a   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* The leading zero count depends on whether the '0'             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              flag was specified or not. If it was not, then the            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              count is the difference between the specified                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision and the number of digits (including the             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              sign character, if any) to be printed; otherwise,             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              it's as if the precision were equal to the max of             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the specified precision and the field width. If a             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision was specified, the '0' flag is ignored,             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              however. */                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f5c   0e03     MOVLW     0x3                            if ((flags & _FLAG_ZERO) && (width > precision)                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f5e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001f60   0b10     ANDLW     0x10                                                                                            
001f64   0e04     MOVLW     0x4                                                                                             
001f66   cfdb     MOVFF     0xfdb,0x0                                                                                       
001f68   f000                                                                                                               
001f6a   0e05     MOVLW     0x5                                                                                             
001f6c   50db     MOVF      0xdb,0x0,0x0                                                                                    
001f6e   80d8     BSF       0xd8,0x0,0x0                                                                                    
001f70   5400     SUBFWB    0x0,0x0,0x0                                                                                     
001f62   e00e     BZ        0x1f80                             && !have_precision)                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f72   e206     BC        0x1f80                                                                                          
001f74   0e06     MOVLW     0x6                                                                                             
001f76   50db     MOVF      0xdb,0x0,0x0                                                                                    
001f78   e103     BNZ       0x1f80                                                                                          
001f7a   0e04     MOVLW     0x4                              precision = width;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f7c   50db     MOVF      0xdb,0x0,0x0                                                                                    
001f7e   da32     RCALL     0x23e4                                                                                          
                                                           /* for the rest of the processing, precision contains            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the leading zero count for the conversion. */                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f80   d993     RCALL     0x22a8                         if (precision > digit_cnt)                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f82   e20a     BC        0x1f98                                                                                          
001f84   0e05     MOVLW     0x5                              precision -= digit_cnt;                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f86   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
001f88   ffe7                                                                                                               
001f8a   0e15     MOVLW     0x15                                                                                            
001f8c   50db     MOVF      0xdb,0x0,0x0                                                                                    
001f8e   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
001f90   0e05     MOVLW     0x5                                                                                             
001f92   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001f94   ffdb                                                                                                               
001f96   d002     BRA       0x1f9c                         else                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f98   0e05     MOVLW     0x5                              precision = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f9a   6adb     CLRF      0xdb,0x0                                                                                        
                                                           /* the space count is the difference between the field           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              width and the digit count plus the leading zero               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              count. If the width is less than the digit count              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              plus the leading zero count, the space count is               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              zero. */                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f9c   0e04     MOVLW     0x4                            if (width > precision + digit_cnt + prefix_cnt)                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f9e   cfdb     MOVFF     0xfdb,0x0                                                                                       
001fa0   f000                                                                                                               
001fa2   0e16     MOVLW     0x16                                                                                            
001fa4   d943     RCALL     0x222c                                                                                          
001fa6   80d8     BSF       0xd8,0x0,0x0                                                                                    
001fa8   5400     SUBFWB    0x0,0x0,0x0                                                                                     
001faa   e214     BC        0x1fd4                                                                                          
00222c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00222e   ffe6                                                                                                               
002230   0e15     MOVLW     0x15                                                                                            
002232   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002234   ffe6                                                                                                               
002236   0e05     MOVLW     0x5                                                                                             
002238   50db     MOVF      0xdb,0x0,0x0                                                                                    
00223a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00223c   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
00223e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002240   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
002242   0012     RETURN    0x0                                                                                             
                                                             space_cnt =                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fac   0e16     MOVLW     0x16                               width - precision - digit_cnt - prefix_cnt;                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fae   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001fb0   ffe6                                                                                                               
001fb2   0e15     MOVLW     0x15                                                                                            
001fb4   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001fb6   ffe6                                                                                                               
001fb8   0e04     MOVLW     0x4                                                                                             
001fba   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001fbc   ffe6                                                                                                               
001fbe   0e05     MOVLW     0x5                                                                                             
001fc0   50db     MOVF      0xdb,0x0,0x0                                                                                    
001fc2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001fc4   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
001fc6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001fc8   80d8     BSF       0xd8,0x0,0x0                                                                                    
001fca   54e7     SUBFWB    0xe7,0x0,0x0                                                                                    
001fcc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001fce   80d8     BSF       0xd8,0x0,0x0                                                                                    
001fd0   54e7     SUBFWB    0xe7,0x0,0x0                                                                                    
001fd2   d95d     RCALL     0x228e                                                                                          
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* for output, we check the justification, if it's               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              right justified and the space count is positive, we           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              emit the space characters first. */                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fd4   0e03     MOVLW     0x3                            if (!(flags & _FLAG_MINUS) && space_cnt)                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fd6   50db     MOVF      0xdb,0x0,0x0                                                                                    
001fd8   0b01     ANDLW     0x1                                                                                             
001fda   e10b     BNZ       0x1ff2                                                                                          
001fdc   0e08     MOVLW     0x8                                                                                             
001fde   50db     MOVF      0xdb,0x0,0x0                                                                                    
001fe0   e008     BZ        0x1ff2                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fe2   d8b0     RCALL     0x2144                             if (s_put_n_chars (handle, space_cnt, ' '))                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fe4   e001     BZ        0x1fe8                                                                                          
001fe6   d08d     BRA       0x2102                                                                                          
                                                                 return EOF;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fe8   0e08     MOVLW     0x8                                count += space_cnt;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fea   50db     MOVF      0xdb,0x0,0x0                                                                                    
001fec   d8bc     RCALL     0x2166                                                                                          
001fee   0e08     MOVLW     0x8                                space_cnt = 0;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ff0   6adb     CLRF      0xdb,0x0                                                                                        
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have a sign character to print, that comes              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              next */                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ff2   0e17     MOVLW     0x17                           if (sign_char)                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ff4   50db     MOVF      0xdb,0x0,0x0                                                                                    
001ff6   e007     BZ        0x2006                                                                                          
001ff8   d986     RCALL     0x2306                           if (putc (sign_char, handle) == EOF)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ffa   0e17     MOVLW     0x17                                                                                            
001ffc   d9ef     RCALL     0x23dc                                                                                          
001ffe   e103     BNZ       0x2006                                                                                          
002000   1c01     COMF      0x1,0x0,0x0                                                                                     
002002   e101     BNZ       0x2006                                                                                          
002004   d07e     BRA       0x2102                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have a prefix (0b, 0B, 0x or 0X), that's next */        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002006   0e16     MOVLW     0x16                           if (prefix_cnt)                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002008   50db     MOVF      0xdb,0x0,0x0                                                                                    
00200a   e016     BZ        0x2038                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00200c   d97c     RCALL     0x2306                             if (putc ('0', handle) == EOF)                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00200e   0e30     MOVLW     0x30                                                                                            
002010   6ee6     MOVWF     0xe6,0x0                                                                                        
002012   d89d     RCALL     0x214e                                                                                          
002014   e102     BNZ       0x201a                                                                                          
002016   1c01     COMF      0x1,0x0,0x0                                                                                     
002018   e074     BZ        0x2102                                                                                          
                                                                 return EOF;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00201a   d975     RCALL     0x2306                             if (putc (c, handle) == EOF)                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00201c   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
00201e   ffe6                                                                                                               
002020   ecff     CALL      0x57fe,0x0                                                                                      
002022   f02b                                                                                                               
002024   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002026   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002028   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00202a   cff4     MOVFF     0xff4,0x1                                                                                       
00202c   f001                                                                                                               
00202e   0100     MOVLB     0x0                                                                                             
002030   1cf3     COMF      0xf3,0x0,0x0                                                                                    
002032   e102     BNZ       0x2038                                                                                          
002034   1c01     COMF      0x1,0x0,0x0                                                                                     
002036   e065     BZ        0x2102                                                                                          
                                                                 return EOF;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have leading zeros, they follow. the prefix, if any     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              is included in the number of digits when determining how      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              many leading zeroes are needed. */                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002038   0e05     MOVLW     0x5                            if (precision > prefix_cnt)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00203a   cfdb     MOVFF     0xfdb,0x0                                                                                       
00203c   f000                                                                                                               
00203e   0e16     MOVLW     0x16                                                                                            
002040   50db     MOVF      0xdb,0x0,0x0                                                                                    
002042   80d8     BSF       0xd8,0x0,0x0                                                                                    
002044   5400     SUBFWB    0x0,0x0,0x0                                                                                     
002046   e209     BC        0x205a                                                                                          
002048   0e05     MOVLW     0x5                              precision -= prefix_cnt;                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00204a   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
00204c   ffe7                                                                                                               
00204e   0e16     MOVLW     0x16                                                                                            
002050   50db     MOVF      0xdb,0x0,0x0                                                                                    
002052   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
002054   0e05     MOVLW     0x5                                                                                             
002056   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
002058   ffdb                                                                                                               
00205a   0e30     MOVLW     0x30                           if (s_put_n_chars (handle, precision, '0'))                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00205c   6ee6     MOVWF     0xe6,0x0                                                                                        
00205e   0e05     MOVLW     0x5                                                                                             
002060   d9c9     RCALL     0x23f4                                                                                          
002062   e14f     BNZ       0x2102                                                                                          
0023a6   ecf9     CALL      0x17f2,0x0                                                                                      
0023a8   f00b                                                                                                               
0023aa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0023ac   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0023ae   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0023b0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0023b2   0900     IORLW     0x0                                                                                             
0023b4   0012     RETURN    0x0                                                                                             
0023f4   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0023f6   ffe6                                                                                                               
0023f8   df86     RCALL     0x2306                                                                                          
0023fa   efd3     GOTO      0x23a6                                                                                          
0023fc   f011                                                                                                               
                                                             return EOF;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* print the actual number */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002064   0e39     MOVLW     0x39                           for (cval = *++q; cval; cval = *++q)                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002066   2adb     INCF      0xdb,0x1,0x0                                                                                    
002068   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00206a   ffe9                                                                                                               
00206c   0e3a     MOVLW     0x3a                                                                                            
00206e   e301     BNC       0x2072                                                                                          
002070   2adb     INCF      0xdb,0x1,0x0                                                                                    
002072   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002074   ffea                                                                                                               
002076   0e09     MOVLW     0x9                                                                                             
002078   cfef     MOVFF     0xfef,0xfdb                                                                                     
00207a   ffdb                                                                                                               
00207c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00207e   e00e     BZ        0x209c                                                                                          
00208c   0e39     MOVLW     0x39                                                                                            
00208e   2adb     INCF      0xdb,0x1,0x0                                                                                    
002090   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002092   ffe9                                                                                                               
002094   0e3a     MOVLW     0x3a                                                                                            
002096   e3ed     BNC       0x2072                                                                                          
002098   2adb     INCF      0xdb,0x1,0x0                                                                                    
00209a   d7eb     BRA       0x2072                                                                                          
002080   d942     RCALL     0x2306                           if (putc (cval, handle) == EOF)                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002082   0e09     MOVLW     0x9                                                                                             
002084   d9ab     RCALL     0x23dc                                                                                          
002086   e102     BNZ       0x208c                                                                                          
002088   1c01     COMF      0x1,0x0,0x0                                                                                     
00208a   e03b     BZ        0x2102                                                                                          
0023dc   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0023de   ffe6                                                                                                               
0023e0   efa7     GOTO      0x214e                                                                                          
0023e2   f010                                                                                                               
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if there are any spaces left, they go to right-pad            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the field */                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00209c   d853     RCALL     0x2144                         if (s_put_n_chars (handle, space_cnt, ' '))                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00209e   e131     BNZ       0x2102                                                                                          
002144   0e20     MOVLW     0x20                                                                                            
002146   6ee6     MOVWF     0xe6,0x0                                                                                        
002148   0e08     MOVLW     0x8                                                                                             
00214a   effa     GOTO      0x23f4                                                                                          
00214c   f011                                                                                                               
002306   0efc     MOVLW     0xfc                                                                                            
002308   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00230a   ffe6                                                                                                               
00230c   0efd     MOVLW     0xfd                                                                                            
00230e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002310   ffe6                                                                                                               
002312   0012     RETURN    0x0                                                                                             
                                                             return EOF;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020a0   0e16     MOVLW     0x16                           count += precision + digit_cnt + space_cnt + prefix_cnt;         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020a2   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0020a4   ffe6                                                                                                               
0020a6   0e08     MOVLW     0x8                                                                                             
0020a8   d8c1     RCALL     0x222c                                                                                          
0020aa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0020ac   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
0020ae   d85b     RCALL     0x2166                                                                                          
002166   6e00     MOVWF     0x0,0x0                                                                                         
002168   6a01     CLRF      0x1,0x0                                                                                         
00216a   50d9     MOVF      0xd9,0x0,0x0                                                                                    
00216c   0f01     ADDLW     0x1                                                                                             
00216e   d94d     RCALL     0x240a                                                                                          
002170   5000     MOVF      0x0,0x0,0x0                                                                                     
002172   26ee     ADDWF     0xee,0x1,0x0                                                                                    
002174   5001     MOVF      0x1,0x0,0x0                                                                                     
002176   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
002178   0012     RETURN    0x0                                                                                             
                                                         }                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020b0   d02e     BRA       0x210e                       break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'n':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020b2   0e07     MOVLW     0x7                          switch (size)                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020b4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0020b6   0a03     XORLW     0x3                                                                                             
0020b8   e01c     BZ        0x20f2                                                                                          
0020ba   0a01     XORLW     0x1                                                                                             
0020bc   e014     BZ        0x20e6                                                                                          
0020be   0a03     XORLW     0x3                                                                                             
0020c0   e007     BZ        0x20d0                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_LONG:                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020d0   d8f3     RCALL     0x22b8                           *(long *) va_arg (ap, long *) = count;                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020d2   6a05     CLRF      0x5,0x0                                                                                         
0020d4   ae03     BTFSS     0x3,0x7,0x0                                                                                     
0020d6   d002     BRA       0x20dc                                                                                          
0020d8   6804     SETF      0x4,0x0                                                                                         
0020da   6805     SETF      0x5,0x0                                                                                         
0020dc   d82a     RCALL     0x2132                                                                                          
0020de   d8ba     RCALL     0x2254                                                                                          
0020e0   c005     MOVFF     0x5,0xfee                                                                                       
0020e2   ffee                                                                                                               
002254   50ee     MOVF      0xee,0x0,0x0                                                                                    
002256   cfef     MOVFF     0xfef,0xfea                                                                                     
002258   ffea                                                                                                               
00225a   6ee9     MOVWF     0xe9,0x0                                                                                        
00225c   c002     MOVFF     0x2,0xfee                                                                                       
00225e   ffee                                                                                                               
002260   c003     MOVFF     0x3,0xfee                                                                                       
002262   ffee                                                                                                               
002264   c004     MOVFF     0x4,0xfee                                                                                       
002266   ffee                                                                                                               
002268   0012     RETURN    0x0                                                                                             
0022b8   0e01     MOVLW     0x1                                                                                             
0022ba   cfdb     MOVFF     0xfdb,0x2                                                                                       
0022bc   f002                                                                                                               
0022be   0e02     MOVLW     0x2                                                                                             
0022c0   cfdb     MOVFF     0xfdb,0x3                                                                                       
0022c2   f003                                                                                                               
0022c4   6a04     CLRF      0x4,0x0                                                                                         
0022c6   0012     RETURN    0x0                                                                                             
0020e4   d014     BRA       0x210e                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_SHLONG:                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020e6   d8e8     RCALL     0x22b8                           *(short long *) va_arg (ap, short long *) = count;             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020e8   be03     BTFSC     0x3,0x7,0x0                                                                                     
0020ea   6804     SETF      0x4,0x0                                                                                         
0020ec   d822     RCALL     0x2132                                                                                          
0020ee   d8b2     RCALL     0x2254                                                                                          
0020f0   d00e     BRA       0x210e                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_BYTE:                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020f2   d961     RCALL     0x23b6                           *(signed char *) va_arg (ap, signed char *) = count;           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020f4   cfdb     MOVFF     0xfdb,0xfef                                                                                     
0020f6   ffef                                                                                                               
0020f8   d00a     BRA       0x210e                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           default:                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020c2   d979     RCALL     0x23b6                           *(int *) va_arg (ap, int *) = count;                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020c4   cfdb     MOVFF     0xfdb,0xfee                                                                                     
0020c6   ffee                                                                                                               
0020c8   0e02     MOVLW     0x2                                                                                             
0020ca   cfdb     MOVFF     0xfdb,0xfed                                                                                     
0020cc   ffed                                                                                                               
0023b6   debd     RCALL     0x2132                                                                                          
0023b8   50ee     MOVF      0xee,0x0,0x0                                                                                    
0023ba   cfef     MOVFF     0xfef,0xfea                                                                                     
0023bc   ffea                                                                                                               
0023be   6ee9     MOVWF     0xe9,0x0                                                                                        
0023c0   0e01     MOVLW     0x1                                                                                             
0023c2   0012     RETURN    0x0                                                                                             
                                                             break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020ce   d01f     BRA       0x210e                       break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       default:                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* undefined behaviour. we do nothing */                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                 else                                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020fa   d979     RCALL     0x23ee                   if (putc (c, handle) == EOF)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020fc   e105     BNZ       0x2108                                                                                          
0020fe   1c01     COMF      0x1,0x0,0x0                                                                                     
002100   e103     BNZ       0x2108                                                                                          
00214e   ecff     CALL      0x57fe,0x0                                                                                      
002150   f02b                                                                                                               
002152   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002154   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002156   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002158   cff3     MOVFF     0xff3,0x0                                                                                       
00215a   f000                                                                                                               
00215c   cff4     MOVFF     0xff4,0x1                                                                                       
00215e   f001                                                                                                               
002160   0100     MOVLB     0x0                                                                                             
002162   1cf3     COMF      0xf3,0x0,0x0                                                                                    
002164   0012     RETURN    0x0                                                                                             
002394   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
002396   ffe6                                                                                                               
002398   efa7     GOTO      0x214e                                                                                          
00239a   f010                                                                                                               
0023ee   df8b     RCALL     0x2306                                                                                          
0023f0   efca     GOTO      0x2394                                                                                          
0023f2   f011                                                                                                               
002102   68f3     SETF      0xf3,0x0                   return EOF;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002104   68f4     SETF      0xf4,0x0                                                                                        
002106   d010     BRA       0x2128                                                                                          
002108   d8fa     RCALL     0x22fe                   ++count;                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00210a   e301     BNC       0x210e                                                                                          
00210c   2adb     INCF      0xdb,0x1,0x0                                                                                    
0022fe   0e01     MOVLW     0x1                                                                                             
002300   2adb     INCF      0xdb,0x1,0x0                                                                                    
002302   0e02     MOVLW     0x2                                                                                             
002304   0012     RETURN    0x0                                                                                             
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                               }                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002114   0e01     MOVLW     0x1              return count;                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002116   cfdb     MOVFF     0xfdb,0x0                                                                                       
002118   f000                                                                                                               
00211a   0e02     MOVLW     0x2                                                                                             
00211c   cfdb     MOVFF     0xfdb,0x1                                                                                       
00211e   f001                                                                                                               
002120   c000     MOVFF     0x0,0xff3                                                                                       
002122   fff3                                                                                                               
002124   c001     MOVFF     0x1,0xff4                                                                                       
002126   fff4                                                                                                               
002128   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00212a   ffe1                                                                                                               
00212c   cfda     MOVFF     0xfda,0xfe2                                                                                     
00212e   ffe2                                                                                                               
002130   d0cb     BRA       0x22c8                                                                                          
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b68   0eff     MOVLW     0xff                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b6a   24e1     ADDWF     0xe1,0x0,0x0             addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b6c   6ee9     MOVWF     0xe9,0x0                 movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b6e   0eff     MOVLW     0xff                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b70   20e2     ADDWFC    0xe2,0x0,0x0             addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b72   6eea     MOVWF     0xea,0x0                 movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b78   0e2f     MOVLW     0x2f                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b7a   64ef     CPFSGT    0xef,0x0                 cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b7c   d004     BRA       0x5b86                 bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b7e   0e3a     MOVLW     0x3a                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b80   60ef     CPFSLT    0xef,0x0                 cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b82   d001     BRA       0x5b86                 bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; @name isdigit                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;The {\bf isdigit} function tests the value of {\bf c} to determine if it        C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;is a digit character. A digit character is defined as any decimal digit         C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;character (0, 1, 2, 3, 4, 5, 6, 7, 8, 9).                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; int isdigit (int c);                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           CTYPE CODE                                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           isdigit                                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             global isdigit                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; Proceedure: Use FSR0 as pointer to 'c'                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;         Return with result in PROD                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Clear out result                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005b64   6af3     CLRF      0xf3,0x0                 clrf      PRODL, ACCESS                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005b66   6af4     CLRF      0xf4,0x0       	  clrf      PRODH, ACCESS                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Set FSR0 = FSR1 - 2 ( location of 'c')                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     StkSetPtrToOffset FSR0L,-1                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005b74   66ed     TSTFSZ    0xed,0x0                 tstfsz    POSTDEC0,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005b76   d007     BRA       0x5b86                   bra       jNoMatch            ; upper byte must be 0 to match          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Test for condition                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     jmpFleL   INDF0,ACCESS,'0'-1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     jmpFgeL   INDF0,ACCESS,'9'+1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           jMatch:                                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005b84   2af3     INCF      0xf3,0x1,0x0             incf      PRODL,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           jNoMatch:                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005b86   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                           int _user_putc (char c);                                                         C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                           int _usart_putc (char c);                                                        C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                           int                                                                              C:\mcc18\src\TRADIT~1\stdclib\putc.c
0057fe   cfd9     MOVFF     0xfd9,0xfe6    putc (char c, FILE * f)                                                          C:\mcc18\src\TRADIT~1\stdclib\putc.c
005800   ffe6                                                                                                               
005802   cfda     MOVFF     0xfda,0xfe6                                                                                     
005804   ffe6                                                                                                               
005806   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005808   ffd9                                                                                                               
00580a   cfe2     MOVFF     0xfe2,0xfda                                                                                     
00580c   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                             /* if the handle > 0 then it's a pointer to a string buffer address.           C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                specifically, a pointer to a pointer referencing the next available         C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                byte in the buffer, to which the character will be stored. */               C:\mcc18\src\TRADIT~1\stdclib\putc.c
00580e   0efb     MOVLW     0xfb             if ((int) f >= 0)                                                              C:\mcc18\src\TRADIT~1\stdclib\putc.c
005810   cfdb     MOVFF     0xfdb,0x0                                                                                       
005812   f000                                                                                                               
005814   0efc     MOVLW     0xfc                                                                                            
005816   cfdb     MOVFF     0xfdb,0x1                                                                                       
005818   f001                                                                                                               
00581a   0100     MOVLB     0x0                                                                                             
00581c   0e80     MOVLW     0x80                                                                                            
00581e   1401     ANDWF     0x1,0x0,0x0                                                                                     
005820   e11a     BNZ       0x5856                                                                                          
005822   0efb     MOVLW     0xfb               return (unsigned char) (*(*(char **) f)++ = c);                              C:\mcc18\src\TRADIT~1\stdclib\putc.c
005824   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
005826   ffe9                                                                                                               
005828   0efc     MOVLW     0xfc                                                                                            
00582a   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00582c   ffea                                                                                                               
00582e   cfee     MOVFF     0xfee,0xff3                                                                                     
005830   fff3                                                                                                               
005832   cfed     MOVFF     0xfed,0xff4                                                                                     
005834   fff4                                                                                                               
005836   2aee     INCF      0xee,0x1,0x0                                                                                    
005838   0e00     MOVLW     0x0                                                                                             
00583a   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
00583c   cff3     MOVFF     0xff3,0xfe9                                                                                     
00583e   ffe9                                                                                                               
005840   cff4     MOVFF     0xff4,0xfea                                                                                     
005842   ffea                                                                                                               
005844   0efd     MOVLW     0xfd                                                                                            
005846   cfdb     MOVFF     0xfdb,0xfef                                                                                     
005848   ffef                                                                                                               
00584a   50ef     MOVF      0xef,0x0,0x0                                                                                    
00584c   6a01     CLRF      0x1,0x0                                                                                         
00584e   6ef3     MOVWF     0xf3,0x0                                                                                        
005850   c001     MOVFF     0x1,0xff4                                                                                       
005852   fff4                                                                                                               
005854   d010     BRA       0x5876                                                                                          
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
005856   0efb     MOVLW     0xfb             if ((signed char) f == (signed char) _H_USART)                                 C:\mcc18\src\TRADIT~1\stdclib\putc.c
005858   50db     MOVF      0xdb,0x0,0x0                                                                                    
00585a   08fe     SUBLW     0xfe                                                                                            
00585c   e106     BNZ       0x586a                                                                                          
                                               {                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                 /* the invocation of the USART function is direct, as it's our             C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    default value and we want it to work without needing any                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    direct initialization from the user */                                  C:\mcc18\src\TRADIT~1\stdclib\putc.c
00585e   0efd     MOVLW     0xfd                 return _usart_putc (c);                                                    C:\mcc18\src\TRADIT~1\stdclib\putc.c
005860   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
005862   ffe6                                                                                                               
005864   ece4     CALL      0x5bc8,0x0                                                                                      
005866   f02d                                                                                                               
005868   d005     BRA       0x5874                                                                                          
                                               }                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                             else                                                                           C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                               {                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                 /* the invocation of the user function is direct, not via a                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    function pointer. We just put an empty definition of the                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    function in the library and if the user specifies their own             C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    version it will be found first and the library definition will          C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    be ignored. We do it this way because it's generally better to          C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    spend 2 bytes of program memory for the RETURN instruction of           C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    the empty function than three bytes of data memory for the              C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    function pointer. */                                                    C:\mcc18\src\TRADIT~1\stdclib\putc.c
00586a   0efd     MOVLW     0xfd                 return _user_putc (c);                                                     C:\mcc18\src\TRADIT~1\stdclib\putc.c
00586c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00586e   ffe6                                                                                                               
005870   ec49     CALL      0x4c92,0x0                                                                                      
005872   f026                                                                                                               
005874   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                               }                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
005876   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\stdclib\putc.c
005878   cfe5     MOVFF     0xfe5,0xfda                                                                                     
00587a   ffda                                                                                                               
00587c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00587e   ffd9                                                                                                               
005880   0012     RETURN    0x0                                                                                             
                                             include <P18CXXX.INC>                                                          C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18F8722.INC
                                                                                                                            C:\MCC18\MPASM\P18F8722.INC
                                           ;==========================================================================      C:\MCC18\MPASM\P18F8722.INC
                                           ;  $Id: P18F8722.INC,v 1.2 2004/10/06 22:25:07 curtiss Exp $                     C:\MCC18\MPASM\P18F8722.INC
                                           ;  MPASM PIC18F8722 processor include                                            C:\MCC18\MPASM\P18F8722.INC
                                           ;                                                                                C:\MCC18\MPASM\P18F8722.INC
                                           ;  (c) Copyright 1999-2004 Microchip Technology, All rights reserved             C:\MCC18\MPASM\P18F8722.INC
                                           ;==========================================================================      C:\MCC18\MPASM\P18F8722.INC
                                                                                                                            C:\MCC18\MPASM\P18F8722.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18F8722.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1220                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1320                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                             GLOBAL _usart_putc                                                             C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           STDIO CODE                                                                       C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           _usart_putc                                                                      C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005bc8   0eff     MOVLW     0xff                         MOVLW     0xff                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005bca   50e3     MOVF      0xe3,0x0,0x0                 MOVF      PLUSW1, w                                                C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005bcc   baac     BTFSC     0xac,0x5,0x0                 BTFSC     TXSTA, 0x5                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005bce   d004     BRA       0x5bd8                       BRA       loop                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005bd0   6aaf     CLRF      0xaf,0x0                     CLRF      SPBRG                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005bd2   8eab     BSF       0xab,0x7,0x0                 BSF       RCSTA, 0x7                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005bd4   8aac     BSF       0xac,0x5,0x0                 BSF       TXSTA, 0x5                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __USE_PORTB                                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                         BCF       TRISB, 0x1                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005bd6   9c94     BCF       0x94,0x6,0x0                 BCF       TRISC, 0x6                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005bd8   a2ac     BTFSS     0xac,0x1,0x0   loop:         BTFSS     TXSTA, 0x1                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005bda   d7fe     BRA       0x5bd8                       BRA       loop                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005bdc   6ead     MOVWF     0xad,0x0                     MOVWF     TXREG                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005bde   6ef3     MOVWF     0xf3,0x0                     MOVWF     PRODL                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005be0   6af4     CLRF      0xf4,0x0                     CLRF      PRODL + 1                                                C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005be2   0012     RETURN    0x0                          RETURN                                                             C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           ; $Id: strlen.asm,v 1.1 2003/12/09 22:53:20 GrosbaJ Exp $                        C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00595a   0efe     MOVLW     0xfe                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00595c   cfe3     MOVFF     0xfe3,0xfe9              movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00595e   ffe9                                                                                                               
005960   0eff     MOVLW     0xff                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005962   cfe3     MOVFF     0xfe3,0xfea              movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005964   ffea                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; @name strlen                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;``The {\bf strlen} function computes the length of the string pointed           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;to by {\bf s}.''                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;Stack usage: 2 bytes. Re-entrant.                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;@param s pointer to the string                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;@return ``The {\bf strlen} function returns the number of characters            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;that precede the terminating null character.''                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; size_t strlen (const char *s);                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           STRING CODE                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           strlen                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             global strlen                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; Proceedure: Use FSR0 for 's' and use PROD for 'n'.                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Load FSR0 by copying 's' off stack into FSR0.                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                     Stk2CpyToReg -2,FSR0L                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Clear PROD                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005966   6af3     CLRF      0xf3,0x0                 clrf      PRODL,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005968   6af4     CLRF      0xf4,0x0                 clrf      PRODH,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
00596a   52ee     MOVF      0xee,0x1,0x0             movf      POSTINC0,F,ACCESS   ; set Z flag                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
00596c   e003     BZ        0x5974                   bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
00596e   4af3     INFSNZ    0xf3,0x1,0x0   	  infsnz    PRODL, F, ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005970   2af4     INCF      0xf4,0x1,0x0   	  incf      PRODH, F, ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005972   d7fb     BRA       0x596a                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005974   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; $Id: slenpgm.asm,v 1.3 2004/04/01 17:25:11 kuhrtt Exp $                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005976   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005978   cfe3     MOVFF     0xfe3,0xff8              movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00597a   fff8                                                                                                               
00597c   52e5     MOVF      0xe5,0x1,0x0             movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00597e   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005980   cfe3     MOVFF     0xfe3,0xff7              movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005982   fff7                                                                                                               
005984   52e5     MOVF      0xe5,0x1,0x0             movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005986   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005988   cfe3     MOVFF     0xfe3,0xff6              movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00598a   fff6                                                                                                               
00598c   52e5     MOVF      0xe5,0x1,0x0             movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0059ac   0efd     MOVLW     0xfd                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0059ae   cfe3     MOVFF     0xfe3,0x40               movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0059b0   f040                                                                                                               
0059b2   0efe     MOVLW     0xfe                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0059b4   cfe3     MOVFF     0xfe3,0x41               movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0059b6   f041                                                                                                               
0059b8   0eff     MOVLW     0xff                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0059ba   cfe3     MOVFF     0xfe3,0x42               movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0059bc   f042                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00599a   0efd     MOVLW     0xfd                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00599c   2ae3     INCF      0xe3,0x1,0x0             incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00599e   e105     BNZ       0x59aa                   bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0059a0   0efe     MOVLW     0xfe                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0059a2   2ae3     INCF      0xe3,0x1,0x0             incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0059a4   e102     BNZ       0x59aa                   bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0059a6   0eff     MOVLW     0xff                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0059a8   2ae3     INCF      0xe3,0x1,0x0             incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; @name strlenpgm                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;``The {\bf strlenpgm} function computes the length of the string pointed        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;to by {\bf s}.''                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;@param s pointer to the string                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;@return ``The {\bf strlenpgm} function returns the number of characters         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;that precede the terminating null character.''                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; sizerom_t strlenpgm (const rom char *s);                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             extern AARGB2                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           STRING CODE                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           strlenpgm                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             global strlenpgm                                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #ifdef __SMALL__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            messg "strlenpgm - SMALL"                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; Procedure: Use TBLPTR for 's' and create 'n' on stack.  Return 'n' in          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; AARGB0:AARGB1:AARGB2.                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Load TBLPTR by POPing 's' off stack.                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk2PopToReg TBLPTRL                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTDEC1,ACCESS    ; provide extra byte below stack          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Push 3 bytes of 0 onto stack. This is initial value of 'n'.                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     movf      TABLAT, F, ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3Inc   -3                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3CpyToReg -3, AARGB2                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #ifdef __LARGE__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            messg "strlenpgm - LARGE"                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; Procedure: Use TBLPTR for 's' and create 'n' on stack.  Return 'n' in          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; AARGB0:AARGB1:AARGB2.                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Load TBLPTR by POPing 's' off stack.                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3PopToReg TBLPTRL                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Push 3 bytes of 0 onto stack. This is initial value of 'n'.                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
00598e   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005990   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005992   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005994   0009     TBLRDPOSTINC                       tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005996   52f5     MOVF      0xf5,0x1,0x0             movf      TABLAT, F, ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005998   e009     BZ        0x59ac                   bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3Inc   -3                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0059aa   d7f4     BRA       0x5994                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3CpyToReg -3, AARGB2                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0059be   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            error "No Model Specified"                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
